Index: public/top/archive/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"Posts Archive\" />\n    <meta property=\"og:title\" content=\"Posts Archive\" />\n    <meta property=\"twitter:title\" content=\"Posts Archive\" />\n    \n\n    \n    <meta name=\"description\" content=\"Archive of historical posts.\">\n    <meta property=\"og:description\" content=\"Archive of historical posts.\" />\n    <meta property=\"twitter:description\" content=\"Archive of historical posts.\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Posts Archive | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/top/archive/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n<div class=\"container\">\n    <div class=\"row\">\n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            <div class=\"archive-list\">\n                \n                \n                    \n                    \n                        \n                            \n                            <h1 class=\"title is-4 has-text-weight-normal\">2022</h1>\n                        \n                    \n                        \n                    \n                        \n                    \n                        \n                    \n\n                    <ul>\n                    \n                        <li>\n                            <span>01/14</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\">\n                                算法(4)-动态规划\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>01/09</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\">\n                                算法(3)-二叉树\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>01/04</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\">\n                                算法(2)-链表\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>01/04</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\">\n                                算法(1)-栈和队列\n                            </a>\n                        </li>\n                    \n                    </ul>\n\n                \n                \n                \n                    \n                    \n                        \n                            \n                            <h1 class=\"title is-4 has-text-weight-normal\">2021</h1>\n                        \n                    \n                        \n                    \n                        \n                    \n                        \n                    \n\n                    <ul>\n                    \n                        <li>\n                            <span>11/17</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\">\n                                算法(0)-base\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>09/17</span> — \n                            <a href=\"/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\">\n                                Kubernetes-基础\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>09/14</span> — \n                            <a href=\"/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\">\n                                Datadog Agent部署\n                            </a>\n                        </li>\n                    \n                        <li>\n                            <span>09/08</span> — \n                            <a href=\"/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\">\n                                算法-排序\n                            </a>\n                        </li>\n                    \n                    </ul>\n\n                \n                \n            </div>\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n<hr />\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/top/archive/index.html b/public/top/archive/index.html
--- a/public/top/archive/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/top/archive/index.html	(date 1694095063351)
@@ -458,7 +458,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/top/about/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/top/about/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            \n            <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\">\n            \n                <h1 id=\"oneday-oneday\">OneDay OneDay</h1>\n<blockquote>\n<p>You Only Live Once.</p>\n</blockquote>\n<p>Do not go gentle into that good night,\nOld age should burn and rave at close of day;\nRage, rage against the dying of the light.</p>\n<p>Though wise men at their end know dark is right,\nBecause their words had forked no lightning they\nDo not go gentle into that good night.</p>\n<p>Good men, the last wave by, crying how bright\nTheir frail deeds might have danced in a green bay,\nRage, rage against the dying of the light.</p>\n<p>Wild men who caught and sang the sun in flight,\nAnd learn, too late, they grieved it on its way,\nDo not go gentle into that good night.</p>\n<p>Grave men, near death, who see with blinding sight\nBlind eyes could blaze like meteors and be gay,\nRage, rage against the dying of the light.</p>\n<p>And you, my father, there on the sad height,\nCurse, bless, me now with your fierce tears, I pray.\nDo not go gentle into that good night.\nRage, rage against the dying of the light.</p>\n\n            \n             \n            \n\n            \n            </div>\n            \n            \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/top/about/index.html b/public/top/about/index.html
--- a/public/top/about/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/top/about/index.html	(date 1694095063355)
@@ -387,7 +387,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n\t<meta name=\"generator\" content=\"Hugo 0.91.2\" />\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>EdgarDing Blog | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n  \n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\">\n        <h2 class=\"post-title\">\n            算法(4)-动态规划\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(4)-动态规划 Introduction **「What」**动态规划（Dynamic Programming，DP），动态规划是一种过把原问题分解为相对简单的子\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, January 14, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\">\n        <h2 class=\"post-title\">\n            算法(3)-二叉树\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(3)-二叉树 Introduction 「What」每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Sunday, January 9, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\">\n        <h2 class=\"post-title\">\n            算法(2)-链表\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(2)-链表 Introduction 「What」链表是一种递归的数据结构，它或者为NULL，或者指向一个节点(node)的引用，该节点含有一个元素和指向另一条\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\">\n        <h2 class=\"post-title\">\n            算法(1)-栈和队列\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(1)-栈与队列 Introduction 栈与队列特点： 栈stack：LIFO后进先出 队列queue：FIFO先进先出 API定义： public interface Queue&lt;Item&gt; implements Iterable&lt;Item&gt; { void enqueue(Item item); Item dequeue(); boolean isEmpty(); int size();\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\">\n        <h2 class=\"post-title\">\n            算法(0)-base\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(0)-base Introduction 该文主要总结一些有关算法的基础，其具体的分类等在之后进行，这也是对自己刷题这么久来的一次系统化整理。该篇主要进行一些前\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, November 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\">\n        <h2 class=\"post-title\">\n            Kubernetes-基础\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Kubernetes-基础 2021/09/14 前言 由于有段时间没接触Kubernetes，最近面试运维开发的时候又经常问到，因此重新体系的入门下Kuberne\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, September 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\">\n        <h2 class=\"post-title\">\n            Datadog Agent部署\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Datadog Agent 部署 Datadog Cluster Agent提供了一种简化的集中式方法来收集集群级别的监视数据。通过充当API服务器和基于节点的代理之间的代理，群集代理有助于减轻\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, September 14, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\">\n        <h2 class=\"post-title\">\n            算法-排序\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法-排序 Introduction 以下为自己整理总结的常用排序算法与实现。 时间复杂度一次完整的计算：http://discrete.gr/complexity/ 基\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, September 8, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n\n            \n\n\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/index.html b/public/index.html
--- a/public/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/index.html	(date 1694095063488)
@@ -549,7 +549,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/search/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Searches | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/search/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n<script src=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.0/dist/instantsearch.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/moment@2.22.2/min/moment.min.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.0/dist/instantsearch.min.css\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.0/dist/instantsearch-theme-algolia.min.css\">\n\n<div id=\"search-searchbar\"></div>\n <div class=\"post-list\" id=\"search-hits\">\n </div>\n\n<script>\nconst search = instantsearch({\n  appId: '',\n  indexName: '',\n  apiKey: ''\n});\n\nconst hitTemplate = function(hit) {\n\n\n  let date = '';\n  if (hit.date) {\n    date = moment.unix(hit.date).format('MMM D, YYYY');\n  }\n  let url = `${hit.url}#${hit.anchor}`;\n  const title = hit._highlightResult.title.value;\n\n  let breadcrumbs = '';\n  if (hit._highlightResult.headings) {\n    breadcrumbs = hit._highlightResult.headings.map(match => {\n      return `<span class=\"post-breadcrumb\">${match.value}</span>`\n    }).join(' > ')\n  }\n\n  let content = \"\" ; \n  if (hit._highlightResult.content){\n      content = hit._highlightResult.content.value;\n  }\n  else{\n      content = hit.summary;\n  }\n\n\n  return `\n    <div class=\"post-item\">\n      <span class=\"post-meta\">${date}</span>\n      <h2><a class=\"post-link\" href=\"${url}\">${title}</a></h2>\n      <a href=\"${url}\" class=\"post-breadcrumbs\">${breadcrumbs}</a>\n      <div class=\"post-snippet\">${content}</div>\n    </div>\n  `;\n}\n\n\nsearch.addWidget(\n  instantsearch.widgets.searchBox({\n    container: '#search-searchbar',\n    placeholder: 'Search into posts...',\n    poweredBy: true // This is required if you're on the free Community plan\n  })\n);\n\nsearch.addWidget(\n  instantsearch.widgets.hits({\n    container: '#search-hits',\n    templates: {\n      item: hitTemplate\n    }\n  })\n);\n\nsearch.start();\n</script>\n\n<style>\n.ais-search-box {\n  max-width: 100%;\n  margin-bottom: 15px;\n}\n.post-item {\n  margin-bottom: 30px;\n}\n.post-link .ais-Highlight {\n  color: #111;\n  font-style: normal;\n  text-decoration: underline;\n}\n.post-breadcrumbs {\n  color: #424242;\n  display: block;\n}\n.post-breadcrumb {\n  font-size: 18px;\n  color: #424242;\n}\n.post-breadcrumb .ais-Highlight {\n  font-weight: bold;\n  font-style: normal;\n}\n.post-snippet .ais-Highlight {\n  color: #2a7ae2;\n  font-style: normal;\n  font-weight: bold;\n}\n.post-snippet img {\n  display: none;\n}\n</style>\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/search/index.html b/public/search/index.html
--- a/public/search/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/search/index.html	(date 1694095063364)
@@ -463,7 +463,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/tags/算法/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法\" />\n    <meta property=\"og:title\" content=\"算法\" />\n    <meta property=\"twitter:title\" content=\"算法\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/tags/%E7%AE%97%E6%B3%95/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n  \n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\">\n        <h2 class=\"post-title\">\n            算法(4)-动态规划\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(4)-动态规划 Introduction **「What」**动态规划（Dynamic Programming，DP），动态规划是一种过把原问题分解为相对简单的子\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, January 14, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\">\n        <h2 class=\"post-title\">\n            算法(3)-二叉树\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(3)-二叉树 Introduction 「What」每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Sunday, January 9, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\">\n        <h2 class=\"post-title\">\n            算法(2)-链表\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(2)-链表 Introduction 「What」链表是一种递归的数据结构，它或者为NULL，或者指向一个节点(node)的引用，该节点含有一个元素和指向另一条\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\">\n        <h2 class=\"post-title\">\n            算法(1)-栈和队列\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(1)-栈与队列 Introduction 栈与队列特点： 栈stack：LIFO后进先出 队列queue：FIFO先进先出 API定义： public interface Queue&lt;Item&gt; implements Iterable&lt;Item&gt; { void enqueue(Item item); Item dequeue(); boolean isEmpty(); int size();\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\">\n        <h2 class=\"post-title\">\n            算法(0)-base\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(0)-base Introduction 该文主要总结一些有关算法的基础，其具体的分类等在之后进行，这也是对自己刷题这么久来的一次系统化整理。该篇主要进行一些前\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, November 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\">\n        <h2 class=\"post-title\">\n            算法-排序\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法-排序 Introduction 以下为自己整理总结的常用排序算法与实现。 时间复杂度一次完整的计算：http://discrete.gr/complexity/ 基\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, September 8, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n\n            \n\n\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/tags/算法/index.html b/public/tags/算法/index.html
--- a/public/tags/算法/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/tags/算法/index.html	(date 1694095063489)
@@ -502,7 +502,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法3-二叉树-suan-fa-3-er-cha-shu/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法(3)-二叉树\" />\n    <meta property=\"og:title\" content=\"算法(3)-二叉树\" />\n    <meta property=\"twitter:title\" content=\"算法(3)-二叉树\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法(3)-二叉树 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法(3)-二叉树</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Sunday, January 9, 2022\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法3-二叉树\">算法(3)-二叉树</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>「What」每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次序，不可被随意颠倒。</p>\n<p>二叉树节点的定义：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">TreeNode</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n  \tTreeNode left<span style=\"color:#ff79c6\">;</span>\n  \tTreeNode right<span style=\"color:#ff79c6\">;</span>\n  \t\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">TreeNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">,</span> TreeNode left<span style=\"color:#ff79c6\">,</span> TreeNode right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n\t\t\t\t<span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n      \t<span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">;</span>\n      \t<span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> right<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"二叉树性质\"><strong>二叉树性质</strong></h3>\n<ol>\n<li>二叉树的第<em>i</em>层至多有${2^{i-1}}$个结点。</li>\n<li>**空二叉树：**注意，二叉树的节点数为空。</li>\n<li>**满二叉树：**深度为<em>k</em>（k≥0）的二叉树至多总共有$2^{k+1}-1$个结点（定义根结点所在的深度为<em>k0=0）</em>，而总结拥有结点的数符合的，称“满二叉树”。\n<ol>\n<li>节点个数：共有$2^k-1$个结点</li>\n<li>节点奇偶：结点个数一定为奇数（仅有根结点（k=1层）为一个结点）</li>\n<li>i层节点个数：第<em>i</em>层有$2^{i-1}$结点</li>\n<li>叶子个数：有$2^{k-1}$个叶子</li>\n</ol>\n</li>\n<li>**完全二叉树：**在一颗二叉树中，若除最后一层外的其余层都是满的，并且要么最后一层是满的，要么右边结点缺少若干结点，称“完全二叉树”，具有n个结点完全二叉树的深度为$log2n+1$，且结点数≥$2^{k-1}$。</li>\n</ol>\n<h3 id=\"二叉树的衍生\">二叉树的衍生</h3>\n<p><strong>二叉搜索树</strong></p>\n<p>「What」二叉搜索树（Binary Search Tree）也称为二叉查找树、有序二叉树或者排序二叉树，指<strong>一颗空树</strong>或者具有以下性质的二叉树：</p>\n<ol>\n<li>若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；</li>\n<li>若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值；</li>\n<li>任意节点的左、右子树也分别为二叉查找树；</li>\n</ol>\n<p>BST的优势在于查找、插入的时间复杂度较低为O(logn)。BST是基础线性数据结构，用于构建更为抽象的数据结构。搜索、插入、删除的复杂度等于树高，期望O(logn)，最坏为O(n)（数列有序，树会退化成线性表）。改进版的二叉树可以使得树高为O(logn)，从降低最坏效率。如AVL树、</p>\n<p><strong>AVL树</strong></p>\n<p>「What」AVL（Adelson-Velsky and Landis Tree）一种自平衡二叉树，在AVL树中，任一节点对应的两棵子树的最大高度差为1，因此它也被称为高度平衡树。</p>\n<ul>\n<li>\n<p>查找、插入和删除在平均和最坏情况下的时间复杂度都是O(logn)，增加和删除元素的操作可能需要借助由一次或多次树旋转，来实现树的重新平衡。</p>\n</li>\n<li>\n<p>节点平衡因子：由左子树的高度减去它的右子树高度（绝对值）≤1则被认为是平衡的。</p>\n</li>\n</ul>\n<p><strong>红黑树</strong></p>\n<p>「What」红黑树（Red-Black Tree）是一种自平衡二叉查找树，有着良好的最坏情况运行时间，并且在实践中高效：可以在O(logn)时间内完成查找、插入和删除，这里的<em>n</em>是树中的元素数目。红黑树的每个节点不同于AVL树，都是带有颜色属性的二叉查找树，颜色为红色或黑色。</p>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/code-interview/red-black-tree.png\" alt=\"Image\">\n\n</p>\n<ol>\n<li>节点为red或black</li>\n<li>根为black</li>\n<li>所有叶子都是black（叶子是NIL节点）</li>\n<li>每个red节点必须有两个black的子节点（从每个叶子到根的所有路径上不能有两个red节点）</li>\n<li>从任一节点到每个叶子节点的所有叶子的所有简单路径都包含相同的black节点</li>\n</ol>\n<p>这些约束确保了红黑树的关键特性：从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。因为操作比如插入、删除和查找某个值的最坏情况时间都要求与树的高度成比例，这个在高度上的理论上限允许红黑树在最坏情况下都是高效的，而不同于普通的二叉查找树。</p>\n<h2 id=\"二叉树的遍历\">二叉树的遍历</h2>\n<ul>\n<li>\n<p>前序遍历：根左右</p>\n</li>\n<li>\n<p>中序遍历：左根右</p>\n</li>\n<li>\n<p>后续遍历：左右根</p>\n</li>\n</ul>\n<p>二叉树的思想运用十分广泛，几乎涉及递归都可以抽象成二叉树的问题进行解决，树的所有问题几乎都离不开递归遍历的框架，而二叉树遍历的精髓其实也是如何写递归的关键：</p>\n<ol>\n<li>定义是什么，即该递归函数的最终结果是什么，我们相信这个函数定义，而不需要先过多考虑其细节。</li>\n<li>base case：该函数何时终止，即终止条件。</li>\n</ol>\n<p>根据函数定义递归调用子节点。</p>\n<p>其回溯的模版：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">backtrack</span><span style=\"color:#ff79c6\">(</span>Parameter p<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>终止条件<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n      <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n  \t过程\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>如计算二叉树的节点个数，将其分解，其实就是后序遍历，从叶子累加到根得出总节点数：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#6272a4\">// 定义：count(root) 返回以 root 为根的树有多少节点\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">count</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#6272a4\">// base case\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#6272a4\">// 自己加上子树的节点数就是整棵树的节点数（思考每个节点应该做什么）\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">return</span> 1 <span style=\"color:#ff79c6\">+</span> count<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> count<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"递归\">递归</h4>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">traversal</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 前序处理位置\n</span><span style=\"color:#6272a4\"></span>        traversal<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 中序处理位置\n</span><span style=\"color:#6272a4\"></span>        traversal<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 后续处理位置\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>层序遍历的递归版本：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">levelOrderRec</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> height<span style=\"color:#ff79c6\">,</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>height <span style=\"color:#ff79c6\">&gt;=</span> res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;());</span>\n        <span style=\"color:#ff79c6\">}</span>\n        res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>height<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n        levelOrderRec<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> height <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        levelOrderRec<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> height <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"迭代\">迭代</h4>\n<p>前序遍历：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">preorderTraversal</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayDeque<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// 记录根\n</span><span style=\"color:#6272a4\"></span>                res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>中序遍历：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">inorderTraversal</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayDeque<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#6272a4\">// 记录\n</span><span style=\"color:#6272a4\"></span>            res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>后序遍历与前两种不同，因为最后才遍历根，而遍历根前需要遍历右，因此需要对父亲节点进行记录，否则没法向后迭代：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">postorderTraversal</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayDeque<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">,</span> pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#6272a4\">// 若无右节点 -》 记录\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#6272a4\">// 若pre==cur -》 到根 -》 记录 \n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#6272a4\">// 否则继续向右迭代\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> pre<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n                pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                cur <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#6272a4\">// 保证不会向左\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">);</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>层序遍历</strong>即BFS，关键在于通过队列进行每一层节点的记录，同时层序遍历一般用于找最短的问题上：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#50fa7b\">levelOrderTraverse</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> queue <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(!</span>queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> len <span style=\"color:#ff79c6\">=</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">();</span>\n            List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> list <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> len<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                TreeNode node <span style=\"color:#ff79c6\">=</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">poll</span><span style=\"color:#ff79c6\">();</span>\n                list<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>list<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"遍历二叉树的神级方法\">遍历二叉树的神级方法</h3>\n<blockquote>\n<p>给定一颗二叉树头节点head，完成二叉树的先序、中序和后序遍历。如果二叉树的节点为N，则要求时间复杂度为O(N)，额外空间复杂度为O(1)。</p>\n</blockquote>\n<ul>\n<li>本题的难度在于复杂度的要求，特别是空间复杂度，因为前面的方法无论是迭代还是递归都需要到O(h)的空间复杂度（h指树高，函数栈的深度）。</li>\n</ul>\n<p><strong>思路</strong></p>\n<ol>\n<li>完全不用栈结构来实现三种遍历的方法——<strong>Morris遍历</strong>。</li>\n<li>二叉树的遍历的关键在于处理完某个节点后回到上层节点，这也是无论递归还是迭代都用到了栈结构来存储上层指针。</li>\n<li>Morris遍历的实质也就是避免使用栈结构，而是让下层到上层有指针。通过让底层节点指向null的空闲指针返回上层的某个节点，从而完成下层到上层的移动。</li>\n<li>tips：空闲指针，如某些节点没有右子节点，则这些节点称为空闲指针。</li>\n<li>*Morries的遍历过程：*假设当前节点为cur，base case状态时cur就是树的头节点\n<ol>\n<li>若cur==null，停止整个过程。</li>\n<li>若cur.left==null，cur=cur.right。</li>\n<li>若cur.left!=null，cur=mostRight(cur.left)找到cur.left最右的节点，记mostRight。以下用代码进行表示</li>\n</ol>\n</li>\n</ol>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \tmostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n  \tcur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> cur<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \tmostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n  \tcur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>实现</strong></p>\n<p>Morries遍历:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">morrisTraverse</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        TreeNode mostRight <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">out</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">print</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34; &#34;</span><span style=\"color:#ff79c6\">);</span>\n            mostRight <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> cur<span style=\"color:#ff79c6\">;</span>\n                     mostRight <span style=\"color:#ff79c6\">=</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                    cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>根据Morris可以加工出前中后序三种遍历方法：</p>\n<ul>\n<li>MorriesPre:\n<ul>\n<li>对于cur只到达一次的节点（无左子树的节点），cur到达直接打印。「左」</li>\n<li>对于cur可以到达两次的节点（有左子树的节点），cur第一次到时进行打印。「根-&gt;左」</li>\n</ul>\n</li>\n<li>MorriesIn:\n<ul>\n<li>对于cur只到达一次的节点（无左子树的节点），cur到达直接打印。「左」</li>\n<li>对于cur可以到达两次的节点（有左子树的节点），cur第二次到时进行打印。「根-&gt;右」（注意，这里是和前序的区别）</li>\n</ul>\n</li>\n<li><em>MorriesPost：（该操作较为复杂）</em>\n<ul>\n<li>对于cur只到达一次的节点（无左子树的节点），直接跳过。</li>\n<li>对于cur可以到达两次的节点（有左子树的节点X），cur第一次到达X没有打印行为；当第二次到达X，逆序打印X左子树的右边界。</li>\n<li>cur遍历完成，逆序打印整个右边界。</li>\n</ul>\n</li>\n</ul>\n<p><strong>MorriesPre:</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">morrisPre</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        TreeNode mostRight <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            mostRight <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> cur<span style=\"color:#ff79c6\">;</span>\n                     mostRight <span style=\"color:#ff79c6\">=</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#6272a4\">// 第一次到达\n</span><span style=\"color:#6272a4\"></span>                    System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">out</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">print</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34; &#34;</span><span style=\"color:#ff79c6\">);</span>\n                    cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// 无左子树的节点\n</span><span style=\"color:#6272a4\"></span>                System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">out</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">print</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34; &#34;</span><span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>MorriesIn:</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">morrisIn</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        TreeNode mostRight <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            mostRight <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> cur<span style=\"color:#ff79c6\">;</span>\n                     mostRight <span style=\"color:#ff79c6\">=</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                    cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#6272a4\">// 无左子树的节点 | 第二次到达也会执行该步骤\n</span><span style=\"color:#6272a4\"></span>            System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">out</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">print</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34; &#34;</span><span style=\"color:#ff79c6\">);</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>MorriesPost:</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">morrisPost</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        TreeNode mostRight <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            mostRight <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> cur<span style=\"color:#ff79c6\">;</span>\n                     mostRight <span style=\"color:#ff79c6\">=</span> mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                    cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    mostRight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#6272a4\">// 第二次到达\n</span><span style=\"color:#6272a4\"></span>                    printRightEdge<span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 遍历完成\n</span><span style=\"color:#6272a4\"></span>        printRightEdge<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">printRightEdge</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        TreeNode tail <span style=\"color:#ff79c6\">=</span> reverseRightEdge<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n        TreeNode cur <span style=\"color:#ff79c6\">=</span> tail<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">out</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">print</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34; &#34;</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 复原树\n</span><span style=\"color:#6272a4\"></span>        reverseRightEdge<span style=\"color:#ff79c6\">(</span>tail<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#6272a4\">// 有点链表翻转的味道\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> TreeNode <span style=\"color:#50fa7b\">reverseRightEdge</span><span style=\"color:#ff79c6\">(</span>TreeNode node<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        TreeNode pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>TreeNode tmp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> node <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            tmp <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n            node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">;</span>\n            pre <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n            node <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> pre<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>测试结果</strong></p>\n<pre tabindex=\"0\"><code>原序：1,2,3,null,null,4,5\n[1][2][3, 4][5]\n前序：12345\n中序：32541\n后序：35421\nMorris遍历顺序：\n第一次遇到情况:1 \n第一次遇到情况:2 \n无左节点情况:3 \n第二次到达情况:2 \n第一次遇到情况:4 \n无左节点情况:5 \n第二次到达情况:4 \n第二次到达情况:1 \n======================\n前序：\n1 2 3 4 5 \n======================\n中序：\n3 2 5 4 1 \n======================\n后序：\n3 5 4 2 1 \n</code></pre><h2 id=\"常用操作\">常用操作</h2>\n<h3 id=\"二叉树的深度\">二叉树的深度</h3>\n<h4 id=\"最大深度\">最大深度</h4>\n<blockquote>\n<h4 id=\"104-二叉树的最大深度httpsleetcode-cncomproblemsmaximum-depth-of-binary-tree\"><a href=\"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/\">104. 二叉树的最大深度</a></h4>\n<p>难度简单1080</p>\n<p>给定一个二叉树，找出其最大深度。</p>\n<p>二叉树的深度为<strong>根节点到最远叶子节点</strong>的最长路径上的节点数。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxDepth</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>maxDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">),</span> maxDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"最小深度\">最小深度</h4>\n<blockquote>\n<h4 id=\"111-二叉树的最小深度httpsleetcode-cncomproblemsminimum-depth-of-binary-tree\"><a href=\"https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/\">111. 二叉树的最小深度</a></h4>\n<p>难度简单648</p>\n<p>给定一个二叉树，找出其最小深度。</p>\n<p>最小深度是<strong>从根节点到最近叶子节点</strong>的最短路径上的节点数量。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>一般最小深度可以很快想到BFS，从而的得到结果。当遍历到叶子节点时候，返回当前层数，也就是最小深度了。</li>\n<li>若使用DFS<code>Math.min(minDepth(root.left), minDepth(root.right)) + 1</code>，单纯计算左右最短的话，就会导致，最小深度为没有左子树的分支为最短深度。这也该问题的关键。（注意是到叶子节点）</li>\n<li>因此需要单独判断。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1:BFS</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">minDepth</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> minDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> 1<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">minDepth</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> level<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// base case: leaf node\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> level<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> ans <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ans <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>ans<span style=\"color:#ff79c6\">,</span> minDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> level <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">));</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ans <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>ans<span style=\"color:#ff79c6\">,</span> minDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> level <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">));</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Method2:DFS</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">minDepth</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> minDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#8be9fd\">int</span> r <span style=\"color:#ff79c6\">=</span> minDepth<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 1 <span style=\"color:#ff79c6\">+</span> l<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 1 <span style=\"color:#ff79c6\">+</span> r<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> 1 <span style=\"color:#ff79c6\">+</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"翻转二叉树\">翻转二叉树</h3>\n<blockquote>\n<h4 id=\"226-翻转二叉树httpsleetcode-cncomproblemsinvert-binary-tree\"><a href=\"https://leetcode-cn.com/problems/invert-binary-tree/\">226. 翻转二叉树</a></h4>\n<p>难度简单1122</p>\n<p>翻转一棵二叉树。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">invertTree</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode tmp <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n        invertTree<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n        invertTree<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>只要将每个节点进行一次翻转，就能得到完整的翻转二叉树。</li>\n</ul>\n<h3 id=\"对称二叉树\">对称二叉树</h3>\n<blockquote>\n<h4 id=\"101-对称二叉树httpsleetcode-cncomproblemssymmetric-tree\"><a href=\"https://leetcode-cn.com/problems/symmetric-tree/\">101. 对称二叉树</a></h4>\n<p>难度简单1695</p>\n<p>给你一个二叉树的根节点 <code>root</code> ， 检查它是否轴对称。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>该题关键在于，判断的时候需要<em>跨父节点</em>进行，因此单参数的递归就没法实现了。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isSymmetric</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> isSymmetric<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isSymmetric</span><span style=\"color:#ff79c6\">(</span>TreeNode l<span style=\"color:#ff79c6\">,</span> TreeNode r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> r <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> r <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span>\n            <span style=\"color:#ff79c6\">&amp;&amp;</span> isSymmetric<span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span>\n            <span style=\"color:#ff79c6\">&amp;&amp;</span> isSymmetric<span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"平衡二叉树\">平衡二叉树</h3>\n<blockquote>\n<h4 id=\"110-平衡二叉树httpsleetcode-cncomproblemsbalanced-binary-tree\"><a href=\"https://leetcode-cn.com/problems/balanced-binary-tree/\">110. 平衡二叉树</a></h4>\n<p>难度简单855</p>\n<p>给定一个二叉树，判断它是否是高度平衡的二叉树。</p>\n<p>本题中，一棵高度平衡二叉树定义为：</p>\n<blockquote>\n<p>一个二叉树<em>每个节点</em> 的左右两个子树的高度差的绝对值不超过 1 。</p>\n</blockquote>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>通过计算最大和最小的深度来进行判断。</li>\n<li>为了减少两次计算的复杂，其实只需要计算root.left和root.right的高度来同时计算差值即可。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isBalanced</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> height<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;=</span> 0<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">height</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> lh <span style=\"color:#ff79c6\">=</span> height<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#8be9fd\">int</span> rh <span style=\"color:#ff79c6\">=</span> height<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>lh <span style=\"color:#ff79c6\">&gt;=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> rh <span style=\"color:#ff79c6\">&gt;=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">abs</span><span style=\"color:#ff79c6\">(</span>lh <span style=\"color:#ff79c6\">-</span> rh<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&lt;=</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>lh<span style=\"color:#ff79c6\">,</span> rh<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>本质通过后序遍历，自底向上，若都高度差&gt;=1了，则最后递归到顶必然不可能&gt;=0。</li>\n</ul>\n<h3 id=\"填充每个节点的下一个右侧节点\">填充每个节点的下一个右侧节点</h3>\n<blockquote>\n<h4 id=\"116-填充每个节点的下一个右侧节点指针httpsleetcode-cncomproblemspopulating-next-right-pointers-in-each-node\"><a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/\">116. 填充每个节点的下一个右侧节点指针</a></h4>\n<p>难度中等639</p>\n<p>给定一个 <strong>完美二叉树</strong> ，其所有叶子节点都在同一层，每个父节点都有两个子节点。二叉树定义如下：</p>\n<pre tabindex=\"0\"><code>struct Node {\nint val;\nNode *left;\nNode *right;\nNode *next;\n}\n</code></pre><p>填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将 next 指针设置为 <code>NULL</code>。</p>\n<p>初始状态下，所有 next 指针都被设置为 <code>NULL</code>。</p>\n<p><strong>进阶：</strong></p>\n<ul>\n<li>你只能使用常量级额外空间。</li>\n<li>使用递归解题也符合要求，本题中递归程序占用的栈空间不算做额外的空间复杂度。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>对于同一棵树下的节点可以很简单的进行填充，但该题难点在于不同树节点的下一个节点填充。</li>\n<li>Method1:而每一层节点的填充，可以很快想到层序遍历，但这会开辟额外的空间出来。</li>\n<li>Method2:一个节点很难完成不同树节点的连接，但是可以通过两个节点参数来实现，且最后侧节点必定为NULL，无需我们操作。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method2:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> Node <span style=\"color:#50fa7b\">connect</span><span style=\"color:#ff79c6\">(</span>Node root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        connect<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">connect</span><span style=\"color:#ff79c6\">(</span>Node l<span style=\"color:#ff79c6\">,</span> Node r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> r <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">;</span>\n        connect<span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        connect<span style=\"color:#ff79c6\">(</span>r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        connect<span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>该题需要学会，若进行<em>跨父节点</em>的操作时，只依赖一个节点肯定是没法做到的。</li>\n</ul>\n<h3 id=\"寻找重复子树\">寻找重复子树</h3>\n<blockquote>\n<h4 id=\"652-寻找重复的子树httpsleetcode-cncomproblemsfind-duplicate-subtrees\"><a href=\"https://leetcode-cn.com/problems/find-duplicate-subtrees/\">652. 寻找重复的子树</a></h4>\n<p>难度中等354</p>\n<p>给定一棵二叉树，返回所有重复的子树。对于同一类的重复子树，你只需要返回其中任意<strong>一棵</strong>的根结点即可。</p>\n<p>两棵树重复是指它们具有相同的结构以及相同的结点值。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>对于一个节点，想要知道以自己为根的树是不是重复，需要知道什么？\n<ol>\n<li>以自己为根的树长啥样？</li>\n<li>其他节点为根的树长啥样？</li>\n</ol>\n</li>\n<li>如何才能知道自己长啥样？\n<ol>\n<li>后序遍历，通过左右最后到自己就知道长啥样了。</li>\n</ol>\n</li>\n<li>如何知道别人长啥样？\n<ol>\n<li>记录，序列化结果存储。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">findDuplicateSubtrees</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        findDuplicateSubtrees<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;(),</span> res<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> String <span style=\"color:#50fa7b\">findDuplicateSubtrees</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> Map<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> rec<span style=\"color:#ff79c6\">,</span> List<span style=\"color:#ff79c6\">&lt;</span>TreeNode<span style=\"color:#ff79c6\">&gt;</span> res<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#f1fa8c\">&#34;#&#34;</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        String left <span style=\"color:#ff79c6\">=</span> findDuplicateSubtrees<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> rec<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        String right <span style=\"color:#ff79c6\">=</span> findDuplicateSubtrees<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> rec<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        String tree <span style=\"color:#ff79c6\">=</span> left <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34;,&#34;</span> <span style=\"color:#ff79c6\">+</span> right <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34;,&#34;</span> <span style=\"color:#ff79c6\">+</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>rec<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">containsKey</span><span style=\"color:#ff79c6\">(</span>tree<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>rec<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>tree<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>    \n        <span style=\"color:#ff79c6\">}</span>\n        rec<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>tree<span style=\"color:#ff79c6\">,</span> rec<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getOrDefault</span><span style=\"color:#ff79c6\">(</span>tree<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> tree<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"树的子结构\">树的子结构</h3>\n<blockquote>\n<h4 id=\"剑指-offer-26-树的子结构httpsleetcode-cncomproblemsshu-de-zi-jie-gou-lcof\"><a href=\"https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/\">剑指 Offer 26. 树的子结构</a></h4>\n<p>难度中等436</p>\n<p>输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)</p>\n<p>B是A的子结构， 即 A中有出现和B相同的结构和节点值。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>在子树中进行遍历判断子树结构，可以想到递归的嵌套。</li>\n<li>base case: 当B为null的时候说明递归完成，返回true。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isSubStructure</span><span style=\"color:#ff79c6\">(</span>TreeNode A<span style=\"color:#ff79c6\">,</span> TreeNode B<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>A <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> B <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> isSub<span style=\"color:#ff79c6\">(</span>A<span style=\"color:#ff79c6\">,</span> B<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> isSubStructure<span style=\"color:#ff79c6\">(</span>A<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> B<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> isSubStructure<span style=\"color:#ff79c6\">(</span>A<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> B<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isSub</span><span style=\"color:#ff79c6\">(</span>TreeNode A<span style=\"color:#ff79c6\">,</span> TreeNode B<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>B <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>A <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> A<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> B<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> isSub<span style=\"color:#ff79c6\">(</span>A<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> B<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> isSub<span style=\"color:#ff79c6\">(</span>A<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> B<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>需要注意在<code>isSub()</code>中B与A判断顺序，因为B和A有可能同时到底。</li>\n</ul>\n<h3 id=\"二叉树转换为链表\">二叉树转换为链表</h3>\n<blockquote>\n<h4 id=\"114-二叉树展开为链表httpsleetcode-cncomproblemsflatten-binary-tree-to-linked-list\"><a href=\"https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/\">114. 二叉树展开为链表</a></h4>\n<p>难度中等1031</p>\n<p>给你二叉树的根结点 <code>root</code> ，请你将它展开为一个单链表：</p>\n<ul>\n<li>展开后的单链表应该同样使用 <code>TreeNode</code> ，其中 <code>right</code> 子指针指向链表中下一个结点，而左子指针始终为 <code>null</code> 。</li>\n<li>展开后的单链表应该与二叉树 <a href=\"https://baike.baidu.com/item/%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/6442839?fr=aladdin\"><strong>先序遍历</strong></a> 顺序相同。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<p>因为展开后的单链表要与二叉树的先序遍历相同，思路如下：</p>\n<ol>\n<li>将 <code>root</code> 的左子树和右子树拉平。</li>\n<li>将 <code>root</code> 的右子树接到左子树下方，然后将整个左子树作为右子树。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">flatten</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        flatten<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">);</span>\n        flatten<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 1、这时左右子树已经拉成一条链表\n</span><span style=\"color:#6272a4\"></span>        TreeNode left <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n        TreeNode right <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 2、将左子树作为右子树\n</span><span style=\"color:#6272a4\"></span>        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 3、将原先的右子树接到当前右子树的末端\n</span><span style=\"color:#6272a4\"></span>        TreeNode p <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            p <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> right<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"经典问题\">经典问题</h2>\n<h3 id=\"根据遍历序列构建二叉树问题\">根据遍历序列构建二叉树问题</h3>\n<p>该类问题的关键在于利用前序或是后序，来确定根，并通过中序遍历特性（左根右）找到根的位置以此来划分子树区间。</p>\n<h4 id=\"从前序和中序遍历构造二叉树\">从前序和中序遍历构造二叉树</h4>\n<blockquote>\n<h4 id=\"105-从前序与中序遍历序列构造二叉树httpsleetcode-cncomproblemsconstruct-binary-tree-from-preorder-and-inorder-traversal\"><a href=\"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/\">105. 从前序与中序遍历序列构造二叉树</a></h4>\n<p>难度中等1368</p>\n<p>给定一棵树的前序遍历 <code>preorder</code> 与中序遍历 <code>inorder</code>。请构造二叉树并返回其根节点。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>通过前序（根左右）来确定root，而中序遍历（左根右）在知道root的值后确定在中序的rootIndex即可找到root左右子树区间。</li>\n<li>通过HashMap来记录每个值在中序数组中的坐标。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">buildTree</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> preorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> inorder<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>inorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>inorder<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> i<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> buildTree<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> preorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span>\n        inorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> inorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> TreeNode <span style=\"color:#50fa7b\">buildTree</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> preorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> pStart<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> pEnd<span style=\"color:#ff79c6\">,</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> inorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> iStart<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> iEnd<span style=\"color:#ff79c6\">,</span> Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>pStart <span style=\"color:#ff79c6\">&gt;</span> pEnd <span style=\"color:#ff79c6\">||</span> iStart <span style=\"color:#ff79c6\">&gt;</span> iEnd<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode root <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> TreeNode<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">[</span>pStart<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>iStart <span style=\"color:#ff79c6\">!=</span> iEnd<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> rootIndex <span style=\"color:#ff79c6\">=</span> map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#8be9fd\">int</span> leftSize <span style=\"color:#ff79c6\">=</span> rootIndex <span style=\"color:#ff79c6\">-</span> iStart<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#8be9fd\">int</span> rightSize <span style=\"color:#ff79c6\">=</span> iEnd <span style=\"color:#ff79c6\">-</span> rootIndex<span style=\"color:#ff79c6\">;</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> buildTree<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> pStart <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> pStart <span style=\"color:#ff79c6\">+</span> leftSize<span style=\"color:#ff79c6\">,</span>\n            inorder<span style=\"color:#ff79c6\">,</span> iStart<span style=\"color:#ff79c6\">,</span> rootIndex <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> buildTree<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> pEnd <span style=\"color:#ff79c6\">-</span> rightSize <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> pEnd<span style=\"color:#ff79c6\">,</span>\n            inorder<span style=\"color:#ff79c6\">,</span> rootIndex <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> iEnd<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>以上注意在递归调用时，遍历区间均为闭区间。如[pStart+1, pStart+leftSize]这里无需再进行加一的。因为根节点的缘故，需要往右推1位，原式的话应该是<code>pStart+1+leftSize-1</code>。</li>\n<li><code>iStart!=iEnd</code>说明只有一个节点了，直接返回即可。</li>\n</ul>\n<h4 id=\"从中序和后序遍历构造二叉树\">从中序和后序遍历构造二叉树</h4>\n<blockquote>\n<h4 id=\"106-从中序与后序遍历序列构造二叉树httpsleetcode-cncomproblemsconstruct-binary-tree-from-inorder-and-postorder-traversal\"><a href=\"https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/\">106. 从中序与后序遍历序列构造二叉树</a></h4>\n<p>难度中等647</p>\n<p>根据一棵树的中序遍历与后序遍历构造二叉树。</p>\n<p><strong>注意:</strong>\n你可以假设树中没有重复的元素。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>该题与上题基本一样，在实现的时候只是从后往前来寻找root节点。</li>\n<li>可以套用上题的模版。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">buildTree</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> inorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> postorder<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>inorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>inorder<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> i<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> buildTree<span style=\"color:#ff79c6\">(</span>inorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> inorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span>\n        postorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> postorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> TreeNode <span style=\"color:#50fa7b\">buildTree</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> inorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> iStart<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> iEnd<span style=\"color:#ff79c6\">,</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> postorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> pStart<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> pEnd<span style=\"color:#ff79c6\">,</span> Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>iStart <span style=\"color:#ff79c6\">&gt;</span> iEnd <span style=\"color:#ff79c6\">||</span> pStart <span style=\"color:#ff79c6\">&gt;</span> pEnd<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> \n        TreeNode root <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> TreeNode<span style=\"color:#ff79c6\">(</span>postorder<span style=\"color:#ff79c6\">[</span>pEnd<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>iStart <span style=\"color:#ff79c6\">!=</span> iEnd<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> rootIndex <span style=\"color:#ff79c6\">=</span> map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#8be9fd\">int</span> leftSize <span style=\"color:#ff79c6\">=</span> rootIndex <span style=\"color:#ff79c6\">-</span> iStart<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#8be9fd\">int</span> rightSize <span style=\"color:#ff79c6\">=</span> iEnd <span style=\"color:#ff79c6\">-</span> rootIndex<span style=\"color:#ff79c6\">;</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> buildTree<span style=\"color:#ff79c6\">(</span>inorder<span style=\"color:#ff79c6\">,</span> iStart<span style=\"color:#ff79c6\">,</span> rootIndex <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span>\n            postorder<span style=\"color:#ff79c6\">,</span> pStart<span style=\"color:#ff79c6\">,</span> pStart <span style=\"color:#ff79c6\">+</span> leftSize <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> buildTree<span style=\"color:#ff79c6\">(</span>inorder<span style=\"color:#ff79c6\">,</span> rootIndex <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> iEnd<span style=\"color:#ff79c6\">,</span>\n            postorder<span style=\"color:#ff79c6\">,</span> pEnd <span style=\"color:#ff79c6\">-</span> rightSize<span style=\"color:#ff79c6\">,</span> pEnd <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>注意：这里也是一样的，涉及到后序的index需要考虑-1的情况。如这里[pStart, pStart+leftSize-1]，因为整体序列向左推1位，<code>pEnd-rightSize=pEnd-1-(rightSize-1)</code>。</li>\n</ul>\n<h4 id=\"根据前序和后序构造二叉树\">根据前序和后序构造二叉树</h4>\n<blockquote>\n<h4 id=\"889-根据前序和后序遍历构造二叉树httpsleetcode-cncomproblemsconstruct-binary-tree-from-preorder-and-postorder-traversal\"><a href=\"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/\">889. 根据前序和后序遍历构造二叉树</a></h4>\n<p>难度中等210</p>\n<p>返回与给定的前序和后序遍历匹配的任何二叉树。</p>\n<p><code>pre</code> 和 <code>post</code> 遍历中的值是不同的正整数。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>该题不同于上面两题，上面两题的关键在于利用中序的特性，而该题无法使用中序。该题的关键如何通过前序和后序来进行子树的划分。</li>\n<li>若序列如下：</li>\n</ol>\n<blockquote>\n<p><strong>示例：</strong></p>\n<pre tabindex=\"0\"><code>输入：pre = [1,2,4,5,3,6,7], post = [4,5,2,6,7,3,1]\n输出：[1,2,3,4,5,6,7]\n</code></pre></blockquote>\n<p>若进行观察可以发现：</p>\n<ol>\n<li>在前序中，若root==1时，2为root.left子树的根。</li>\n<li>在后序中，若root==1时，3位root.right子树的根。</li>\n<li>因此在第一次递归的时候可以按根左右的方式划分出[1[2,4,5][3,6,7]]的序列。后序同理[[4,5,2][6,7,3]1]。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">constructFromPrePost</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> preorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> postorder<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>postorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>postorder<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> i<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> constructFromPrePost<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> preorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span>\n        postorder<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> postorder<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> TreeNode <span style=\"color:#50fa7b\">constructFromPrePost</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> preorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> preL<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> preR<span style=\"color:#ff79c6\">,</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> postorder<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> postL<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> postR<span style=\"color:#ff79c6\">,</span> Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>preL <span style=\"color:#ff79c6\">&gt;</span> preR <span style=\"color:#ff79c6\">||</span> postL <span style=\"color:#ff79c6\">&gt;</span> postR<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode root <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> TreeNode<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">[</span>preL<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>preL <span style=\"color:#ff79c6\">!=</span> preR<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> nextIndex <span style=\"color:#ff79c6\">=</span> map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">[</span>preL <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#8be9fd\">int</span> leftSize <span style=\"color:#ff79c6\">=</span> nextIndex <span style=\"color:#ff79c6\">-</span> postL <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#8be9fd\">int</span> rightSize <span style=\"color:#ff79c6\">=</span> postR <span style=\"color:#ff79c6\">-</span> nextIndex <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> constructFromPrePost<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> preL <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> preL <span style=\"color:#ff79c6\">+</span> leftSize<span style=\"color:#ff79c6\">,</span>\n            postorder<span style=\"color:#ff79c6\">,</span> postL<span style=\"color:#ff79c6\">,</span> nextIndex<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> constructFromPrePost<span style=\"color:#ff79c6\">(</span>preorder<span style=\"color:#ff79c6\">,</span> preR <span style=\"color:#ff79c6\">-</span> rightSize <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> preR<span style=\"color:#ff79c6\">,</span>\n            postorder<span style=\"color:#ff79c6\">,</span> nextIndex <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> postR <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> map<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li><strong>只有每个节点度为2或者0的时候前序和后序才能唯一确定一颗二叉树，只有一个子节点是无法确定的，因为你无法判断他是左子树还是右子树</strong>。</li>\n<li>这里nextIndex是下一个根节点在后序中的位置。</li>\n<li>该做法需要许多细节，主要也是和上面两个一样，闭区间的构造，如<code>preL+leftSize=preL+1+leftSize-1</code>。</li>\n</ul>\n<h3 id=\"二叉树路径问题\">二叉树路径问题</h3>\n<p>路径表示根节点到叶子节点的经过节点。</p>\n<h4 id=\"路径总和\">路径总和</h4>\n<blockquote>\n<h4 id=\"112-路径总和httpsleetcode-cncomproblemspath-sum\"><a href=\"https://leetcode-cn.com/problems/path-sum/\">112. 路径总和</a></h4>\n<p>难度简单760</p>\n<p>给你二叉树的根节点 <code>root</code> 和一个表示目标和的整数 <code>targetSum</code> 。判断该树中是否存在 <strong>根节点到叶子节点</strong> 的路径，这条路径上所有节点值相加等于目标和 <code>targetSum</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>根节点到叶子节点，因此无需进行跨父节点操作，设计递归函数的时候为单参数。</li>\n<li>思考返回条件：\n<ol>\n<li>base case: root==null-&gt;false</li>\n<li>到达叶子节点，且路径和等于targetSum-&gt;true</li>\n<li>因为是判断存在，在逻辑判断的时候使用<code>||</code>。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">hasPathSum</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> targetSum<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        targetSum <span style=\"color:#ff79c6\">-=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> targetSum <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> hasPathSum<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> hasPathSum<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span> \n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"路径总和ii\">路径总和II</h4>\n<blockquote>\n<h4 id=\"113-路径总和-iihttpsleetcode-cncomproblemspath-sum-ii\"><a href=\"https://leetcode-cn.com/problems/path-sum-ii/\">113. 路径总和 II</a></h4>\n<p>难度中等649</p>\n<p>给你二叉树的根节点 <code>root</code> 和一个整数目标和 <code>targetSum</code> ，找出所有 <strong>从根节点到叶子节点</strong> 路径总和等于给定目标和的路径。</p>\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<ol>\n<li>其实就是正常在二叉树中使用DFS。</li>\n</ol>\n<p><strong>思路</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#50fa7b\">pathSum</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> targetSum<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;());</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">findPath</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> targetSum<span style=\"color:#ff79c6\">,</span> List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> tmp<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        targetSum <span style=\"color:#ff79c6\">-=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> targetSum <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;(</span>tmp<span style=\"color:#ff79c6\">));</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">,</span> tmp<span style=\"color:#ff79c6\">);</span>\n            findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">,</span> tmp<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">remove</span><span style=\"color:#ff79c6\">(</span>tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"路径总和iii\">路径总和III</h4>\n<blockquote>\n<h4 id=\"437-路径总和-iiihttpsleetcode-cncomproblemspath-sum-iii\"><a href=\"https://leetcode-cn.com/problems/path-sum-iii/\">437. 路径总和 III</a></h4>\n<p>难度中等1188</p>\n<p>给定一个二叉树的根节点 <code>root</code> ，和一个整数 <code>targetSum</code> ，求该二叉树里节点值之和等于 <code>targetSum</code> 的 <strong>路径</strong> 的数目。</p>\n<p><strong>路径</strong> 不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>该题的不同在于，<em>路径不再是从根节点开始了且无需到达叶子节点</em>，但仍然是从父节点到子的顺序。</li>\n<li>因此在遍历方式上，仍然是使用前序，<strong>关键在于，对于每个子树需要使用递归调用，进行递归嵌套。</strong></li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd\">int</span> ans <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">pathSum</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> targetSum<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span>\n        pathSum<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span>\n        pathSum<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">findPath</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> targetSum<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        targetSum <span style=\"color:#ff79c6\">-=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>targetSum <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ans<span style=\"color:#ff79c6\">++;</span>\n        <span style=\"color:#ff79c6\">}</span> \n        findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span>\n        findPath<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> targetSum<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"二叉树的所有路径\">二叉树的所有路径</h4>\n<blockquote>\n<h4 id=\"257-二叉树的所有路径httpsleetcode-cncomproblemsbinary-tree-paths\"><a href=\"https://leetcode-cn.com/problems/binary-tree-paths/\">257. 二叉树的所有路径</a></h4>\n<p>难度简单630</p>\n<p>给你一个二叉树的根节点 <code>root</code> ，按 <strong>任意顺序</strong> ，返回所有从根节点到叶子节点的路径。</p>\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">binaryTreePaths</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        binaryTreePaths<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#f1fa8c\">&#34;&#34;</span><span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">binaryTreePaths</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> String str<span style=\"color:#ff79c6\">,</span> List<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">&gt;</span> res<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        str <span style=\"color:#ff79c6\">+=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            str <span style=\"color:#ff79c6\">+=</span> <span style=\"color:#f1fa8c\">&#34;-&gt;&#34;</span><span style=\"color:#ff79c6\">;</span>\n            binaryTreePaths<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> str<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n            binaryTreePaths<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> str<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"二叉树中的最大路径和\">二叉树中的最大路径和</h4>\n<blockquote>\n<h4 id=\"124-二叉树中的最大路径和httpsleetcode-cncomproblemsbinary-tree-maximum-path-sum\"><a href=\"https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/\">124. 二叉树中的最大路径和</a></h4>\n<p>难度困难1369</p>\n<p><strong>路径</strong> 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 <strong>至多出现一次</strong> 。该路径 <strong>至少包含一个</strong> 节点，且不一定经过根节点。</p>\n<p><strong>路径和</strong> 是路径中各节点值的总和。</p>\n<p>给你一个二叉树的根节点 <code>root</code> ，返回其 <strong>最大路径和</strong> 。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>注意：树中任意节点沿父节点-子节点连接到任意节点的序列，且路径方式只能为一次。</li>\n<li>为了保证路径序列的唯一，且按照该方式遍历，可以观察出使用后序遍历，在遍历完左右节点后必然会到达根节点。</li>\n<li>base case：<code>root==null;return 0;</code></li>\n<li>非空节点的最大贡献=节点值+其子节点值贡献的最大值（对于叶子就是其本身）</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MIN_VALUE</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxPathSum</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        getMax<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">getMax</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">,</span> getMax<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">));</span>\n        <span style=\"color:#8be9fd\">int</span> right <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">,</span> getMax<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">));</span>\n        <span style=\"color:#8be9fd\">int</span> path <span style=\"color:#ff79c6\">=</span> left <span style=\"color:#ff79c6\">+</span> right <span style=\"color:#ff79c6\">+</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>path<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>left<span style=\"color:#ff79c6\">,</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"最近公共祖先问题\">最近公共祖先问题</h3>\n<h4 id=\"二叉树的最近公共祖先\">二叉树的最近公共祖先</h4>\n<blockquote>\n<h4 id=\"236-二叉树的最近公共祖先httpsleetcode-cncomproblemslowest-common-ancestor-of-a-binary-tree\"><a href=\"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/\">236. 二叉树的最近公共祖先</a></h4>\n<p>难度中等1478</p>\n<p>给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。</p>\n<p><a href=\"https://baike.baidu.com/item/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/8918834?fr=aladdin\">百度百科</a>中最近公共祖先的定义为：“对于有根树 T 的两个节点 p、q，最近公共祖先表示为一个节点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（<strong>一个节点也可以是它自己的祖先</strong>）。”</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li><em>函数是干什么的？</em>\n<ol>\n<li>若p，q都位于同一个root的树上，函数则返回的是该root。</li>\n<li>若p，q都不在root的树上，函数返回null。</li>\n<li>若p，q有一个在root为根的树上，函数返回的就是该节点。</li>\n</ol>\n</li>\n<li>*函数参数的变量状态？*p，q是不会变化的，只会对root进行递归调用。</li>\n<li>*函数递归调用结果？*base case：\n<ol>\n<li>如果root为null，则肯定返回null。</li>\n<li>如果root==p||root==q，则返回root。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">lowestCommonAncestor</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> TreeNode p<span style=\"color:#ff79c6\">,</span> TreeNode q<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> root <span style=\"color:#ff79c6\">==</span> p <span style=\"color:#ff79c6\">||</span> root <span style=\"color:#ff79c6\">==</span> q<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode left <span style=\"color:#ff79c6\">=</span> lowestCommonAncestor<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">);</span>\n        TreeNode right <span style=\"color:#ff79c6\">=</span> lowestCommonAncestor<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>left <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> right <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> left <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> left <span style=\"color:#ff79c6\">:</span> right<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>关键在于递归调用后的处理（后序遍历处理的位置），left和right的判断，如果p，q都在以root为根的树上，则left和right一定分别是p和q。</li>\n</ul>\n<h4 id=\"二叉搜索树的最近公共祖先\">二叉搜索树的最近公共祖先</h4>\n<blockquote>\n<h4 id=\"235-二叉搜索树的最近公共祖先httpsleetcode-cncomproblemslowest-common-ancestor-of-a-binary-search-tree\"><a href=\"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/\">235. 二叉搜索树的最近公共祖先</a></h4>\n<p>难度简单737</p>\n<p>给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。</p>\n<p><a href=\"https://baike.baidu.com/item/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/8918834?fr=aladdin\">百度百科</a>中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（<strong>一个节点也可以是它自己的祖先</strong>）。”</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>该题完全可以用上题的方式进行解决，但是如何利用BST的特性去解决该问题呢？</li>\n<li>如果两个节点值都比当前节点值小，则说明最近公共祖先在左边。否则相反。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">lowestCommonAncestor</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> TreeNode p<span style=\"color:#ff79c6\">,</span> TreeNode q<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> lowestCommonAncestor<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> lowestCommonAncestor<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"完全二叉树的节点个数\">完全二叉树的节点个数</h3>\n<blockquote>\n<h4 id=\"222-完全二叉树的节点个数httpsleetcode-cncomproblemscount-complete-tree-nodes\"><a href=\"https://leetcode-cn.com/problems/count-complete-tree-nodes/\">222. 完全二叉树的节点个数</a></h4>\n<p>难度中等602</p>\n<p>给你一棵 <strong>完全二叉树</strong> 的根节点 <code>root</code> ，求出该树的节点个数。</p>\n<p><a href=\"https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin\">完全二叉树</a> 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 <code>h</code> 层，则该层包含 <code>1~ 2h</code> 个节点。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>若输入一个普通树，计算节点个数，只需如此遍历一遍即可：<code>return countNodes(root.left) + countNodes(root.right) + 1;</code>。时间复杂度为O(N)。</li>\n<li>若输入一个满二叉树full binary tree，只需计算树高h，而节点总数就是$2^h-1$。</li>\n<li>而完全二叉树是普通二叉树与满二叉树之间，它由于性质，两颗子树一定存在一颗满二叉树。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">countNodes</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        TreeNode l <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> hl <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> hr <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            l <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            hl<span style=\"color:#ff79c6\">++;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            r <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n            hr<span style=\"color:#ff79c6\">++;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>hl <span style=\"color:#ff79c6\">==</span> hr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">)</span>Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pow</span><span style=\"color:#ff79c6\">(</span>2<span style=\"color:#ff79c6\">,</span> hl<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> 1 <span style=\"color:#ff79c6\">+</span> countNodes<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> countNodes<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>关键在于两个递归不会一个真的递归下去。时间复杂度为O(logNlogN)，遍历树高O(logN)*算法递归深度O(logN)。</li>\n</ul>\n<h3 id=\"二叉树序列化和反序列化\">二叉树序列化和反序列化</h3>\n<blockquote>\n<h4 id=\"297-二叉树的序列化与反序列化httpsleetcode-cncomproblemsserialize-and-deserialize-binary-tree\"><a href=\"https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/\">297. 二叉树的序列化与反序列化</a></h4>\n<p>难度困难727</p>\n<p>序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。</p>\n<p>请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">TreeEncodeAndDecode</span> <span style=\"color:#ff79c6\">{</span>\n    String SEP <span style=\"color:#ff79c6\">=</span> <span style=\"color:#f1fa8c\">&#34;,&#34;</span><span style=\"color:#ff79c6\">;</span>\n    String NULL <span style=\"color:#ff79c6\">=</span> <span style=\"color:#f1fa8c\">&#34;#&#34;</span><span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#6272a4\">// Encodes a tree to a single string.\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#8be9fd;font-style:italic\">public</span> String <span style=\"color:#50fa7b\">serialize</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        StringBuilder sb <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> StringBuilder<span style=\"color:#ff79c6\">();</span>\n        serialize<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> sb<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> sb<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">toString</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">serialize</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> StringBuilder sb<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            sb<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">append</span><span style=\"color:#ff79c6\">(</span>NULL<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">append</span><span style=\"color:#ff79c6\">(</span>SEP<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n      \t<span style=\"color:#6272a4\">// 前序方式序列化\n</span><span style=\"color:#6272a4\"></span>        sb<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">append</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">append</span><span style=\"color:#ff79c6\">(</span>SEP<span style=\"color:#ff79c6\">);</span>\n        serialize<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> sb<span style=\"color:#ff79c6\">);</span>\n        serialize<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> sb<span style=\"color:#ff79c6\">);</span>\n      \t<span style=\"color:#6272a4\">// 后序方式序列化位置\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#6272a4\">// Decodes your encoded data to tree.\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">deserialize</span><span style=\"color:#ff79c6\">(</span>String data<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">&gt;</span> nodes <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;(</span>Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">asList</span><span style=\"color:#ff79c6\">(</span>data<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">split</span><span style=\"color:#ff79c6\">(</span>SEP<span style=\"color:#ff79c6\">)));</span>\n        <span style=\"color:#ff79c6\">return</span> deserialize<span style=\"color:#ff79c6\">(</span>nodes<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">deserialize</span><span style=\"color:#ff79c6\">(</span>List<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">&gt;</span> nodes<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nodes<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        String node <span style=\"color:#ff79c6\">=</span> nodes<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">remove</span><span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n      \t<span style=\"color:#6272a4\">// String node = nodes.removeLast(); 后序方式\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>NULL<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">equals</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        TreeNode root <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> TreeNode<span style=\"color:#ff79c6\">(</span>Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">parseInt</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">));</span>\n      \t<span style=\"color:#6272a4\">// 若是后序的方式，需要先构建右子树，再构建左子树\n</span><span style=\"color:#6272a4\"></span>        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> deserialize<span style=\"color:#ff79c6\">(</span>nodes<span style=\"color:#ff79c6\">);</span>\n        root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> deserialize<span style=\"color:#ff79c6\">(</span>nodes<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>更加具体序列化讲解：请<a href=\"https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247485871&amp;idx=1&amp;sn=bcb24ea8927995b585629a8b9caeed01&amp;scene=21#wechat_redirect\">参考此处</a>。</p>\n<ul>\n<li>以上为使用前序进行序列化和反序列化。</li>\n<li>注意：无法使用中序进行序列化，因为无法确定root的位置。</li>\n<li>使用后序反序列化是，注意需要先构建右侧子树再左侧子树。</li>\n</ul>\n<h2 id=\"二叉搜索树问题\">二叉搜索树问题</h2>\n<p>「What」二叉搜索树(Binary Search Tree,BST)，在一个二叉树中，任意节点的值大于等于左子树所有节点的值，且要小于等于右子树的所有节点的值。</p>\n<p>根据二叉搜索树的性质不同，因此递归的框架也需要有些改变：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">BST</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n      \t<span style=\"color:#6272a4\">// 找到\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">}</span>\n  \t<span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n      \tBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> target<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n  \t<span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n      \tBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> target<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"验证二叉搜索树\">验证二叉搜索树</h3>\n<blockquote>\n<h4 id=\"98-验证二叉搜索树httpsleetcode-cncomproblemsvalidate-binary-search-tree\"><a href=\"https://leetcode-cn.com/problems/validate-binary-search-tree/\">98. 验证二叉搜索树</a></h4>\n<p>难度中等1379</p>\n<p>给你一个二叉树的根节点 <code>root</code> ，判断其是否是一个有效的二叉搜索树。</p>\n<p><strong>有效</strong> 二叉搜索树定义如下：</p>\n<ul>\n<li>节点的左子树只包含 <strong>小于</strong> 当前节点的数。</li>\n<li>节点的右子树只包含 <strong>大于</strong> 当前节点的数。</li>\n<li>所有左子树和右子树自身必须也是二叉搜索树。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>\n<p>直接思考是不是只要比较左右节点的值就即可，写出以下代码：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isValidBST</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> isValidBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> isValidBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div></li>\n<li>\n<p>该算法出现了错误，因为每个BST的节点都应该小于右子树，而不能仅仅单纯判断一小颗树。</p>\n</li>\n<li>\n<p>因此需要记录两个值：最大和最小，通过该边界进行判断约束。</p>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isValidBST</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> isValidBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isValidBST</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> TreeNode min<span style=\"color:#ff79c6\">,</span> TreeNode max<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>min <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> min<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>max <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;=</span> max<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> isValidBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> min<span style=\"color:#ff79c6\">,</span> root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> isValidBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> root<span style=\"color:#ff79c6\">,</span> max<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"二叉搜索树中的插入操作\">二叉搜索树中的插入操作</h3>\n<blockquote>\n<h4 id=\"701-二叉搜索树中的插入操作httpsleetcode-cncomproblemsinsert-into-a-binary-search-tree\"><a href=\"https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/\">701. 二叉搜索树中的插入操作</a></h4>\n<p>难度中等249</p>\n<p>给定二叉搜索树（BST）的根节点和要插入树中的值，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据 <strong>保证</strong> ，新值和原始二叉搜索树中的任意节点值都不同。</p>\n<p><strong>注意</strong>，可能存在多种有效的插入方式，只要树在插入后仍保持为二叉搜索树即可。 你可以返回 <strong>任意有效的结果</strong> 。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">insertIntoBST</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">new</span> TreeNode<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> insertIntoBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> insertIntoBST<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"二叉搜索树中的删除操作\">二叉搜索树中的删除操作</h3>\n<blockquote>\n<h4 id=\"450-删除二叉搜索树中的节点httpsleetcode-cncomproblemsdelete-node-in-a-bst\"><a href=\"https://leetcode-cn.com/problems/delete-node-in-a-bst/\">450. 删除二叉搜索树中的节点</a></h4>\n<p>难度中等614</p>\n<p>给定一个二叉搜索树的根节点 <strong>root</strong> 和一个值 <strong>key</strong>，删除二叉搜索树中的 <strong>key</strong> 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。</p>\n<p>一般来说，删除节点可分为两个步骤：</p>\n<ol>\n<li>首先找到需要删除的节点；</li>\n<li>如果找到了，删除它。</li>\n</ol>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>找到该节点，若要删除该节点A，会改变BST的性质。有三种情况：\n<ol>\n<li>A为末端节点，直接删除。</li>\n<li>A有一个非空节点，让该非空节点接替自己。</li>\n<li>A有两个非空节点，为了不破坏BST的性质，需要找到左子树中最大的，或右子树中最小的来接替A。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode <span style=\"color:#50fa7b\">deleteNode</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> key<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> key<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 删除操作\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> \n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> \n            TreeNode minNode <span style=\"color:#ff79c6\">=</span> getMin<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">);</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> minNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> deleteNode<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> minNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&gt;</span> key<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> deleteNode<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">,</span> key<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;</span> key<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> deleteNode<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">,</span> key<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> TreeNode <span style=\"color:#50fa7b\">getMin</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> root <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">){};</span>\n        <span style=\"color:#ff79c6\">return</span> root<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>这里不考虑删除操作的细节，仅通过值交换。</li>\n</ul>\n<h2 id=\"题目补充\">题目补充</h2>\n<h4 id=\"树的直径\">树的直径</h4>\n<p>一棵二叉树的直径长度是任意两个结点路径长度中的最大值，这条路径可能穿过也可能不穿过根结点。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">diameterOfBinaryTree</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 两个节点路径长度最大值\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// 1. left root right\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// 2. left root \n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// 3. root right\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// 4. root\n</span><span style=\"color:#6272a4\"></span>        getDiameterOfBinaryTree<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> max<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> max <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">getDiameterOfBinaryTree</span><span style=\"color:#ff79c6\">(</span>TreeNode root<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> 0 <span style=\"color:#ff79c6\">:</span> getDiameterOfBinaryTree<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> right <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> 0 <span style=\"color:#ff79c6\">:</span> getDiameterOfBinaryTree<span style=\"color:#ff79c6\">(</span>root<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n        max <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>max<span style=\"color:#ff79c6\">,</span> left <span style=\"color:#ff79c6\">+</span> right<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>left<span style=\"color:#ff79c6\">,</span> right<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(2)-链表\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(4)-动态规划\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法3-二叉树-suan-fa-3-er-cha-shu/index.html b/public/post/algorithm/算法3-二叉树-suan-fa-3-er-cha-shu/index.html
--- a/public/post/algorithm/算法3-二叉树-suan-fa-3-er-cha-shu/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法3-二叉树-suan-fa-3-er-cha-shu/index.html	(date 1694095063480)
@@ -1741,7 +1741,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法2-链表-suan-fa-2-lian-biao/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法(2)-链表\" />\n    <meta property=\"og:title\" content=\"算法(2)-链表\" />\n    <meta property=\"twitter:title\" content=\"算法(2)-链表\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法(2)-链表 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法(2)-链表</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Tuesday, January 4, 2022\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法2-链表\">算法(2)-链表</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>「What」链表是一种递归的数据结构，它或者为NULL，或者指向一个节点(node)的引用，该节点含有一个元素和指向另一条链表的引用。</p>\n<p>链表节点的定义：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Node</span> <span style=\"color:#ff79c6\">{</span>\n  \tItem item<span style=\"color:#ff79c6\">;</span>\n  \tNode next<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>链表的几种类型：</p>\n<ol>\n<li>单链表：单链表的节点只能指向下一个节点。</li>\n<li>双链表：每个节点有两个指针域，一个指向下一个节点，一个指向上一个节点。</li>\n<li>循环链表：即链表首尾相连。可以解决如约瑟夫环问题。</li>\n</ol>\n<p><strong>这里补充一个思维：</strong></p>\n<p>链表也兼具递归结构，树不过是链表的衍生，因此链表也兼具<em>前序遍历</em>和<em>后序遍历</em>。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">travese</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#6272a4\">// 前序\n</span><span style=\"color:#6272a4\"></span>  \ttravese<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n  \t<span style=\"color:#6272a4\">// 后序\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>该方式的意义在于，若想正序打印链表val，则通过前序的位置，而想倒序打印则通过后序的位置。该做法的<strong>核心逻辑</strong>：就是将链表节点入方法栈中，然后再取出来。</p>\n<h2 id=\"数据结构问题\">数据结构问题</h2>\n<h3 id=\"链表设计\">链表设计</h3>\n<blockquote>\n<h4 id=\"707-设计链表httpsleetcode-cncomproblemsdesign-linked-list\"><a href=\"https://leetcode-cn.com/problems/design-linked-list/\">707. 设计链表</a></h4>\n<p>设计链表的实现。您可以选择使用单链表或双链表。单链表中的节点应该具有两个属性：<code>val</code> 和 <code>next</code>。<code>val</code> 是当前节点的值，<code>next</code> 是指向下一个节点的指针/引用。如果要使用双向链表，则还需要一个属性 <code>prev</code> 以指示链表中的上一个节点。假设链表中的所有节点都是 0-index 的。</p>\n<p>在链表类中实现这些功能：</p>\n<ul>\n<li>get(index)：获取链表中第 <code>index</code> 个节点的值。如果索引无效，则返回<code>-1</code>。</li>\n<li>addAtHead(val)：在链表的第一个元素之前添加一个值为 <code>val</code> 的节点。插入后，新节点将成为链表的第一个节点。</li>\n<li>addAtTail(val)：将值为 <code>val</code> 的节点追加到链表的最后一个元素。</li>\n<li>addAtIndex(index,val)：在链表中的第 <code>index</code> 个节点之前添加值为 <code>val</code> 的节点。如果 <code>index</code> 等于链表的长度，则该节点将附加到链表的末尾。如果 <code>index</code> 大于链表长度，则不会插入节点。如果<code>index</code>小于0，则在头部插入节点。</li>\n<li>deleteAtIndex(index)：如果索引 <code>index</code> 有效，则删除链表中的第 <code>index</code> 个节点。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<ul>\n<li>这里采用双链表的实现方式，为了避免索引的时候代码重复，复用了<code>getNode()</code>方法。</li>\n</ul>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MyLinkedList</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">ListNode</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n        ListNode prev<span style=\"color:#ff79c6\">,</span> next<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">ListNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd\">int</span> size<span style=\"color:#ff79c6\">;</span>\n    ListNode head<span style=\"color:#ff79c6\">,</span>tail<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">MyLinkedList</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        size <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        head <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        tail <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tail<span style=\"color:#ff79c6\">;</span>\n        tail<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> index<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode node <span style=\"color:#ff79c6\">=</span> getNode<span style=\"color:#ff79c6\">(</span>index<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> node <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#ff79c6\">-</span>1 <span style=\"color:#ff79c6\">:</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> ListNode <span style=\"color:#50fa7b\">getNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> index<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">&lt;</span> 0 <span style=\"color:#ff79c6\">||</span> index <span style=\"color:#ff79c6\">&gt;=</span> size<span style=\"color:#ff79c6\">){</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">&lt;</span> <span style=\"color:#ff79c6\">(</span>size <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">){</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;=</span> index<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            cur <span style=\"color:#ff79c6\">=</span> tail<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;=</span> size <span style=\"color:#ff79c6\">-</span> index <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> cur<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">addAtHead</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        ListNode newNode <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        newNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n        newNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> newNode<span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> newNode<span style=\"color:#ff79c6\">;</span>\n        size<span style=\"color:#ff79c6\">++;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">addAtTail</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> tail<span style=\"color:#ff79c6\">;</span>\n        ListNode newNode <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        newNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n        newNode<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> newNode<span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> newNode<span style=\"color:#ff79c6\">;</span>\n        size<span style=\"color:#ff79c6\">++;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">addAtIndex</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> index<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">&gt;</span> size<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">==</span> size<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            addAtTail<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">&lt;=</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            addAtHead<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> getNode<span style=\"color:#ff79c6\">(</span>index<span style=\"color:#ff79c6\">);</span>\n        ListNode node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">;</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n        cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n        size<span style=\"color:#ff79c6\">++;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">deleteAtIndex</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> index<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>index <span style=\"color:#ff79c6\">&gt;=</span> size <span style=\"color:#ff79c6\">||</span> index <span style=\"color:#ff79c6\">&lt;</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode node <span style=\"color:#ff79c6\">=</span> getNode<span style=\"color:#ff79c6\">(</span>index<span style=\"color:#ff79c6\">);</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">prev</span><span style=\"color:#ff79c6\">;</span>\n        node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        size<span style=\"color:#ff79c6\">--;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"单链表实现栈和队列\">单链表实现栈和队列</h3>\n<blockquote>\n<p>单链表实现栈。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>需要满足LIFO的特性，且数据结构为单链表。</li>\n<li>因此采用头插，头删的方式进行实现。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">StackBySingleList</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Node</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n        Node next<span style=\"color:#ff79c6\">;</span>\n\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">Node</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    Node head<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">StackBySingleList</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        head <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> Node<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Node node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> Node<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>isEmpty<span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Node node <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 手动清除，减少GC开销\n</span><span style=\"color:#6272a4\"></span>        node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n\n</code></pre></div><blockquote>\n<p>单链表实现队列。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>与单链表实现栈不同，而单链表只有head指针，没法指向尾部，因此使用一个指向链表尾部的指针tail。</li>\n<li>插入的时候，插入到tail的后面，删除的时候，删除head的后面。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">QueueBySingleList</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Node</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n        Node next<span style=\"color:#ff79c6\">;</span>\n\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">Node</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    Node head<span style=\"color:#ff79c6\">;</span>\n    Node tail<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">QueueBySingleList</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        head <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> Node<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        tail <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Node node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> Node<span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tail<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        tail<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n        tail <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">poll</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>isEmpty<span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Node node <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>tail <span style=\"color:#ff79c6\">==</span> node<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 避免tail随之一起丢失\n</span><span style=\"color:#6272a4\"></span>            tail <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        node <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> tail <span style=\"color:#ff79c6\">==</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"经典问题\">经典问题</h2>\n<h3 id=\"环形链表\">环形链表</h3>\n<p>环形链表的问题在于两点：</p>\n<ol>\n<li>\n<p>判断链表是否有环</p>\n</li>\n<li>\n<p>如果有环，如何找到该环的入口</p>\n</li>\n</ol>\n<p>**判断链表是否有环：**采用快慢指针法</p>\n<ol>\n<li>定义两个指针fast = slow = head，fast每次移动两个节点，slow每次移动一个节点</li>\n<li>若fast与slow相遇则说明有环，那为什么有环呢？\n<ul>\n<li>若没环，fast不可能与slow相遇，fast会提前到链尾结束循环。</li>\n<li>fast指针一定先入环，且两个指针相遇也一定是在环中相遇。</li>\n<li>在环中相遇的原理，就类比操场上，A以一定速度前进，B以A的两倍速度前进，那么一定会有一个时候，B会凭借速度差与A相遇</li>\n</ul>\n</li>\n</ol>\n<p><strong>如果有环，该如何找到环入口？</strong>：</p>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/code-interview/how_to_find_cycle_inLinkedList-20220104134301728.png\" alt=\"142环形链表2\">\n\n</p>\n<ol>\n<li>如上图，假设头节点到环形入口的节点数为x，入环口到相遇节点的节点数为y，相遇点到入口的节点数为z</li>\n<li>若相遇，则slow指针走过的节点数为<code>x+y</code>，fast走过的节点数为<code>x + y + n(y + z)</code>，n为fast在环内走了n圈才相遇</li>\n<li>而fast指针速度是slow的两倍，可以得出等式：<code>(x + y) * 2 = x + y + n(y + z)</code>化简的到<code>x + y = n (y + z)</code></li>\n<li>因为要找环的入口，所有要求得的是x的值，通过以上可以得到公式：<code>x = (n - 1)(y + z) + z</code>，这里将n(y + z)单独提出一个y+z出来，因为y+z代表一圈，同时这里n一定是大于等于1的，因为fast至少需要多走一圈才能相遇</li>\n<li>这时候那n为1的情况举例可以得到：<code>x = z</code></li>\n</ol>\n<p>以上的具体代码如下：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 判断链表是否有环\n</span><span style=\"color:#6272a4\">     * @param head\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">hasCycle</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode fast <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">,</span> slow <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 空链表、单节点链表一定不会有环\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>fast <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#6272a4\">// 快指针，一次移动两步\n</span><span style=\"color:#6272a4\"></span>            slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>      <span style=\"color:#6272a4\">// 慢指针，一次移动一步\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>fast <span style=\"color:#ff79c6\">==</span> slow<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>   <span style=\"color:#6272a4\">// 快慢指针相遇，表明有环\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#6272a4\">// 正常走到链表末尾，表明没有环\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 返回入环节点\n</span><span style=\"color:#6272a4\">     * @param head\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">detectCycle</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 找到环节点\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode slow <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">,</span> fast <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">boolean</span> hasCycle <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>fast <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>fast <span style=\"color:#ff79c6\">==</span> slow<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                hasCycle <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>hasCycle<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode p <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>p <span style=\"color:#ff79c6\">!=</span> slow<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                p <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">return</span> p<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"链表反转问题\">链表反转问题</h3>\n<p>这是十分典型的问题，面试中也十分常见。以下整理几种常见题型和反转的方式。</p>\n<h4 id=\"反转链表\">反转链表</h4>\n<blockquote>\n<h4 id=\"206-反转链表httpsleetcode-cncomproblemsreverse-linked-list\"><a href=\"https://leetcode-cn.com/problems/reverse-linked-list/\">206. 反转链表</a></h4>\n<p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>提供单链表进行反转（该题是反转整个链表），选择遍历链表的方式，递归还是迭代。</li>\n<li>根据索引节点方式的不同，反转的方式也不同。\n<ol>\n<li>通过创建一个dummyNode，来依次交替dummyNode.next与cur的位置从而达到链表的整个反转（该类可以适用于链表的部分反转）。</li>\n<li>创建一个pre指针，依次遍历链表，改变next指向上一个节点，从而达到反转。</li>\n<li>递归的方式，不用一个for循环达到题目要求。（递归需要堆栈，空间O(n)，效率并不高）</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method(1):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  ListNode pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n    ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">;</span>\n    pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n    cur <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">}</span>\n  <span style=\"color:#ff79c6\">return</span> pre<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Method(2):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">}</span>\n  ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n  dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n    ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">}</span>\n  <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>这里可以发现cur指针我们无需进行移动，它会随着周围节点的变动自动向后推动。</li>\n</ul>\n<p>Method(3):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode last <span style=\"color:#ff79c6\">=</span> reverseList<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> last<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>递归第一步：定义函数行为，该函数的行为就是将整个链表反转并返回反转后的head节点。</li>\n<li>base case：链表如果只有一个节点，直接返回即可。</li>\n<li>last就是反转后的链表head节点，因此return last。</li>\n<li>head.next.next = head.next在函数中将链表的下一个节点指向上一个节点。</li>\n<li>head.next = null，因为链表末端要指向null。</li>\n</ul>\n<blockquote>\n<h4 id=\"92-反转链表-iihttpsleetcode-cncomproblemsreverse-linked-list-ii\"><a href=\"https://leetcode-cn.com/problems/reverse-linked-list-ii/\">92. 反转链表 II</a></h4>\n<p>难度中等1113</p>\n<p>给你单链表的头指针 <code>head</code> 和两个整数 <code>left</code> 和 <code>right</code> ，其中 <code>left &lt;= right</code> 。请你反转从位置 <code>left</code> 到位置 <code>right</code> 的链表节点，返回 <strong>反转后的链表</strong> 。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ul>\n<li>不同与上面，该反转为反转链表的一部分[left, right]，注意left==1就是head了。</li>\n<li>具体做法也是先遍历到指定位置开始反转，并计算反转个数。</li>\n</ul>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseBetween</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> left<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> left <span style=\"color:#ff79c6\">==</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> dummy<span style=\"color:#ff79c6\">;</span>\n        dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> step <span style=\"color:#ff79c6\">=</span> right <span style=\"color:#ff79c6\">-</span> left<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>left<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            pre <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span> step <span style=\"color:#ff79c6\">!=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> step<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>这里注意，若出现[3,5] 1,2的情况，head将会变动，返回不了完整的链表，因此需要pre指针。</li>\n</ul>\n<h4 id=\"k个一组翻转链表\">K个一组翻转链表</h4>\n<blockquote>\n<h4 id=\"25-k-个一组翻转链表httpsleetcode-cncomproblemsreverse-nodes-in-k-group\"><a href=\"https://leetcode-cn.com/problems/reverse-nodes-in-k-group/\">25. K 个一组翻转链表</a></h4>\n<p>难度困难1413</p>\n<p>给你一个链表，每 <em>k</em> 个节点一组进行翻转，请你返回翻转后的链表。</p>\n<p><em>k</em> 是一个正整数，它的值小于或等于链表的长度。</p>\n<p>如果节点总数不是 <em>k</em> 的整数倍，那么请将最后剩余的节点保持原有顺序。</p>\n<p><strong>进阶：</strong></p>\n<ul>\n<li>你可以设计一个只使用常数额外空间的算法来解决此问题吗？</li>\n<li><strong>你不能只是单纯的改变节点内部的值</strong>，而是需要实际进行节点交换。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>很明显，需要多次翻转链表，题目<strong>具有递归的性质</strong>。</li>\n<li>问题在于翻转前k个节点后，后面的链表要如何处理？</li>\n<li>具体算法流程：(递归方式)\n<ol>\n<li>先翻转以head开头的k个元素。</li>\n<li>将第k+1个元素作为head，递归调用<code>reverseKGroup()</code>。</li>\n<li>将上述两个结果连接起来。</li>\n</ol>\n</li>\n<li>需要注意的是，如果最后元素个数不足k个，则保持不变（base case）。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method(1):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseKGroup</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> k <span style=\"color:#ff79c6\">&lt;=</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        ListNode a<span style=\"color:#ff79c6\">,</span> b<span style=\"color:#ff79c6\">;</span>\n        a <span style=\"color:#ff79c6\">=</span> b <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>k<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>b <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// 不足k个\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            b <span style=\"color:#ff79c6\">=</span> b<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 翻转前k个\n</span><span style=\"color:#6272a4\"></span>        ListNode newHead <span style=\"color:#ff79c6\">=</span> reverse<span style=\"color:#ff79c6\">(</span>a<span style=\"color:#ff79c6\">,</span> b<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 递归调用\n</span><span style=\"color:#6272a4\"></span>        a<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> reverseKGroup<span style=\"color:#ff79c6\">(</span>b<span style=\"color:#ff79c6\">,</span> k<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> newHead<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> ListNode <span style=\"color:#50fa7b\">reverse</span><span style=\"color:#ff79c6\">(</span>ListNode a<span style=\"color:#ff79c6\">,</span> ListNode b<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur<span style=\"color:#ff79c6\">=</span>a<span style=\"color:#ff79c6\">;</span> cur<span style=\"color:#ff79c6\">!=</span>b<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">;</span>\n            pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> pre<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Method(2): 迭代的方式</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">reverseKGroup</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> len <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n      \t<span style=\"color:#6272a4\">// 计算出有多少元素\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            len<span style=\"color:#ff79c6\">++;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>len <span style=\"color:#ff79c6\">&lt;</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> len <span style=\"color:#ff79c6\">/</span> k<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n          \t<span style=\"color:#6272a4\">//（1）\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> k<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&gt;</span> 1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n                ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                tmp<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n          \t<span style=\"color:#6272a4\">//（2）\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>（1）注意j&gt;1，因为实际迭代次数=k-1次</p>\n<p>（2）注意，这里为了保存链表头，解决第一次翻转后连接后面链表的问题。</p>\n<h3 id=\"相交链表\">相交链表</h3>\n<blockquote>\n<h4 id=\"160-相交链表httpsleetcode-cncomproblemsintersection-of-two-linked-lists\"><a href=\"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/\">160. 相交链表</a></h4>\n<p>难度简单1487</p>\n<p>给你两个单链表的头节点 <code>headA</code> 和 <code>headB</code> ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 <code>null</code> 。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>假设链表A、B，设相交从head到达交点的距离为ax，bx，交点后到tail的距离则都为y。</li>\n<li>让指针a、b走过链表A、B，若有交点则走过的距离为ax+y+bx==bx+y+ax，则表示有交点，若没有交点则走过的距离则不同。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">getIntersectionNode</span><span style=\"color:#ff79c6\">(</span>ListNode headA<span style=\"color:#ff79c6\">,</span> ListNode headB<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>headA <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> headB <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode a<span style=\"color:#ff79c6\">,</span> b<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>a<span style=\"color:#ff79c6\">=</span>headA<span style=\"color:#ff79c6\">,</span> b<span style=\"color:#ff79c6\">=</span>headB<span style=\"color:#ff79c6\">;</span> a <span style=\"color:#ff79c6\">!=</span> b<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            a <span style=\"color:#ff79c6\">=</span> a <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> headB <span style=\"color:#ff79c6\">:</span> a<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            b <span style=\"color:#ff79c6\">=</span> b <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> headA <span style=\"color:#ff79c6\">:</span> b<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> a<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"合并两个有序链表\">合并两个有序链表</h3>\n<blockquote>\n<h4 id=\"21-合并两个有序链表httpsleetcode-cncomproblemsmerge-two-sorted-lists\"><a href=\"https://leetcode-cn.com/problems/merge-two-sorted-lists/\">21. 合并两个有序链表</a></h4>\n<p>难度简单2129</p>\n<p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<p>Method1:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">mergeTwoLists</span><span style=\"color:#ff79c6\">(</span>ListNode list1<span style=\"color:#ff79c6\">,</span> ListNode list2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        ListNode p<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">,</span> cur<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>p<span style=\"color:#ff79c6\">=</span>list1<span style=\"color:#ff79c6\">,</span> q<span style=\"color:#ff79c6\">=</span>list2<span style=\"color:#ff79c6\">,</span> cur<span style=\"color:#ff79c6\">=</span>dummy<span style=\"color:#ff79c6\">;</span> p<span style=\"color:#ff79c6\">!=</span><span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> q<span style=\"color:#ff79c6\">!=</span><span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">;</span>\n                p <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> q<span style=\"color:#ff79c6\">;</span>\n                q <span style=\"color:#ff79c6\">=</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n      \tcur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> p <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> p <span style=\"color:#ff79c6\">:</span> q<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Method2递归:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n\t\t<span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">mergeTwoLists</span><span style=\"color:#ff79c6\">(</span>ListNode l1<span style=\"color:#ff79c6\">,</span> ListNode l2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l1 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">return</span> l2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l2 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">return</span> l1<span style=\"color:#ff79c6\">;</span>\n        ListNode head <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> l2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">){</span>\n            head <span style=\"color:#ff79c6\">=</span> l1<span style=\"color:#ff79c6\">;</span>\n            head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">,</span> l2<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            head <span style=\"color:#ff79c6\">=</span> l2<span style=\"color:#ff79c6\">;</span>\n            head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">,</span> l2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"合并k个升序链表\">合并K个升序链表</h3>\n<blockquote>\n<h4 id=\"23-合并k个升序链表httpsleetcode-cncomproblemsmerge-k-sorted-lists\"><a href=\"https://leetcode-cn.com/problems/merge-k-sorted-lists/\">23. 合并K个升序链表</a></h4>\n<p>难度困难1677</p>\n<p>给你一个链表数组，每个链表都已经按升序排列。</p>\n<p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p>\n<p>提示：</p>\n<p>k == lists.length\n0 &lt;= k &lt;= 10^4\n0 &lt;= lists[i].length &lt;= 500\n-10^4 &lt;= lists[i][j] &lt;= 10^4\nlists[i] 按 升序 排列\nlists[i].length 的总和不超过 10^4</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>Method1:分而治之，将两两链表都通过上面方法<code>mergeTwoLists()</code>合并。</li>\n<li>Method2:空间换时间的方式，将链表存入优先队列PriorityQueue中。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">mergeKLists</span><span style=\"color:#ff79c6\">(</span>ListNode<span style=\"color:#ff79c6\">[]</span> lists<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>lists <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            pre <span style=\"color:#ff79c6\">=</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>pre<span style=\"color:#ff79c6\">,</span> lists<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> pre<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间O(n^2)空间O(1)</li>\n</ul>\n<h2 id=\"面试常见\">面试常见</h2>\n<h3 id=\"删除排序链表的重复元素\">删除排序链表的重复元素</h3>\n<blockquote>\n<h4 id=\"82-删除排序链表中的重复元素-iihttpsleetcode-cncomproblemsremove-duplicates-from-sorted-list-ii\"><a href=\"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/\">82. 删除排序链表中的重复元素 II</a></h4>\n<p>难度中等774</p>\n<p>存在一个按升序排列的链表，给你这个链表的头节点 <code>head</code> ，请你删除链表中所有存在数字重复情况的节点，只保留原始链表中 <strong>没有重复出现</strong> 的数字。</p>\n<p>返回同样按升序排列的结果链表。</p>\n</blockquote>\n<blockquote>\n<h4 id=\"83-删除排序链表中的重复元素httpsleetcode-cncomproblemsremove-duplicates-from-sorted-list\"><a href=\"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/\">83. 删除排序链表中的重复元素</a></h4>\n<p>难度简单706</p>\n<p>存在一个按升序排列的链表，给你这个链表的头节点 <code>head</code> ，请你删除所有重复的元素，使每个元素 <strong>只出现一次</strong> 。</p>\n<p>返回同样按升序排列的结果链表。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>Method1:HashSet，若存在则跳过，不存在则添加的结果链表中（时间O(n)，空间O(n)）。</li>\n<li>Method2:类似于排序的方式，每遍历一个节点，将后续存在重复的节点删除（时间O(n^2)，空间O(1)）。</li>\n<li>Method3:递归的方式：\n<ol>\n<li>终止条件：head指向链表只剩一个元素的时候。</li>\n<li>返回值：返回已经去重的头节点。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<p><em>83题的实现：</em></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#6272a4\">// Method1\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">deleteDuplicates</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Set<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> set <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashSet<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        set<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>set<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">contains</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n                set<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#6272a4\">// Method2\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">deleteDuplicates</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur<span style=\"color:#ff79c6\">=</span>head<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#6272a4\">// Method3\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">deleteDuplicates</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> deleteDuplicates<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            head <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><em>82题实现：最大区别就是删除所有重复，因为头节点可能会被删除，其在这基础上创建空节点进行上面同样的思路即可。</em></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">deleteDuplicates</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur<span style=\"color:#ff79c6\">=</span>head<span style=\"color:#ff79c6\">,</span> pre<span style=\"color:#ff79c6\">=</span>dummy<span style=\"color:#ff79c6\">;</span> cur<span style=\"color:#ff79c6\">!=</span><span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">!=</span><span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">boolean</span> isDep <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                isDep <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>isDep<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"删除链表的倒数第n个节点\">删除链表的倒数第N个节点</h3>\n<blockquote>\n<h4 id=\"19-删除链表的倒数第-n-个结点httpsleetcode-cncomproblemsremove-nth-node-from-end-of-list\"><a href=\"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/\">19. 删除链表的倒数第 N 个结点</a></h4>\n<p>难度中等1735</p>\n<p>给你一个链表，删除链表的倒数第 <code>n</code> 个结点，并且返回链表的头结点。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>利用栈或其他容器收集节点。</li>\n<li>快慢指针思想，快指针fast先走n步，当fast.next==null，slow.next刚好指向删除节点。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">removeNthFromEnd</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> n <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        ListNode fast<span style=\"color:#ff79c6\">,</span> slow<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>fast<span style=\"color:#ff79c6\">=</span>dummy<span style=\"color:#ff79c6\">;</span> n<span style=\"color:#ff79c6\">--</span> <span style=\"color:#ff79c6\">&gt;</span> 0<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>slow<span style=\"color:#ff79c6\">=</span>dummy<span style=\"color:#ff79c6\">;</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"回文链表\">回文链表</h3>\n<blockquote>\n<h4 id=\"剑指-offer-ii-027-回文链表httpsleetcode-cncomproblemsamhzsa\"><a href=\"https://leetcode-cn.com/problems/aMhZSa/\">剑指 Offer II 027. 回文链表</a></h4>\n<p>难度简单23</p>\n<p>给定一个链表的 <strong>头节点</strong> <code>head</code> **，**请判断其是否为回文链表。</p>\n<p>如果一个链表是回文，那么链表节点序列从前往后看和从后往前看是相同的。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>寻找回文的核心办法是从<strong>中心向两端扩散或两端向中间蔓延</strong>，而题目给的是单链表没法倒着遍历，无法使用双指针。</li>\n<li>Method1:最简单的办法就是，将原始链表反转成一条新的链表，然后比较两条链表是否相同（这里不展示该种方式）。\n<ul>\n<li>这里可以进行优化，通过快慢指针，找到中点n/2+1，反转一半链表，再通过双指针（注意这里的奇偶中点位置）。</li>\n</ul>\n</li>\n<li>Mehtod2:借助二叉树的后序遍历方式，不需显式反转也可以倒序遍历（这里具体查看#Introduction）。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method2:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    ListNode left<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isPalindrome</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        left <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> traverse<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">traverse</span><span style=\"color:#ff79c6\">(</span>ListNode right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>right <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">boolean</span> res <span style=\"color:#ff79c6\">=</span> traverse<span style=\"color:#ff79c6\">(</span>right<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 后序逻辑\n</span><span style=\"color:#6272a4\"></span>        res <span style=\"color:#ff79c6\">=</span> res <span style=\"color:#ff79c6\">&amp;&amp;</span> left<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">==</span> right<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n        left <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间和空间的效率都是O(n)</li>\n</ul>\n<p>Method1优化:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isPalindrome</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode slow<span style=\"color:#ff79c6\">,</span> fast<span style=\"color:#ff79c6\">;</span>\n        slow <span style=\"color:#ff79c6\">=</span> fast <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>fast <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur<span style=\"color:#ff79c6\">=</span>reverse<span style=\"color:#ff79c6\">(</span>slow<span style=\"color:#ff79c6\">);</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">!=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            head <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> ListNode <span style=\"color:#50fa7b\">reverse</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> pre<span style=\"color:#ff79c6\">;</span>\n            pre <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> pre<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间为O(n)，空间为O(1)，已经属于最优了。</li>\n</ul>\n<h2 id=\"题目补充\">题目补充</h2>\n<h3 id=\"求相交链表的节点\">求相交链表的节点</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\"> * Description:\n</span><span style=\"color:#6272a4\"> * 求相交的链表\n</span><span style=\"color:#6272a4\"> * 设交集链表长c,链表1除交集的长度为a，链表2除交集的长度为b，有\n</span><span style=\"color:#6272a4\"> * &lt;p&gt;\n</span><span style=\"color:#6272a4\"> * a + c + b = b + c + a\n</span><span style=\"color:#6272a4\"> * 若无交集，则a + b = b + a\n</span><span style=\"color:#6272a4\"> * &lt;p&gt;\n</span><span style=\"color:#6272a4\"> * 两个结点不断的去对方的轨迹中寻找对方的身影，只要二人有交集，就终会相遇\n</span><span style=\"color:#6272a4\"> * &lt;p&gt;\n</span><span style=\"color:#6272a4\"> * 两个链表，找出它们的第一个公共节点。\n</span><span style=\"color:#6272a4\"> *\n</span><span style=\"color:#6272a4\"> * @author:edgarding\n</span><span style=\"color:#6272a4\"> * @date:2021/3/4\n</span><span style=\"color:#6272a4\"> **/</span>\n<span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">IntersectionNode</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">getIntersectionNode</span><span style=\"color:#ff79c6\">(</span>ListNode headA<span style=\"color:#ff79c6\">,</span> ListNode headB<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>headA <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> headB <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode h1 <span style=\"color:#ff79c6\">=</span> headA<span style=\"color:#ff79c6\">,</span> h2 <span style=\"color:#ff79c6\">=</span> headB<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>h1 <span style=\"color:#ff79c6\">!=</span> h2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            h1 <span style=\"color:#ff79c6\">=</span> h1 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> headB <span style=\"color:#ff79c6\">:</span> h1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            h2 <span style=\"color:#ff79c6\">=</span> h2 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> headA <span style=\"color:#ff79c6\">:</span> h2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> h1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"奇偶链表\">奇偶链表</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 奇偶链表\n</span><span style=\"color:#6272a4\">     * 给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。\n</span><span style=\"color:#6272a4\">     * &lt;p&gt;\n</span><span style=\"color:#6272a4\">     * 请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param head\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">oddEvenList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// head 为奇链表头节点 o为尾节点\n</span><span style=\"color:#6272a4\"></span>        ListNode o <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// p 为偶链表的头节点 e为尾节点\n</span><span style=\"color:#6272a4\"></span>        ListNode p <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">,</span> e <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> o<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> e<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            o<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> e<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            o <span style=\"color:#ff79c6\">=</span> o<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            e<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> o<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            e <span style=\"color:#ff79c6\">=</span> e<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        o<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"合并链表\">合并链表</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MergeKLists</span> <span style=\"color:#ff79c6\">{</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">ListNode</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode next<span style=\"color:#ff79c6\">;</span>\n\n        <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">ListNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">mergeKLists</span><span style=\"color:#ff79c6\">(</span>ListNode<span style=\"color:#ff79c6\">[]</span> lists<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 分治\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> lists<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>lists<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">],</span> lists<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">}</span>\n\n        <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n        ListNode<span style=\"color:#ff79c6\">[]</span> l1 <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">];</span>\n        ListNode<span style=\"color:#ff79c6\">[]</span> l2 <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">-</span> mid<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> mid<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            l1<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> mid<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> l2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++,</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            l2<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 详细思想参考 归并排序\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">return</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>mergeKLists<span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">),</span> mergeKLists<span style=\"color:#ff79c6\">(</span>l2<span style=\"color:#ff79c6\">));</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> ListNode <span style=\"color:#50fa7b\">mergeTwoLists</span><span style=\"color:#ff79c6\">(</span>ListNode l1<span style=\"color:#ff79c6\">,</span> ListNode l2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l1 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> l2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l2 <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> l1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode head <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> l2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            head <span style=\"color:#ff79c6\">=</span> l1<span style=\"color:#ff79c6\">;</span>\n            head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">,</span> l2<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            head <span style=\"color:#ff79c6\">=</span> l2<span style=\"color:#ff79c6\">;</span>\n            head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> mergeTwoLists<span style=\"color:#ff79c6\">(</span>l1<span style=\"color:#ff79c6\">,</span> l2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 巧妙办法 -》 利用最小堆\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param lists\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">mergeKLists2</span><span style=\"color:#ff79c6\">(</span>ListNode<span style=\"color:#ff79c6\">[]</span> lists<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> lists<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> lists<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span>\n\n        PriorityQueue<span style=\"color:#ff79c6\">&lt;</span>ListNode<span style=\"color:#ff79c6\">&gt;</span> pq <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> PriorityQueue<span style=\"color:#ff79c6\">&lt;&gt;(</span><span style=\"color:#ff79c6\">new</span> Comparator<span style=\"color:#ff79c6\">&lt;</span>ListNode<span style=\"color:#ff79c6\">&gt;()</span> <span style=\"color:#ff79c6\">{</span>\n            @Override\n            <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">compare</span><span style=\"color:#ff79c6\">(</span>ListNode o1<span style=\"color:#ff79c6\">,</span> ListNode o2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> o1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">-</span> o2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">});</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>ListNode list <span style=\"color:#ff79c6\">:</span> lists<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            pq<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>list<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> dummy<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(!</span>pq<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode node <span style=\"color:#ff79c6\">=</span> pq<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">poll</span><span style=\"color:#ff79c6\">();</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> node<span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                pq<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>node<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"分割链表\">分割链表</h3>\n<p>给你一个头结点为 head 的单链表和一个整数 k ，请你设计一个算法将链表分隔为 k 个连续的部分。</p>\n<p>每部分的长度应该尽可能的相等：任意两部分的长度差距不能超过 1 。这可能会导致有些部分为 null 。</p>\n<p>这 k 个部分应该按照在链表中出现的顺序排列，并且排在前面的部分的长度应该大于或等于排在后面的长度。</p>\n<p>返回一个由上述 k 部分组成的数组。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n\t\t<span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode<span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">splitListToParts</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 任意两部分长度差不能超过1\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// 前面部分 &gt;= 后面部分\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">){</span>\n            n<span style=\"color:#ff79c6\">++;</span>\n            cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 多出来的长度\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> mod <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">%</span> k<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 每一个的长度\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> size <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">/</span> k<span style=\"color:#ff79c6\">;</span>\n        ListNode <span style=\"color:#ff79c6\">[]</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">];</span>\n        cur  <span style=\"color:#ff79c6\">=</span> root<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> k <span style=\"color:#ff79c6\">&amp;&amp;</span> cur <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++){</span>\n            res<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#8be9fd\">int</span> cursize <span style=\"color:#ff79c6\">=</span> size <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">(</span>mod<span style=\"color:#ff79c6\">--</span> <span style=\"color:#ff79c6\">&gt;</span> 0 <span style=\"color:#ff79c6\">?</span> 1 <span style=\"color:#ff79c6\">:</span> 0<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> cursize <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++){</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            ListNode next <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> next<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"排序链表\">排序链表</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> ListNode <span style=\"color:#50fa7b\">sortList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">:</span> mergeSort<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> ListNode <span style=\"color:#50fa7b\">mergeSort</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode p <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">,</span> q <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">,</span> pre <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>q <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            pre <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">;</span>\n            p <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            q <span style=\"color:#ff79c6\">=</span> q<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        pre<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        ListNode l <span style=\"color:#ff79c6\">=</span> mergeSort<span style=\"color:#ff79c6\">(</span>head<span style=\"color:#ff79c6\">);</span>\n        ListNode r <span style=\"color:#ff79c6\">=</span> mergeSort<span style=\"color:#ff79c6\">(</span>p<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> merge<span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    ListNode <span style=\"color:#50fa7b\">merge</span><span style=\"color:#ff79c6\">(</span>ListNode l<span style=\"color:#ff79c6\">,</span> ListNode r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        ListNode dummyHead <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        ListNode cur <span style=\"color:#ff79c6\">=</span> dummyHead<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> r <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">;</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                l <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">;</span>\n                cur <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n                r <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dummyHead<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"重排链表\">重排链表</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 重排链表\n</span><span style=\"color:#6272a4\">     * 给定一个单链表L：L0→L1→…→Ln-1→Ln ，\n</span><span style=\"color:#6272a4\">     * 将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…\n</span><span style=\"color:#6272a4\">     * \n</span><span style=\"color:#6272a4\">     * 你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param head\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">reorderList</span><span style=\"color:#ff79c6\">(</span>ListNode head<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>head <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> head<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        ListNode dummy <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ListNode<span style=\"color:#ff79c6\">(</span>0<span style=\"color:#ff79c6\">);</span>\n        dummy<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 使得slow位于中间靠左边\n</span><span style=\"color:#6272a4\"></span>        ListNode fast <span style=\"color:#ff79c6\">=</span> dummy<span style=\"color:#ff79c6\">,</span> slow <span style=\"color:#ff79c6\">=</span> dummy<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> fast <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> fast <span style=\"color:#ff79c6\">=</span> fast<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">,</span> slow <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">;</span>\n        ListNode last <span style=\"color:#ff79c6\">=</span> slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n        slow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        last <span style=\"color:#ff79c6\">=</span> reverseList<span style=\"color:#ff79c6\">(</span>last<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 归并\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>ListNode cur <span style=\"color:#ff79c6\">=</span> head<span style=\"color:#ff79c6\">;</span> last <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ListNode tmp <span style=\"color:#ff79c6\">=</span> cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            ListNode tmp2 <span style=\"color:#ff79c6\">=</span> last<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span><span style=\"color:#ff79c6\">;</span>\n            cur<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> last<span style=\"color:#ff79c6\">;</span>\n            last<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">next</span> <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n            cur <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n            last <span style=\"color:#ff79c6\">=</span> tmp2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(1)-栈和队列\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(3)-二叉树\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法2-链表-suan-fa-2-lian-biao/index.html b/public/post/algorithm/算法2-链表-suan-fa-2-lian-biao/index.html
--- a/public/post/algorithm/算法2-链表-suan-fa-2-lian-biao/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法2-链表-suan-fa-2-lian-biao/index.html	(date 1694095063468)
@@ -1445,7 +1445,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法0-base-suan-fa-base/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法(0)-base\" />\n    <meta property=\"og:title\" content=\"算法(0)-base\" />\n    <meta property=\"twitter:title\" content=\"算法(0)-base\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法(0)-base | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法(0)-base</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Wednesday, November 17, 2021\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法0-base\">算法(0)-base</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>该文主要总结一些有关算法的基础，其具体的分类等在之后进行，这也是对自己刷题这么久来的一次系统化整理。该篇主要进行一些前置知识的整理和常见问题。具体类型查看后面系列，该文不涉及dp类等较难问题。</p>\n<p>其代码将具体存于：<a href=\"https://github.com/EdgarDing77/code-collection\">code-collection</a></p>\n<p><strong>更新说明：</strong></p>\n<ul>\n<li>2022/1/2：开始刷题笔记，具体处于 interview-note 模块中更具有方向性的进行练习，提高自己。\n<ul>\n<li>分类依据《程序员代码面试指南》，进行章节划分</li>\n<li>题库参考：\n<ul>\n<li>codetop.cn</li>\n<li>《程序员代码面试指南》</li>\n<li>《labuladong的算法小抄》</li>\n<li>《算法》第四版</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"基础\">基础</h2>\n<h3 id=\"时间复杂度\">时间复杂度</h3>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/algorithm/computational_complexity.png\" alt=\"img\">\n\n</p>\n<p>「What」时间复杂度是一个函数，定性描述该算法的运行时间。</p>\n<blockquote>\n<p>假设算法的问题规模为n，那么操作单元数量便用函数f(n)来表示，随着数据规模n的增大，算法执行时间的增长率和f(n)的增长率相同，这称作为算法的渐近时间复杂度，简称时间复杂度，记为 O(f(n))。</p>\n</blockquote>\n<p>时间复杂度的衡量通过<strong>大O表示法Big O notation</strong>，即O(n),O($n^2$)等方式。大O用于表示算法的<em>最坏情况下复杂度</em>，即对任意数据输入的运行时间上界。而时间复杂度都是忽略常数项系数的，因为一般情况下都是默认数据规模足够的大，基于这样的事实，给出的算法时间复杂的的一个排行如下所示：</p>\n<pre tabindex=\"0\"><code>O(1)常数阶 &lt; O(logn)对数阶 &lt; O(n)线性阶 &lt; O(n^2)平方阶 &lt; O(n^3)(立方阶) &lt; O(2^n) (指数阶)\n</code></pre><p>**「tip」**因为输入数据的不同，对于程序的运算时间也是有着很大影响的，当然对于正常来说如快排复杂度为O(nlogn)都是代表一般情况，而若是最坏情况就到了O($n^2$)，即不是严格的上界。因此面试中提的算法的时间复杂度指平均情况复杂度。</p>\n<h3 id=\"空间复杂度\">空间复杂度</h3>\n<p>「What」空间复杂度是对算法在运行过程中占用内存大小的量度，记做S(n)=O(f(n)。</p>\n<p>空间复杂度(Space Complexity)记作S(n) 依然使用大O来表示。利用程序的空间复杂度，可以对程序运行中需要多少内存有个预先估计。</p>\n<h3 id=\"时间复杂度计算\">时间复杂度计算</h3>\n<p>时间复杂度计算以<code>O(2*n^2 + 10*n + 1000)</code>为例：</p>\n<ol>\n<li>去掉常数项，因为常数项不会随着n而增加而增加操作次数</li>\n<li>完成(1)后，<code>O(n^2 + n)</code>，最后仅保留最高项得到<code>O(n^2)</code></li>\n</ol>\n<p>对于递归复杂度 = 递归次数 * 每次递归中的操作次数</p>\n<h3 id=\"ologn是以什么为底\">O(logn)是以什么为底？</h3>\n<p>logn是忽略底数的描述：</p>\n<ul>\n<li>$O(log_2n)$ = $log_2{10} * O(log_{10}n)$</li>\n<li>$log_i^n$ = $O(log_ij * log_jn)$ 其中$log_ij$是常数需要呗湖绿</li>\n<li>这也是$O(log_in) -&gt; O(logn)$缘由</li>\n</ul>\n<blockquote>\n<p>假如有两个算法的时间复杂度，分别是log以2为底n的对数和log以10为底n的对数，那么这里如果还记得高中数学的话，应该不难理解<code>以2为底n的对数 = 以2为底10的对数 * 以10为底n的对数</code>。</p>\n<p>而以2为底10的对数是一个常数，在上文已经讲述了我们计算时间复杂度是忽略常数项系数的。</p>\n<p>抽象一下就是在时间复杂度的计算过程中，log以i为底n的对数等于log 以j为底n的对数，所以忽略了i，直接说是logn。</p>\n</blockquote>\n<h3 id=\"数据的存储方式\">数据的存储方式</h3>\n<p>数据的存储方式只有两种：数组（顺序存储）和链表（链式存储）是数据结构的基础，而如栈、队列等都是在这之上的上层建筑。</p>\n<table>\n<thead>\n<tr>\n<th>存储方式</th>\n<th>优点</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数组</td>\n<td>根据索引可以直接访问所需任意节点</td>\n<td>在初始化的时候就需要知道元素的数量</td>\n</tr>\n<tr>\n<td>链表</td>\n<td>所需的空间大小与元素个数成正比</td>\n<td>需要引用遍历来访问任意元素</td>\n</tr>\n</tbody>\n</table>\n<p><strong>二者的优缺点如下</strong>：</p>\n<p><strong>数组</strong>由于是紧凑连续存储,可以随机访问，通过索引快速找到对应元素O(1)，而且相对节约存储空间。但正因为连续存储，内存空间必须一次性分配够，所以说数组如果要扩容，需要重新分配一块更大的空间，再把数据全部复制过去，时间复杂度 O(N)；而且你如果想在数组中间进行插入和删除，每次必须搬移后面的所有数据以保持连续，时间复杂度 O(N)。</p>\n<p><strong>链表</strong>因为元素不连续，而是靠指针指向下一个元素的位置，所以不存在数组的扩容问题；如果知道某一元素的前驱和后驱，操作指针即可删除该元素或者插入新元素，时间复杂度 O(1)。但是正因为存储空间不连续，你无法根据一个索引算出对应元素的地址，所以不能随机访问；而且由于每个元素必须存储指向前后元素位置的指针，会消耗相对更多的储存空间。</p>\n<h3 id=\"递归和迭代\">递归和迭代</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><strong>定义</strong></th>\n<th><strong>优点</strong></th>\n<th><strong>缺点</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>递归</td>\n<td>程序调用自身的编程技巧称为递归</td>\n<td>1）大问题化为小问题,可以极大的减少代码量；2）用有限的语句来定义对象的无限集合.；3）代码更简洁清晰，可读性更好</td>\n<td>1）递归调用函数,浪费空间；2）递归太深容易造成堆栈的溢出；</td>\n</tr>\n<tr>\n<td>迭代</td>\n<td>利用变量的原值推算出变量的一个新值，迭代就是A不停的调用B.</td>\n<td>1）迭代效率高，运行时间只因循环次数增加而增加；2）没什么额外开销，空间上也没有什么增加，</td>\n<td>1） 不容易理解；2） 代码不如递归简洁；3） 编写复杂问题时困难。</td>\n</tr>\n<tr>\n<td>二者关系</td>\n<td>1） 递归中一定有迭代,但是迭代中不一定有递归,大部分可以相互转换。2） 能用迭代的不用递归,递归调用函数,浪费空间,并且递归太深容易造成堆栈的溢出./<em>相对</em>/</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"理论知识\">理论知识</h2>\n<p>刷题分类：</p>\n<ul>\n<li>数组</li>\n<li>链表</li>\n<li>哈希表</li>\n<li>字符串</li>\n<li>双指针法</li>\n<li>栈与队列\n<ul>\n<li>单调栈</li>\n<li>单调队列</li>\n</ul>\n</li>\n<li>二叉树</li>\n<li>回溯算法</li>\n<li>贪心算法</li>\n<li>动态规划</li>\n</ul>\n<h3 id=\"数组\">数组</h3>\n<p>**「What」**数组是存放在连续内存空间上的相同类型的数据的集合。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>数组下标都是从0开始的</li>\n<li>数组内存空间的地址是连续的</li>\n</ul>\n<p>因为数组的内存空间是连续的，所以在进行删除或者增加元素的时候，就难免要移动其他元素的位置，且元素也是不能删除的，只能是覆盖。</p>\n<h3 id=\"链表\">链表</h3>\n<p>**「What」**链表是一种通过指针串联在一起的线性结构，每一个节点由两个部分组成，一个是数据域，一个是指针域（存放指向下一个节点的指针）。</p>\n<p><strong>链表类型：</strong></p>\n<ul>\n<li>单链表</li>\n<li>双链表</li>\n<li>循环链表：头尾指针相连</li>\n</ul>\n<p>链表节点的定义：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Node</span> <span style=\"color:#ff79c6\">{</span>\n\t\t<span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n  \tNode next<span style=\"color:#ff79c6\">;</span>\n  \tNode prev<span style=\"color:#ff79c6\">;</span> <span style=\"color:#6272a4\">// 若是双链表\n</span><span style=\"color:#6272a4\"></span><span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>链表操作：</strong></p>\n<ul>\n<li>删除节点：将删除节点的前一个节点指向删除节点的下一个节点；对于C++需要手动释放内存，但对于Java、Python有内存回收机制的就无需手动释放了。</li>\n<li>添加节点：改变添加位置的节点指向即可</li>\n</ul>\n<h3 id=\"树\">树</h3>\n<h4 id=\"二叉树\">二叉树</h4>\n<p>**「What」**每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次序，不可被随意颠倒。</p>\n<p>二叉树结点数可以为0，称空二叉树。</p>\n<p>常见定义方式：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">TreeNode</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode left<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> TreeNode right<span style=\"color:#ff79c6\">;</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">TreeNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">,</span> TreeNode left<span style=\"color:#ff79c6\">,</span> TreeNode right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">left</span> <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">right</span> <span style=\"color:#ff79c6\">=</span> right<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">TreeNode</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">this</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">val</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">;</span>\n        left <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n        right <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>本身性质：</strong></p>\n<ul>\n<li>结点数</li>\n<li>深度</li>\n</ul>\n<p><strong>特点：</strong></p>\n<ul>\n<li>二叉树的第<em>i</em>层至多有$2^{i-1}$个结点</li>\n<li>深度为<em>k</em>（k≥0）的二叉树至多总共有$2^{k+1}-1$个结点（定义根结点所在的深度为<em>k0=0）</em>，而总结拥有结点的数符合的，称“满二叉树”</li>\n<li>在一颗二叉树中，若除最后一层外的其余层都是满的，并且要么最后一层是满的，要么右边结点缺少若干结点，称“完全二叉树”，具有n个结点完全二叉树的深度为$log2n+1$，且结点数≥$2^{k-1}$</li>\n</ul>\n<p>二叉树通常作为数据结构应用，典型用法是对节点定义一个标记函数，将一些值与每个节点相关系。这样标记的二叉树就可以实现<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9\">二叉搜索树</a>和<a href=\"https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%83%E5%A0%86%E7%A9%8D\">二叉堆</a>，并应用于高效率的搜索和排序。</p>\n<p><strong>满二叉树性质：</strong></p>\n<p>对于深度为k（k≥1）的满二叉树：</p>\n<ul>\n<li>共有$2^k-1$个结点</li>\n<li>结点个数一定为奇数（仅有根结点（k=1层）为一个结点）</li>\n<li>第<em>i</em>层有$2^{i-1}$结点</li>\n<li>有$2^{k-1}$个叶子</li>\n</ul>\n<h4 id=\"二叉搜索树\">二叉搜索树</h4>\n<p><strong>「What」<strong>二叉搜索树（Binary Search Tree，BST）也称为二叉查找树、有序二叉树或者排序二叉树，指</strong>一颗空树</strong>或者具有以下性质的二叉树：</p>\n<ol>\n<li>若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；</li>\n<li>若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值；</li>\n<li>任意节点的左、右子树也分别为二叉查找树；</li>\n</ol>\n<p>BST的优势在于查找、插入的时间复杂度较低为$O(logn)$。BST是基础线性数据结构，用于构建更为抽象的数据结构。</p>\n<p>搜索、插入、删除的复杂度等于树高，期望$O(logn)$，最坏为$O(n)$（数列有序，树会退化成线性表）。</p>\n<p>改进版的二叉树可以使得树高为$O(logn)$，从降低最坏效率，如AVL树。</p>\n<h4 id=\"avl树\">AVL树</h4>\n<p><strong>「What」<strong>AVL（Adelson-Velsky and Landis Tree）定义：一种自平衡二叉树，在AVL树中，任一节点对应的两棵子树的最大高度差为1，因此它也被称为</strong>高度平衡树</strong>。查找、插入和删除在平均和最坏情况下的<a href=\"https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6\">时间复杂度</a>都是$O(logn)$，增加和删除元素的操作可能需要借助由一次或多次树旋转，来实现树的重新平衡。</p>\n<p><strong>节点平衡因子</strong>：由左子树的高度减去它的右子树高度（绝对值）≤1则被认为是平衡的。</p>\n<h4 id=\"红黑树\">红黑树</h4>\n<p><strong>「What」<strong>红黑树（Red-Black Tree）的定义：是一种</strong>自平衡二叉查找树</strong>，有着良好的最坏情况运行时间，并且在实践中高效：可以在$O(logn)$时间内完成查找、插入和删除，这里的<em>n</em>是树中的元素数目。红黑树的每个节点不同于AVL树，都是带有颜色属性的二叉查找树，颜色为红色或黑色。</p>\n<p><strong>性质：</strong></p>\n<ol>\n<li>节点为red或black</li>\n<li>根为black</li>\n<li>所有叶子都是black（叶子是NIL节点）</li>\n<li>每个red节点必须有两个black的子节点（从每个叶子到根的所有路径上不能有两个red节点）</li>\n<li>从任一节点到每个叶子节点的所有叶子的所有简单路径都包含相同的black节点</li>\n</ol>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/algorithm/red-black-tree.png\" alt=\"Image\">\n\n</p>\n<p>这些约束确保了红黑树的关键特性：从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。因为操作比如插入、删除和查找某个值的最坏情况时间都要求与树的高度成比例，这个在高度上的理论上限允许红黑树在最坏情况下都是高效的，而不同于普通的二叉查找树。</p>\n<h3 id=\"回溯\">回溯</h3>\n<p>**「What」**回溯其实就是递归，其本质是穷举，列出所有可能找出所需要的解。</p>\n<p>回溯一般可以解决以下问题：</p>\n<ul>\n<li>组合问题：N个数里面按一定规则找出k个数的集合</li>\n<li>切割问题：一个字符串按一定规则有几种切割方式</li>\n<li>子集问题：一个N个数的集合里有多少符合条件的子集</li>\n<li>排列问题：N个数按一定规则全排列，有几种排列方式</li>\n<li>棋盘问题：N皇后，解数独等问题</li>\n</ul>\n<p>**「tip」**组合无序，排列有序。</p>\n<p>所有回溯法解决的问题都可以抽象成树形结构，因为回溯法解决的就是在集合中递归查找子集，集合的大小就构成了递归的宽度即树的宽度，数据量的大小构成了递归的深度树的深度。</p>\n<h4 id=\"回溯模版\">回溯模版</h4>\n<p>解决一个回溯问题，实际就是一个决策树的遍历过程，只需要思考三个过程：</p>\n<ol>\n<li>路径：做出的选车</li>\n<li>选择列表：当前可以做的选择</li>\n<li>结束条件End Condition：达到决策树的底层，无法再做选择的条件</li>\n</ol>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-python\" data-lang=\"python\">result <span style=\"color:#ff79c6\">=</span> []\n<span style=\"color:#ff79c6\">def</span> <span style=\"color:#50fa7b\">backtrack</span>(trace[], select[]):\n  <span style=\"color:#ff79c6\">if</span> 满足结束条件：\n  \tresult<span style=\"color:#ff79c6\">.</span>add(trace[i])\n    <span style=\"color:#ff79c6\">return</span>\n  <span style=\"color:#ff79c6\">for</span> 选择 <span style=\"color:#ff79c6\">in</span> select[]:\n    do select\n    backtrack(trace[<span style=\"color:#8be9fd;font-style:italic\">next</span>], select[])\n    withdraw select\n</code></pre></div><p><strong>其核心就是for循环里面的递归，在递归调用前“做选择”，在递归调用后“撤销选择”。</strong></p>\n<h3 id=\"贪心\">贪心</h3>\n<p>**「What」**贪心的本质是选择每一阶段的局部最优，从而达到全局最优。</p>\n<p>其难点在于，如何通过局部最优，从而推出整体最优，因此能使用的贪心的题目可以通过举反例，来判断是否可以使用贪心。即现手动模拟，若可以模拟则尝试贪心，若不可行，就可能需要动态规划了。</p>\n<p>贪心的过程：</p>\n<ol>\n<li>将问题分解为若干个子问题</li>\n<li>找出适合贪心的策略</li>\n<li>求解每个子问题的最优解</li>\n<li>将局部解堆叠成全局最优解</li>\n</ol>\n<p>贪心可以认为是动态规划的一个特例，相比动态规划，使用贪心的算法需要满足更多的条件（贪心性质），但是效率要高于动态规划。</p>\n<h3 id=\"动态规划\">动态规划</h3>\n<p><strong>「What」<strong>动态规划Dynamic Programming，动态规划问题的一般形式是</strong>求最值</strong>，其求解的核心问题是<strong>穷举</strong>，但是这类穷举问题有点特别存在<strong>重叠子问题</strong>，若暴力穷举则效率低下，因此通过动态规划来避免不必要的计算。而且，动态规划一定<strong>具备最优子结构</strong>，才能通过子问题的最值的到原问题的最值。</p>\n<p>动态规划的问题需要以下特点：</p>\n<ul>\n<li>**子问题重叠性质：**这类问题存在重叠子问题</li>\n<li>**最优子结构：**该问题可以通过最优子问题得到原问题的最优解</li>\n<li>**无后效性：**子问题的解一旦确定就不再更改，不受在这之后、包含它的更大问题的求解决策影响</li>\n</ul>\n<p>思考状态转移方程的思维框架：</p>\n<ol>\n<li>这个问题的base case（最简单情况）是什么？</li>\n<li>这个问题有什么“状态”？</li>\n<li>对于每个“状态”，可以做什么“选择”使得“状态”发生改变？</li>\n<li>如何定义dp数组/函数的含义来表现“状态”和“选择”？</li>\n</ol>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-python\" data-lang=\"python\"><span style=\"color:#6272a4\"># 初始化 base case</span>\ndp[<span style=\"color:#bd93f9\">0</span>][<span style=\"color:#bd93f9\">0</span>][<span style=\"color:#ff79c6\">...</span>] <span style=\"color:#ff79c6\">=</span> base\n<span style=\"color:#6272a4\"># 进行状态转移</span>\n<span style=\"color:#ff79c6\">for</span> 状态1 <span style=\"color:#ff79c6\">in</span> 状态1的所有取值：\n    <span style=\"color:#ff79c6\">for</span> 状态2 <span style=\"color:#ff79c6\">in</span> 状态2的所有取值：\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">...</span>\n            dp[状态1][状态2][<span style=\"color:#ff79c6\">...</span>] <span style=\"color:#ff79c6\">=</span> 求最值(选择1，选择2<span style=\"color:#ff79c6\">...</span>)\n</code></pre></div><h2 id=\"位运算\">位运算</h2>\n<h3 id=\"位操作符\">位操作符</h3>\n<ul>\n<li>\n<p>“&amp;”，两个位都为1时才为1。</p>\n</li>\n<li>\n<p>“｜”，两个位都为0时才为0，否则为1。</p>\n</li>\n<li>\n<p>“^”异或，相同为0，不同为1。</p>\n</li>\n<li>\n<p>“～”取反，0-&gt;1,1-&gt;0。</p>\n</li>\n<li>\n<p>“&laquo;”左移运算符，向左移位，高位丢弃，低位补0。</p>\n</li>\n<li>\n<p>“&raquo;“右移运算符，向右移位，对无符号数，高位补0，对有符号数，高位补符号位。</p>\n</li>\n</ul>\n<h3 id=\"常见位运算\">常见位运算</h3>\n<ul>\n<li>乘除法：通过“&laquo;1”,”&raquo;1”来实现乘以2和除以。</li>\n<li>数值交换：</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-c\" data-lang=\"c\"><span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">swap</span>(<span style=\"color:#8be9fd\">int</span> <span style=\"color:#ff79c6\">&amp;</span>a, <span style=\"color:#8be9fd\">int</span> <span style=\"color:#ff79c6\">&amp;</span>b) {\n  \ta <span style=\"color:#ff79c6\">^=</span> b;\n  \tb <span style=\"color:#ff79c6\">^=</span> a;\n  \ta <span style=\"color:#ff79c6\">^=</span> b;\n}\n</code></pre></div><ul>\n<li>\n<p>判断奇偶性：<code>a&amp;1==0</code>判断二进制的最后一位。</p>\n</li>\n<li>\n<p>交换符号位：<code>return ~a + 1</code>整数取反加1，正好变成其对应的负数(补码表示)；负数取反加一，则变为其原码，即正数。</p>\n</li>\n<li>\n<p>求绝对值：整数的绝对值是其本身，负数的绝对值正好可以对其进行取反加一求得，即我们首先判断其符号位（整数右移 31 位得到 0，负数右移 31 位得到 -1,即 0xffffffff），然后根据符号进行相应的操作。</p>\n</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-c\" data-lang=\"c\"> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">abs</span>(<span style=\"color:#8be9fd\">int</span> a) {\n   \t<span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> a <span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#bd93f9\">31</span>;\n   \t<span style=\"color:#ff79c6\">return</span> i <span style=\"color:#ff79c6\">==</span> <span style=\"color:#bd93f9\">0</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#8be9fd;font-style:italic\">a</span> : (<span style=\"color:#ff79c6\">~</span>a <span style=\"color:#ff79c6\">+</span> <span style=\"color:#bd93f9\">1</span>);\n }\n</code></pre></div><ul>\n<li>高低位交换：如<code>a = (a &gt;&gt; 16) | (a &lt;&lt; 16);</code>HashMap的源码中出现。</li>\n</ul>\n<p>统计二进制中1的个数：</p>\n<p>**x &amp; (-x)：**保留二进制下最后出现的1的位置，其余位置置0（即一个数中最大的2的n次幂的因数  ）</p>\n<ul>\n<li>-x的运算是所有位置取反加1</li>\n</ul>\n<p>**x &amp; (x-1)：**消除二进制下最后出现1的位置，其余保持不变</p>\n<ul>\n<li>可用于判断是否是2的幂次方（是否只出现了一个1）</li>\n<li>二进制中1的个数</li>\n</ul>\n<h2 id=\"数组-1\">数组</h2>\n<h3 id=\"二分查找\">二分查找</h3>\n<p><strong>以下场景为寻找一个数（基本的二分搜索）</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">binarySearch</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n      r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n      l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n      <span style=\"color:#ff79c6\">return</span> mid<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n  <span style=\"color:#ff79c6\">}</span>\n  <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>二分的几个要点：</p>\n<ul>\n<li>计算mid时要防止溢出，<code>l + ((r - l) &gt;&gt; 1)</code>。</li>\n<li>为什么while循环的条件中的是&lt;=，而不是&lt;？\n<ul>\n<li>因为初始化right的赋值是nums.length-1，即最后一个元素的索引，而不是nums.length。</li>\n<li>而这个区间就是两端都闭的区间<code>[left, right]</code>，该区间就是每次都进行搜索的区间。</li>\n</ul>\n</li>\n<li>尽量统一写法，判断区间的不同，会导致边界更新的方式不同。</li>\n</ul>\n<p>若存在重复元素，则可以进行边界查找，查找第一个出现的元素：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 左边界查找 -》 左边第一个元素\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @param target\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">leftBoundSearch</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&gt;=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">||</span> nums<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">!=</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> l<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 右边界查找\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @param target\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">rightBoundSearch</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">&lt;</span> 0 <span style=\"color:#ff79c6\">||</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">!=</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> r<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 搜索左右边界\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @param target\n</span><span style=\"color:#6272a4\">     * @param isLeftOrRight true -&gt; left falst -&gt; right\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">binarySearch</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">boolean</span> isLeftOrRight<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> l <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>isLeftOrRight<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>isLeftOrRight <span style=\"color:#ff79c6\">&amp;&amp;</span> l <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> l<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(!</span>isLeftOrRight <span style=\"color:#ff79c6\">&amp;&amp;</span> r <span style=\"color:#ff79c6\">&gt;=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> r<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>而上面算法能搜索到左侧边界的原因在于对<code>nums[mid] == target</code>的处理：</p>\n<ul>\n<li>若为查找左边界，<code>right = mid - 1</code>收缩右侧边界。</li>\n<li>若为查找右边界，<code>left = mid + 1</code>收缩左侧边界。</li>\n</ul>\n<p>这里注意下边界检查，需要判断下是否过界。</p>\n<h4 id=\"二分查找问题\">二分查找问题</h4>\n<p><strong>搜索旋转数组：</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">search</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> len <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>len <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> len <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>l<span style=\"color:#ff79c6\">&lt;=</span>r<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> mid<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> target <span style=\"color:#ff79c6\">&lt;=</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> target <span style=\"color:#ff79c6\">&gt;=</span> nums<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"双指针\">双指针</h3>\n<h4 id=\"快慢指针\">快慢指针</h4>\n<p>快慢指针主要解决链表中的问题，但也能在数组中有着巧妙的运用。</p>\n<p><em>reference：<a href=\"https://leetcode-cn.com/problems/remove-element/\">27.移除元素</a></em></p>\n<p>该题的麻烦在于不能使用额外数组空间，但是不需要考虑数组中超出新长度后面的元素，因为数组在内存地中是连续的，不能单独删除数组中的某个元素，只能覆盖（这里磁盘的存储也是如此，所谓的删除仅是将相应的存储索引删除）。</p>\n<p>首先考虑暴力，通过两次for循环遍历，一次遍历元素第二次循环更新数组。时间复杂度是$O(n^2)$，代码如下：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">removeElement</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                    nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">}</span>\n                i<span style=\"color:#ff79c6\">--;</span>\n                n<span style=\"color:#ff79c6\">--;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> n<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>在数组操作的时候，可以考虑双指针（快慢指针），这里与快排<code>partitiion()</code>有着异曲同工之处：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">partition</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> left<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> pivot <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> left <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;=</span> right <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;=</span> pivot<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">++</span>i<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> right<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">removeElement</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">!=</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> i<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>以上复杂度为$O(n + nlogn)$。</p>\n<h4 id=\"左右指针\">左右指针</h4>\n<p>左右指针主要解决数组（或者字符串中的问题），如二分查找这种。</p>\n<p><em>reference：<a href=\"https://leetcode-cn.com/problems/squares-of-a-sorted-array/\">977. 有序数组的平方</a></em></p>\n<p>一样首先考虑暴力，这里最简单就是for循环遍历一边平方处理，再进行数组排序，时间复杂度为$O(nlogn)$。</p>\n<p>这里数组本身就是顺序的，平方后的变化在于负数，因此可以考虑左右指针，来进行处理：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sortedSquares</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> right <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> result <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> index <span style=\"color:#ff79c6\">=</span> result<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>left <span style=\"color:#ff79c6\">&lt;=</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">*</span> nums<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">*</span> nums<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                result<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">--]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">*</span> nums<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">++</span>left<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                result<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">--]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">*</span> nums<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">--</span>right<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> result<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>时间复杂度降到了$O(n)$，但相应的空间复杂度相比暴力的$O(1)$变成了$O(n)$。</p>\n<p><em><strong>题目：翻转数组</strong></em></p>\n<p>一般的语言都会提供<code>reverse()</code>，而这也是双指针的用武之地：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">(</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&gt;=</span> 0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n  <span style=\"color:#8be9fd\">int</span> k <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">-</span> j<span style=\"color:#ff79c6\">;</span>\n  <span style=\"color:#8be9fd\">byte</span> cj <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n  val<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> val<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">];</span>\n  val<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> cj<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>以上为<em>AbstractStringBuilder.java</em>中<code>reverse()</code>的一段截取。</p>\n<h3 id=\"滑动窗口\">滑动窗口</h3>\n<p>滑动窗口是双指针的一个进阶用法，即维护一个窗口不断滑动，然后更新答案。主要用于解决一大类字符串匹配问题。</p>\n<p>其大致逻辑如下：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> right <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>right <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n\twindow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">++]);</span> <span style=\"color:#6272a4\">// 扩大窗口\n</span><span style=\"color:#6272a4\"></span>\t\n\t<span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(</span>window needs shrink<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 缩小窗口\n</span><span style=\"color:#6272a4\"></span>    res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">()</span>； <span style=\"color:#6272a4\">// 这里进行需要的结果记录\n</span><span style=\"color:#6272a4\"></span>\t\twindow<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">remove</span><span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">++]);</span>\n\t<span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>时间复杂度为$O(n)$，对于字符串的一些问题进行暴力处理来说效率高的多。</p>\n<p><em>reference：<a href=\"https://leetcode-cn.com/problems/minimum-window-substring\">76.最小覆盖子串（困难）</a></em></p>\n<p>对于该问题使用暴力，大概如下：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">();</span> i<span style=\"color:#ff79c6\">++)</span>\n    <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">();</span> j<span style=\"color:#ff79c6\">++)</span>\n        <span style=\"color:#ff79c6\">if</span> s<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">:</span>j<span style=\"color:#ff79c6\">]</span> 包含 t 的所有字母<span style=\"color:#ff79c6\">:</span>\n            更新答案\n\n</code></pre></div><p>时间复杂度为$O(n^2)$，而滑动窗口算法如下：</p>\n<ol>\n<li>初始化：在字符串S中使用双指针的左右指针，初始化left=right=0，将索引的左闭合右开区间<code>[left, right)</code>称为<strong>窗口</strong>。</li>\n<li>窗口扩大：先不断扩大right，即扩大窗口，直到窗口中的值符合要求（包含T中的所有字符串）。</li>\n<li>达到收缩条件：停止增加right，转而增加left（缩小窗口），直到窗口中的字符串不再符合要求（不包含T的所有字符），同时每次增加left，都要更新一轮结果。</li>\n<li>重复(2)、(3)。</li>\n</ol>\n<p>具体代码如下：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> String <span style=\"color:#50fa7b\">minWindow</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">,</span> String t<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n1 <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">(),</span> n2 <span style=\"color:#ff79c6\">=</span> t<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>n1 <span style=\"color:#ff79c6\">==</span> 0 <span style=\"color:#ff79c6\">||</span> n2 <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#f1fa8c\">&#34;&#34;</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 需要的元素 记录元素的数量，以来判断何时进行shrink\n</span><span style=\"color:#6272a4\"></span>        HashMap<span style=\"color:#ff79c6\">&lt;</span>Character<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> needs <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#6272a4\">// 窗口\n</span><span style=\"color:#6272a4\"></span>        HashMap<span style=\"color:#ff79c6\">&lt;</span>Character<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> window <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">char</span> ch <span style=\"color:#ff79c6\">:</span> t<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">toCharArray</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">,</span> needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getOrDefault</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// validChar   start of result   len of result\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> valid <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> start <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> len <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0 <span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> r <span style=\"color:#ff79c6\">&lt;</span> n1<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">char</span> ch <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>r<span style=\"color:#ff79c6\">);</span>\n            r<span style=\"color:#ff79c6\">++;</span>\n            \n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">containsKey</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">,</span> window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getOrDefault</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">intValue</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">==</span> window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>ch<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">intValue</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 这里注意Java语言Integer缓存池问题\n</span><span style=\"color:#6272a4\"></span>                    valid<span style=\"color:#ff79c6\">++;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>valid <span style=\"color:#ff79c6\">==</span> needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">();</span>l<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 达到条件\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#8be9fd\">char</span> d <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#6272a4\">// 记录res结果值\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">-</span> l <span style=\"color:#ff79c6\">&lt;</span> len<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> \n                    len <span style=\"color:#ff79c6\">=</span> r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">;</span>\n                    start <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">containsKey</span><span style=\"color:#ff79c6\">(</span>d<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>needs<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>d<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">intValue</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">==</span> window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>d<span style=\"color:#ff79c6\">).</span><span style=\"color:#50fa7b\">intValue</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n                        valid<span style=\"color:#ff79c6\">--;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                    window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>d<span style=\"color:#ff79c6\">,</span> window<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>d<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> len <span style=\"color:#ff79c6\">==</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#f1fa8c\">&#34;&#34;</span> <span style=\"color:#ff79c6\">:</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">substring</span><span style=\"color:#ff79c6\">(</span>start<span style=\"color:#ff79c6\">,</span> start <span style=\"color:#ff79c6\">+</span> len<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"nsum\">NSum</h3>\n<p>twoSum的关键在于对于无序数组，首先考虑把数组排序后再考虑双指针，而这里主要是考虑使用HashMap去处理无序数组相关问题。</p>\n<p>两数之和：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">twoSum</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>2<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">){</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n    Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n    <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++){</span>\n        <span style=\"color:#8be9fd\">int</span> temp <span style=\"color:#ff79c6\">=</span> target <span style=\"color:#ff79c6\">-</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">containsKey</span><span style=\"color:#ff79c6\">(</span>temp<span style=\"color:#ff79c6\">)){</span>\n            res<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n            res<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>temp<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> i<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>三数之和为0：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#50fa7b\">threeSum</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">&lt;</span> 3<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> 2<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 如果nums[i] &gt; 0了，数组后面就不可能为0\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#6272a4\">// 去重操作！！\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">!=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#6272a4\">// 目标数为它的负数\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#8be9fd\">int</span> target <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">-</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#6272a4\">// j为mid指针，k为right指针，进行移动\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> k <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> k<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#8be9fd\">int</span> sum <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> nums<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>sum <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">asList</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">],</span> nums<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">]));</span>\n                    <span style=\"color:#6272a4\">// ！去重复操作，这是关键\n</span><span style=\"color:#6272a4\"></span>                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;</span> k <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                        j<span style=\"color:#ff79c6\">++;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;</span> k <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>k <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>k<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                        k<span style=\"color:#ff79c6\">--;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                    j<span style=\"color:#ff79c6\">++;</span>\n                    k<span style=\"color:#ff79c6\">--;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>sum <span style=\"color:#ff79c6\">&gt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    k<span style=\"color:#ff79c6\">--;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    j<span style=\"color:#ff79c6\">++;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n  \t<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>三数之和可以化解成，两数组之和加一次for迭代一个数，关键在于不让第一个数重复，至于后面的两个数，复用的towSum也保证它们不能重复。</p>\n<p>因此对于NSum问题：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * N数之和\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @param n 代表N个数之和\n</span><span style=\"color:#6272a4\">     * @param target NSum == target\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#50fa7b\">nSum</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> nSumTarget<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> n<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> target<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> <span style=\"color:#50fa7b\">nSumTarget</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> start<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> size <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#6272a4\">// 最少是n&gt;2的情况\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">&lt;</span> 2 <span style=\"color:#ff79c6\">||</span> size <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">==</span> 2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 最后复用twoSum函数\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#8be9fd\">int</span> lo <span style=\"color:#ff79c6\">=</span> start<span style=\"color:#ff79c6\">,</span> hi <span style=\"color:#ff79c6\">=</span> size <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>lo <span style=\"color:#ff79c6\">&lt;</span> hi<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> ans <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n                <span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>lo<span style=\"color:#ff79c6\">],</span> right <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>hi<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#8be9fd\">int</span> sum <span style=\"color:#ff79c6\">=</span> left <span style=\"color:#ff79c6\">+</span> right<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>sum <span style=\"color:#ff79c6\">&lt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>lo <span style=\"color:#ff79c6\">&lt;</span> hi <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>lo<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> left<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                        lo<span style=\"color:#ff79c6\">++;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>sum <span style=\"color:#ff79c6\">&gt;</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>lo <span style=\"color:#ff79c6\">&lt;</span> hi <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>hi<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                        hi<span style=\"color:#ff79c6\">--;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>sum <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    ans<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>left<span style=\"color:#ff79c6\">);</span>\n                    ans<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>right<span style=\"color:#ff79c6\">);</span>\n                    res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>ans<span style=\"color:#ff79c6\">);</span>\n                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>lo <span style=\"color:#ff79c6\">&lt;</span> hi <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>lo<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> left<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                        lo<span style=\"color:#ff79c6\">++;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                    <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>lo <span style=\"color:#ff79c6\">&lt;</span> hi <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>hi<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                        hi<span style=\"color:#ff79c6\">--;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> start<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> size<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// n &gt; 2，递归计算(n-1)Sum的结果\n</span><span style=\"color:#6272a4\"></span>                List<span style=\"color:#ff79c6\">&lt;</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;&gt;</span> ret <span style=\"color:#ff79c6\">=</span> nSumTarget<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> target <span style=\"color:#ff79c6\">-</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span>List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> arr <span style=\"color:#ff79c6\">:</span> ret<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n                    res<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">&lt;</span> size <span style=\"color:#ff79c6\">-</span> 1 <span style=\"color:#ff79c6\">&amp;&amp;</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> nums<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    i<span style=\"color:#ff79c6\">++;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"题目补充\">题目补充</h2>\n<h3 id=\"数字序列\">数字序列</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 实现获取 下一个排列 的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。\n</span><span style=\"color:#6272a4\">     * 如果不存在下一个更大的排列，则将数字重新排列成最小的排列（即升序排列）。\n</span><span style=\"color:#6272a4\">     * 必须 原地 修改，只允许使用额外常数空间。\n</span><span style=\"color:#6272a4\">     * Q.1 2 3 4 5\n</span><span style=\"color:#6272a4\">     * A.1 2 3 5 4\n</span><span style=\"color:#6272a4\">     * Q.1 5 4 3 2\n</span><span style=\"color:#6272a4\">     * A. 2 1 3 4 5\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">nextPermutation</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">&lt;=</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 数组中升序的最后一位\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                l <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 之后查找降序的第一位\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                r <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 交换两个位置的数\n</span><span style=\"color:#6272a4\"></span>        swap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#6272a4\">// 进行排序 对降序的\n</span><span style=\"color:#6272a4\"></span>        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> l <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> n<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"数组中第k大的数\">数组中第K大的数</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\">   <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 数组中第k大的元素\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @param k\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">findKthLargest</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> heapSize <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        buildMaxHeap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> heapSize<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&gt;=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> k <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">--</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            swap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">--</span>heapSize<span style=\"color:#ff79c6\">;</span>\n            maxHeapify<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> heapSize<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> nums<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">buildMaxHeap</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> a<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> heapSize<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> heapSize <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&gt;=</span> 0<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">--</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            maxHeapify<span style=\"color:#ff79c6\">(</span>a<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> heapSize<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">maxHeapify</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> a<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> heapSize<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">*</span> 2 <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">*</span> 2 <span style=\"color:#ff79c6\">+</span> 2<span style=\"color:#ff79c6\">,</span> largest <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&lt;</span> heapSize <span style=\"color:#ff79c6\">&amp;&amp;</span> a<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> a<span style=\"color:#ff79c6\">[</span>largest<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n            largest <span style=\"color:#ff79c6\">=</span> l<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">&lt;</span> heapSize <span style=\"color:#ff79c6\">&amp;&amp;</span> a<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> a<span style=\"color:#ff79c6\">[</span>largest<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n            largest <span style=\"color:#ff79c6\">=</span> r<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>largest <span style=\"color:#ff79c6\">!=</span> i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            swap<span style=\"color:#ff79c6\">(</span>a<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> largest<span style=\"color:#ff79c6\">);</span>\n            maxHeapify<span style=\"color:#ff79c6\">(</span>a<span style=\"color:#ff79c6\">,</span> largest<span style=\"color:#ff79c6\">,</span> heapSize<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"数组中出现两次的元素\">数组中出现两次的元素</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\">    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 给定一个整数数组 a，其中1 ≤ a[i] ≤ n （n为数组长度）, 其中有些元素出现两次而其他元素出现一次。\n</span><span style=\"color:#6272a4\">     * 找到所有出现两次的元素。\n</span><span style=\"color:#6272a4\">     * 你可以不用到任何额外空间并在O(n)时间复杂度内解决这个问题吗？\n</span><span style=\"color:#6272a4\">     * 注意1 ≤ a[i] ≤ n\n</span><span style=\"color:#6272a4\">     * 通过这个来在原地数组进行记录\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param nums\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#50fa7b\">findDuplicates</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        List<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> ret <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            nums<span style=\"color:#ff79c6\">[(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">%</span> n<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+=</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> 2 <span style=\"color:#ff79c6\">*</span> n<span style=\"color:#ff79c6\">)</span> ret<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">add</span><span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ret<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"搜索旋转数组\">搜索旋转数组</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">search</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> len <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>len <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> len <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>l<span style=\"color:#ff79c6\">&lt;=</span>r<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> target<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> mid<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> target <span style=\"color:#ff79c6\">&lt;=</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>target <span style=\"color:#ff79c6\">&lt;</span> nums<span style=\"color:#ff79c6\">[</span>mid<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> target <span style=\"color:#ff79c6\">&gt;=</span> nums<span style=\"color:#ff79c6\">[</span>l<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Kubernetes-基础\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(1)-栈和队列\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法0-base-suan-fa-base/index.html b/public/post/algorithm/算法0-base-suan-fa-base/index.html
--- a/public/post/algorithm/算法0-base-suan-fa-base/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法0-base-suan-fa-base/index.html	(date 1694095063468)
@@ -1245,7 +1245,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/search/placeholder/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/search/placeholder/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1></h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Monday, January 1, 0001\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                \n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/search/placeholder/index.html b/public/search/placeholder/index.html
--- a/public/search/placeholder/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/search/placeholder/index.html	(date 1694095063352)
@@ -338,7 +338,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Posts | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n         \t\n                \n\n\n            </div>\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/index.html b/public/post/index.html
--- a/public/post/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/index.html	(date 1694095063359)
@@ -288,7 +288,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法-排序-pai-xu-suan-fa/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法-排序\" />\n    <meta property=\"og:title\" content=\"算法-排序\" />\n    <meta property=\"twitter:title\" content=\"算法-排序\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法-排序 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法-排序</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Wednesday, September 8, 2021\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法-排序\">算法-排序</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>以下为自己整理总结的常用排序算法与实现。\n时间复杂度一次完整的计算：<a href=\"http://discrete.gr/complexity/\">http://discrete.gr/complexity/</a></p>\n<blockquote>\n<p>基础的三种排序：冒泡排序、插入排序、选择排序\n三种常见的排序：归并排序、快速排序、插入排序</p>\n</blockquote>\n<p>简单接口说明：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">interface</span> <span style=\"color:#50fa7b\">Sort</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">);</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"复杂度浏览\">复杂度浏览</h3>\n<table>\n<thead>\n<tr>\n<th>Algorithm</th>\n<th>Time Complexity</th>\n<th></th>\n<th></th>\n<th>Space Complexity</th>\n<th>staility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>Best</td>\n<td>Average</td>\n<td>Worst</td>\n<td>Worst</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Bubble_sort\">Bubble Sort</a></td>\n<td><code>Ω(n)</code></td>\n<td><code>Θ(n^2)</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(1)</code></td>\n<td>Y</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Insertion_sort\">Insertion Sort</a></td>\n<td><code>Ω(n)</code></td>\n<td><code>Θ(n^2)</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(1)</code></td>\n<td>Y</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Selection_sort\">Selection Sort</a></td>\n<td><code>Ω(n^2)</code></td>\n<td><code>Θ(n^2)</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(1)</code></td>\n<td>N</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Quicksort\">Quicksort</a></td>\n<td><code>Ω(n log(n))</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(log(n))</code></td>\n<td>N</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Merge_sort\">Mergesort</a></td>\n<td><code>Ω(n log(n))</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n log(n))</code></td>\n<td><code>O(n)</code></td>\n<td>Y</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Heapsort\">Heapsort</a></td>\n<td><code>Ω(n log(n))</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n log(n))</code></td>\n<td><code>O(1)</code></td>\n<td>N</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Shellsort\">Shell Sort</a></td>\n<td><code>Ω(n log(n))</code></td>\n<td><code>Θ(n(log(n))^2)</code></td>\n<td><code>O(n(log(n))^2)</code></td>\n<td><code>O(1)</code></td>\n<td>N</td>\n</tr>\n<tr>\n<td><a href=\"https://en.wikipedia.org/wiki/Counting_sort\">Counting Sort</a></td>\n<td><code>Ω(n+k)</code></td>\n<td><code>Θ(n+k)</code></td>\n<td><code>O(n+k)</code></td>\n<td><code>O(k)</code></td>\n<td>Y</td>\n</tr>\n<tr>\n<td><a href=\"https://en.wikipedia.org/wiki/Tree_sort\">Tree Sort</a></td>\n<td><code>Ω(n log(n))</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(n)</code></td>\n<td>Y</td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Bucket_sort\">Bucket Sort</a></td>\n<td><code>Ω(n+k)</code></td>\n<td><code>Θ(n+k)</code></td>\n<td><code>O(n^2)</code></td>\n<td><code>O(n)</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Radix_sort\">Radix Sort</a></td>\n<td><code>Ω(nk)</code></td>\n<td><code>Θ(nk)</code></td>\n<td><code>O(nk)</code></td>\n<td><code>O(n+k)</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://en.wikipedia.org/wiki/Cubesort\">Cubesort</a></td>\n<td><code>Ω(n)</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n log(n))</code></td>\n<td><code>O(n)</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://en.wikipedia.org/wiki/Timsort\">Timsort</a></td>\n<td><code>Ω(n)</code></td>\n<td><code>Θ(n log(n))</code></td>\n<td><code>O(n log(n))</code></td>\n<td><code>O(n)</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>参考：<a href=\"https://www.bigocheatsheet.com/\">复杂度浏览表</a></p>\n<h2 id=\"冒泡排序\">冒泡排序</h2>\n<p>每次从头开始进行比较，将大的数往后移动，在第n次循环结束的时候，第n大的数就位于数组的第n-1位。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">BubbleSort</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Sort <span style=\"color:#ff79c6\">{</span>\n    @Override\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 若没有发生交换的时候表示循环结束\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#8be9fd\">boolean</span> isSwap <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#6272a4\">// j &lt; n - i 减少循环次数\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>j <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">);</span>\n                    isSwap <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(!</span>isSwap<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> arr<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n\n</code></pre></div><h2 id=\"插入排序\">插入排序</h2>\n<p>将数找到合适的位置，将该位置的数全部向后移动，留出插入的空间进行插入。（未有交换操作）</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">InsertionSort</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Sort <span style=\"color:#ff79c6\">{</span>\n    @Override\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 选中的数\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#8be9fd\">int</span> key <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#6272a4\">// 寻找合适的位置\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span>j <span style=\"color:#ff79c6\">&gt;=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> key<span style=\"color:#ff79c6\">;</span>j<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n                arr<span style=\"color:#ff79c6\">[</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">}</span>\n            arr<span style=\"color:#ff79c6\">[</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> key<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> arr<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n\n</code></pre></div><h2 id=\"选择排序\">选择排序</h2>\n<p>在尚未排序的序列中找到一个最小的元素，放入到排序完序列的最后一位。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">SelectionSort</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Sort <span style=\"color:#ff79c6\">{</span>\n    @Override\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 选定最小的数\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#8be9fd\">int</span> min <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> arr<span style=\"color:#ff79c6\">[</span>min<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    min <span style=\"color:#ff79c6\">=</span> j<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>min <span style=\"color:#ff79c6\">!=</span> i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> min<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> arr<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"归并排序\">归并排序</h2>\n<blockquote>\n<p>将两个有序的数组归并成一个较大的数组。\n要将一个数组排序，先（递归）分成两半分别排序，然后将递归结果合并。将复杂问题进行简单化，然后解决完后这个复杂问题也就解决。</p>\n</blockquote>\n<p><strong>特点：</strong></p>\n<ul>\n<li>将任意长度为N的数组排序所需的时间和NlgN成正比</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>所需的额外空间和N成正比</li>\n</ul>\n<p>归并排序的递归调用发生在处理数组之前，且在内循环的时候仍然在进行数组的移动。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MergeSort</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Sort <span style=\"color:#ff79c6\">{</span>\n    @Override\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        mergeSort<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> arr<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">mergeSort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> left<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>left <span style=\"color:#ff79c6\">&lt;</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> left <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">((</span>right <span style=\"color:#ff79c6\">-</span> left<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&gt;&gt;</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#6272a4\">// 注意这里递归调用是mid的值\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#6272a4\">// 如果以left ～ mid-1 可能会stackoverflow\n</span><span style=\"color:#6272a4\"></span>            mergeSort<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> left<span style=\"color:#ff79c6\">,</span> mid<span style=\"color:#ff79c6\">);</span>\n            mergeSort<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> right<span style=\"color:#ff79c6\">);</span>\n            merge<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> left<span style=\"color:#ff79c6\">,</span> mid<span style=\"color:#ff79c6\">,</span> right<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">merge</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> left<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> mid<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> size <span style=\"color:#ff79c6\">=</span> right <span style=\"color:#ff79c6\">-</span> left <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 创建一个size大小的数组存放归并后的数组\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> temp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>size<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> index <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">&lt;=</span> mid <span style=\"color:#ff79c6\">&amp;&amp;</span> j <span style=\"color:#ff79c6\">&lt;=</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                temp<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">++];</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                temp<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">++];</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">&lt;=</span> mid<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            temp<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">++];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;=</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            temp<span style=\"color:#ff79c6\">[</span>index<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">++];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        System<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">arraycopy</span><span style=\"color:#ff79c6\">(</span>temp<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> arr<span style=\"color:#ff79c6\">,</span> left<span style=\"color:#ff79c6\">,</span> size<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n<span style=\"color:#ff79c6\">}</span>\n\n</code></pre></div><h2 id=\"快速排序\">快速排序</h2>\n<blockquote>\n<p>快排是一种分治排序。\n将一个数组分为两个子数组，将两部分独立排序。与归并排序是互补的，其归并是递归调用发生在处理整个数组之后，二快排则是之前。</p>\n</blockquote>\n<p><strong>特点：</strong></p>\n<ul>\n<li>\n<p>原地排序 → 需要辅助栈</p>\n</li>\n<li>\n<p>将任意长度为N的数组排序所需的时间和NlgN成正比</p>\n</li>\n<li>\n<p>快排的内循环比大多数排序算法都要短 → 依赖于切分数组的效果 → 依赖于切分元素的值</p>\n</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>非常脆弱（不稳定）</li>\n</ul>\n<p>快排的切分方法的内循环是使用一个递增的索引将数组元素与定值做比较，这种简洁的方式，比起归并和shell排序，它们仍需要在内循环中移动数组。相比起归并，</p>\n<p>其次，快排的另一个优势在于它的比较次数较小。</p>\n<p><strong>解决快排的优化方法：</strong></p>\n<ul>\n<li>\n<p>快排不稳定的原因：</p>\n<ul>\n<li>\n<p>数组切分不平衡 → 如果第一次最小元素切分，第二次从第二小的元素进行切分，如此这般，每次调用只会移除一个元素。</p>\n</li>\n<li>\n<p>大量重复的元素</p>\n</li>\n</ul>\n</li>\n<li>\n<p>解决办法 → 数组随机排序：</p>\n<ul>\n<li>\n<p>切换到插入排序\n对于小数组而言，快排比插入排序慢\n因为递归，快排中的sort（）方法会在小数组中也调用自己</p>\n</li>\n<li>\n<p>三取样切分\n使用子数组的一小部分元素的中位数来切分数组，切分更好但是会带来计算中位数的开销。</p>\n</li>\n<li>\n<p>墒最优排序\n如果数组中出现大量的重复元素，一般来说这时就无须进行下去，但是快排仍会继续进行数组切分。\n三向切分，维护一个lt，使得a[lo..lt-1]中的元素都小于v，维护一个rt，使得a[rt+1&hellip;a.len-1]中的所有元素都大于v。\n多了维护的开销。</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">QuickSort</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sortArray</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        quickSort<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> nums<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">quickSort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> l<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>l <span style=\"color:#ff79c6\">&lt;</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> pivot <span style=\"color:#ff79c6\">=</span> randomPartition<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n            quickSort<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">,</span> pivot <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n            quickSort<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> pivot <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">randomPartition</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> l<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> Random<span style=\"color:#ff79c6\">().</span><span style=\"color:#50fa7b\">nextInt</span><span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">-</span> l <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">+</span> l<span style=\"color:#ff79c6\">;</span>\n        swap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> partition<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">partition</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> l<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> r<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// pivot -&gt; nums[r]\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>l<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>l<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;=</span>r<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;=</span> nums<span style=\"color:#ff79c6\">[</span>r<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                swap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">++</span>i<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        swap<span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">swap</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> temp <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n        nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n        nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> temp<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"堆排序\">堆排序</h2>\n<blockquote>\n<p>基于<em>二叉堆</em>数据结构的一种优先队列的实现，用数组保存元素并按照一定条件排序。实现高效的删除最大元素和插入最大元素的操作。</p>\n</blockquote>\n<p>在二叉堆数组中，每个元素都要保证大于等于两个特定的元素。在一个堆中，位置k的结点的父结点的位置为[k/2]，而它的两个子结点的位置则分别为2k和2k+1。</p>\n<p>用它实现排序的时候，需要进行堆化操作，使用一个面向最大元素的优先队列（最大堆-最大元素位于根），并重复删除最大元素，来实现堆排序。</p>\n<ol>\n<li>\n<p>先将初始序列K[0:n]建成一个大顶堆, 那么此时第一个元素K1最大, 此堆为初始的无序区.</p>\n</li>\n<li>\n<p>再将关键字最大的记录K1 (即堆顶, 第一个元素)和无序区的最后一个记录 Kn 交换, 由此得到新的无序区K[1:n−1]和有序区K[n], 且满足K[1:n−1].keys≤K[n].key</p>\n</li>\n<li>\n<p>交换K1 和 Kn 后, 堆顶可能违反堆性质, 因此需将K[1..n−1]调整为堆. 然后重复步骤②, 直到无序区只有一个元素时停止.</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>节点k的左子节点：2*k</p>\n</li>\n<li>\n<p>节点k的右子节点：2*k+1</p>\n</li>\n<li>\n<p>父节点：floor(k/2)</p>\n</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Java\" data-lang=\"Java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">HeapSort</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Sort <span style=\"color:#ff79c6\">{</span>\n    @Override\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 1.构建大顶堆\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&gt;=</span> 0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            maxHeapify<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 2.调整堆结构 + 交换堆顶与末尾元素 -&gt; 从而达到排序的目的\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&gt;</span> 0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// 堆顶的元素由于是最大的，与末尾元素进行交换\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#6272a4\">// 使得arr[j]是所有元素中最大的数\n</span><span style=\"color:#6272a4\"></span>            swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#6272a4\">// 删除最大元素 j\n</span><span style=\"color:#6272a4\"></span>            maxHeapify<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> arr<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">buildHeap</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> len<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>len<span style=\"color:#ff79c6\">/</span>2<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            maxHeapify<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> len<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">maxHeapify</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> len<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;(</span>i <span style=\"color:#ff79c6\">&lt;&lt;</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&lt;</span> len<span style=\"color:#ff79c6\">;)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> left <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">*</span> 2<span style=\"color:#ff79c6\">,</span> right <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">*</span> 2 <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> largest <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>left <span style=\"color:#ff79c6\">&lt;</span> len <span style=\"color:#ff79c6\">&amp;&amp;</span> arr<span style=\"color:#ff79c6\">[</span>largest<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> arr<span style=\"color:#ff79c6\">[</span>left<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                largest <span style=\"color:#ff79c6\">=</span> left<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>right <span style=\"color:#ff79c6\">&lt;</span> len <span style=\"color:#ff79c6\">&amp;&amp;</span> arr<span style=\"color:#ff79c6\">[</span>largest<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> arr<span style=\"color:#ff79c6\">[</span>right<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                largest <span style=\"color:#ff79c6\">=</span> right<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>largest <span style=\"color:#ff79c6\">!=</span> i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                swap<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> largest<span style=\"color:#ff79c6\">);</span>\n                i <span style=\"color:#ff79c6\">=</span> largest<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Datadog Agent部署\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法-排序-pai-xu-suan-fa/index.html b/public/post/algorithm/算法-排序-pai-xu-suan-fa/index.html
--- a/public/post/algorithm/算法-排序-pai-xu-suan-fa/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法-排序-pai-xu-suan-fa/index.html	(date 1694095063402)
@@ -775,7 +775,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/categories/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Categories | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/categories/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n         \t\n                \n\n\n            </div>\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/categories/index.html b/public/categories/index.html
--- a/public/categories/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/categories/index.html	(date 1694095063369)
@@ -288,7 +288,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法4-动态规划-suan-fa-4-dong-tai-gui-hua/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法(4)-动态规划\" />\n    <meta property=\"og:title\" content=\"算法(4)-动态规划\" />\n    <meta property=\"twitter:title\" content=\"算法(4)-动态规划\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法(4)-动态规划 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法(4)-动态规划</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Friday, January 14, 2022\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法4-动态规划\">算法(4)-动态规划</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>**「What」**动态规划（Dynamic Programming，DP），动态规划是一种过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。</p>\n<p>首先，动态规划的一般形式就是<strong>求最值</strong>，而求解动态规划的核心问题是<strong>穷举</strong>，但动态规划通过仅仅解决每个子问题一次从而减少计算量，相比朴素解法效率上高很多。动态规划在查找有很多<strong>重叠子问题</strong>的情况的最优解时有效。它将问题重新组合成子问题。为了避免多次解决这些子问题，它们的结果都逐渐被计算并被保存，从简单的问题直到整个问题都被解决。因此动态规划<strong>保存递归时结果</strong>，因而不会在解决同样的问题时花费时间。</p>\n<p>动态规划只能应用于有最优子结构的问题。最优子结构的意思是局部最优解能决定全局最优解（对有些问题这个要求并不能完全满足，故有时需要引入一定的近似）。简单地说，问题能够分解成子问题来解决。</p>\n<p>综上动态规划的问题需要以下特点：</p>\n<ul>\n<li>**子问题重叠性质：**这类问题存在重叠子问题</li>\n<li>**最优子结构：**该问题可以通过最优子问题得到原问题的最优解</li>\n<li>**无后效性：**子问题的解一旦确定就不再更改，不受在这之后、包含它的更大问题的求解决策影响</li>\n</ul>\n<p>思考状态转移方程的思维框架：</p>\n<ol>\n<li>这个问题的base case（最简单情况）是什么？</li>\n<li>这个问题有什么“状态”？</li>\n<li>对于每个“状态”，可以做什么“选择”使得“状态”发生改变？</li>\n<li>如何定义dp数组/函数的含义来表现“状态”和“选择”？</li>\n<li>dp方向？根据已知推出未知。</li>\n</ol>\n<p>即三点：<strong>状态</strong>、<strong>选择</strong>、<strong>dp数组的定义</strong>。</p>\n<p><em>tips：这里只是做题目代码的整合。同时以《labuladong的算法小抄》为主进行刷题的笔记。</em></p>\n<p><strong>思路模版</strong></p>\n<ol>\n<li>一维数组：一般定义为以dp[i]结尾的最长XXX。</li>\n<li>二维数组：\n<ol>\n<li>涉及两个字符串/数组的时候：对于arr[0..i]和arr[0..j]的最长为dp[i][j]。</li>\n<li>涉及一个字符串/数组的时候，对于arr[i..j]的最长为dp[i][j]。</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"基础\">基础</h2>\n<h3 id=\"爬楼梯问题\">爬楼梯问题</h3>\n<h4 id=\"70爬楼梯httpsleetcode-cncomproblemsclimbing-stairs\"><a href=\"https://leetcode-cn.com/problems/climbing-stairs/\">70.爬楼梯</a></h4>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">climbStairs</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">];</span>\n    dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n    dp<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 2<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;=</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n        dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 2<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"746使用最小花费爬楼梯httpsleetcode-cncomproblemsmin-cost-climbing-stairs\"><a href=\"https://leetcode-cn.com/problems/min-cost-climbing-stairs/\">746.使用最小花费爬楼梯</a></h4>\n<p>多了条件：每当你爬上一个阶梯你都要花费对应的体力值，一旦支付了相应的体力值，你就可以选择向上爬一个阶梯或者爬两个阶梯；因此这里的dp[i]的定义：到达第i个台阶所花费的最少体力为dp[i]。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">minCostClimbingStairs</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> cost<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>cost <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> cost<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">];</span>\n        dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> cost<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        dp<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> cost<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 2<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 2<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">+</span> cost<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">//最后一步，如果是由倒数第二步爬，则最后一步的体力花费可以不用算\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">return</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>cost<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 2<span style=\"color:#ff79c6\">]);</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"路径问题\">路径问题</h3>\n<h4 id=\"62不同路径httpsleetcode-cncomproblemsunique-paths\"><a href=\"https://leetcode-cn.com/problems/unique-paths/\">62.不同路径</a></h4>\n<p><code>dp[i][j]</code>表示从（0，0）出发到（i，j）有<code>dp[i][j]</code>种不同路径。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">uniquePaths</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> m<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>m<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#6272a4\">//初始化\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> m<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> m<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]+</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>m<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"63不同路径iihttpsleetcode-cncomproblemsunique-paths-ii\"><a href=\"https://leetcode-cn.com/problems/unique-paths-ii/\">63.不同路径II</a></h4>\n<p>增加了障碍物，仅需标记对应的dp位置保持初值就好了。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">uniquePathsWithObstacles</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> obstacleGrid<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> obstacleGrid<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">,</span> m <span style=\"color:#ff79c6\">=</span> obstacleGrid<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">].</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>m<span style=\"color:#ff79c6\">];</span>\n        dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1 <span style=\"color:#ff79c6\">-</span> obstacleGrid<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> m<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>obstacleGrid<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>obstacleGrid<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;</span> m<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>obstacleGrid<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">continue</span><span style=\"color:#ff79c6\">;</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>m <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"跳跃游戏问题\">跳跃游戏问题</h3>\n<h4 id=\"跳跃游戏i\">跳跃游戏I</h4>\n<blockquote>\n<h4 id=\"55-跳跃游戏httpsleetcode-cncomproblemsjump-game\"><a href=\"https://leetcode-cn.com/problems/jump-game/\">55. 跳跃游戏</a></h4>\n<p>难度中等1592</p>\n<p>给定一个非负整数数组 <code>nums</code> ，你最初位于数组的 <strong>第一个下标</strong> 。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>判断你是否能够到达最后一个下标。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>贪心：只需要计算能跳达的最远是否超过最后一个下标即可。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1: 贪心</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">canJump</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> farthest <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            farthest <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>farthest<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>farthest <span style=\"color:#ff79c6\">&lt;=</span> i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 碰到0卡住了\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> farthest <span style=\"color:#ff79c6\">&gt;=</span> n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"跳跃游戏ii\">跳跃游戏II</h4>\n<blockquote>\n<h4 id=\"45-跳跃游戏-iihttpsleetcode-cncomproblemsjump-game-ii\"><a href=\"https://leetcode-cn.com/problems/jump-game-ii/\">45. 跳跃游戏 II</a></h4>\n<p>难度中等1368</p>\n<p>给你一个非负整数数组 <code>nums</code> ，你最初位于数组的第一个位置。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>你的目标是使用最少的跳跃次数到达数组的最后一个位置。</p>\n<p>假设你总是可以到达数组的最后一个位置。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>这里不同于上题，求的是最少需要跳多少次能到最后一个位置。因此，并不是跳的越多越好。</li>\n<li>Method1: 若采用动态规划，自顶向下的动态规划：\n<ol>\n<li>base case：dp[0]=0;dp[1..i]=Integer.MAX_VALUE;</li>\n<li>定义：dp[i]表示从所以i跳到最后一格所需的最少步数。</li>\n<li>选择跳i步，但是寻找跳到i最小的作为结果。</li>\n</ol>\n</li>\n<li>Method2: 贪心，在当前i得时候选择能跳到最远的索引(i, i+nums[i])</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">jump</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> n<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;=</span> i <span style=\"color:#ff79c6\">-</span> j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 当前能跳的距离大于了搜索范围\n</span><span style=\"color:#6272a4\"></span>                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Method2:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">jump</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 站在索引i，最多能跳到索引end\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> end <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">// 从索引i到end能跳到最远的距离\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> farthest <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> jumpCount <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            farthest <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> i<span style=\"color:#ff79c6\">,</span> farthest<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#6272a4\">// farthest记录了从i 到 end能跳到的最远距离\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>end <span style=\"color:#ff79c6\">==</span> i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                jumpCount<span style=\"color:#ff79c6\">++;</span>\n                end <span style=\"color:#ff79c6\">=</span> farthest<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> jumpCount<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"跳跃游戏iii\">跳跃游戏III</h4>\n<blockquote>\n<h4 id=\"1306-跳跃游戏-iiihttpsleetcode-cncomproblemsjump-game-iii\"><a href=\"https://leetcode-cn.com/problems/jump-game-iii/\">1306. 跳跃游戏 III</a></h4>\n<p>难度中等91</p>\n<p>这里有一个非负整数数组 <code>arr</code>，你最开始位于该数组的起始下标 <code>start</code> 处。当你位于下标 <code>i</code> 处时，你可以跳到 <code>i + arr[i]</code> 或者 <code>i - arr[i]</code>。</p>\n<p>请你判断自己是否能够跳到对应元素值为 0 的 <strong>任一</strong> 下标处。</p>\n<p>注意，不管是什么情况下，你都无法跳到数组之外。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<p><em>该问题与动态规划不搭，因此这里仅做补充类型问题的存在：</em></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">canReach</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> arr<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> start<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>start <span style=\"color:#ff79c6\">&gt;=</span> arr<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">||</span> start <span style=\"color:#ff79c6\">&lt;</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>start<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 来过\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">[</span>start<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> start <span style=\"color:#ff79c6\">+</span> arr<span style=\"color:#ff79c6\">[</span>start<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> r <span style=\"color:#ff79c6\">=</span> start <span style=\"color:#ff79c6\">-</span> arr<span style=\"color:#ff79c6\">[</span>start<span style=\"color:#ff79c6\">];</span>\n        arr<span style=\"color:#ff79c6\">[</span>start<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">return</span> canReach<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> canReach<span style=\"color:#ff79c6\">(</span>arr<span style=\"color:#ff79c6\">,</span> r<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"子序列问题\">子序列问题</h2>\n<h3 id=\"最长递增子序列\">最长递增子序列</h3>\n<p>最长递增子序列（Longest Increasing Subsequence，LIS）问题，注意子序列和子串的区别，子串是必须连续的元素。</p>\n<blockquote>\n<h4 id=\"300-最长递增子序列httpsleetcode-cncomproblemslongest-increasing-subsequence\"><a href=\"https://leetcode-cn.com/problems/longest-increasing-subsequence/\">300. 最长递增子序列</a></h4>\n<p>难度中等2150</p>\n<p>给你一个整数数组 <code>nums</code> ，找到其中最长严格递增子序列的长度。</p>\n<p>子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，<code>[3,6,2,7]</code> 是数组 <code>[0,3,1,6,2,2,7]</code> 的子序列。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>依据动态规划的思想，假设dp[0…i]都已知，推出dp[i]，思考dp[i]代表什么。</li>\n<li>可以得到定义：dp[i]代表以nums[i]为结尾的最长递增子序列的长度。</li>\n<li>base case：dp[0…i]=1，因为起码包括它本身。</li>\n<li>状态转移：若nums[i]&gt;nums[j]则说明dp[i]=Math.max(dp[i], dp[j] + 1)，选择形成一个新的递增序列+1，或是保持不变。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">lengthOfLIS</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">fill</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">,</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> nums<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                    res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> res<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>需要注意的是dp[i]并不是整个序列的最长递增序列，因此需要记录。</li>\n<li>时间复杂为O(n^2)，空间为O(n)。有更高效率的patience sort，这里不详细说明。</li>\n</ul>\n<h4 id=\"信封嵌套问题\">信封嵌套问题</h4>\n<p>实质将最长递增子序列问题上升到了二维层面。</p>\n<blockquote>\n<h4 id=\"354-俄罗斯套娃信封问题httpsleetcode-cncomproblemsrussian-doll-envelopes\"><a href=\"https://leetcode-cn.com/problems/russian-doll-envelopes/\">354. 俄罗斯套娃信封问题</a></h4>\n<p>难度困难641</p>\n<p>给你一个二维整数数组 <code>envelopes</code> ，其中 <code>envelopes[i] = [wi, hi]</code> ，表示第 <code>i</code> 个信封的宽度和高度。</p>\n<p>当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。</p>\n<p>请计算 <strong>最多能有多少个</strong> 信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。</p>\n<p><strong>注意</strong>：不允许旋转信封。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>先对其中一个维度进行排序，如w，这样可以保证了一个从小到大宽度上的嵌套，而h在w的排序上进行降序，在h数组上进行计算LIS的长度就是答案了。</li>\n<li>降序的原因是因为，在w一样的基础上，h大的没法嵌套进h小的中。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxEnvelopes</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> envelopes<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> envelopes<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">sort</span><span style=\"color:#ff79c6\">(</span>envelopes<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">(</span>o1<span style=\"color:#ff79c6\">,</span> o2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">-&gt;</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> o1<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]==</span>o2<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">?</span> o2<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]-</span>o1<span style=\"color:#ff79c6\">[</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">:</span> o1<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]-</span>o2<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">});</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">fill</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">,</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>envelopes<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&gt;</span> envelopes<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                    res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> res<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>该方法仅能在2维内使用。</li>\n</ul>\n<h3 id=\"最长公共子序列\">最长公共子序列</h3>\n<p>最长公共子序列（Longest Common Subsequence，LCS）。</p>\n<blockquote>\n<h4 id=\"1143-最长公共子序列httpsleetcode-cncomproblemslongest-common-subsequence\"><a href=\"https://leetcode-cn.com/problems/longest-common-subsequence/\">1143. 最长公共子序列</a></h4>\n<p>难度中等807</p>\n<p>给定两个字符串 <code>text1</code> 和 <code>text2</code>，返回这两个字符串的最长 <strong>公共子序列</strong> 的长度。如果不存在 <strong>公共子序列</strong> ，返回 <code>0</code> 。</p>\n<p>一个字符串的 <strong>子序列</strong> 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。</p>\n<ul>\n<li>例如，<code>&quot;ace&quot;</code> 是 <code>&quot;abcde&quot;</code> 的子序列，但 <code>&quot;aec&quot;</code> 不是 <code>&quot;abcde&quot;</code> 的子序列。</li>\n</ul>\n<p>两个字符串的 <strong>公共子序列</strong> 是这两个字符串所共同拥有的子序列。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>对于一般两个字符串的问题，需要一个二维dp数组。</li>\n<li>dp数组含义：dp[i][j]的含义为，对于s[0..i-1]和s[0..j-1]他们的LCS是dp[i][j]。</li>\n<li>base case：dp[0][…]=0||dp[…][0]。</li>\n<li>状态转移：对于每一个字符有两种选择，要么在lcs，要么不在，\n<ol>\n<li>因此若s1[i]==s2[j]就是存在于lcs中，<code>dp[i][j] = dp[i-1][j-1] + 1</code>;</li>\n<li>若不存在，则说明这两个字符有一个不存在：<code>dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1])</code>。</li>\n<li>当然也存在两个字符都不存在的情况，但是它永远是最小的情况，可以无需考虑。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">longestCommonSubsequence</span><span style=\"color:#ff79c6\">(</span>String text1<span style=\"color:#ff79c6\">,</span> String text2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n1<span style=\"color:#ff79c6\">,</span> n2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n1 <span style=\"color:#ff79c6\">=</span> text1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0 <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">(</span>n2 <span style=\"color:#ff79c6\">=</span> text2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> \n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n1<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>n2<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;=</span>n2<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>text1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> text2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n1<span style=\"color:#ff79c6\">][</span>n2<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>dp[i][j]的状态与dp[i-1][j]、dp[i][j-1]和dp[i-1][j-1]有关。</li>\n<li>进行状态压缩，可以使用一个一维数组来标识dp[j]，dp[i-1][j]就代表上一个状态。而dp[i][j-1]就是dp[j-1]，即dp[i-1][j-1]也就是上一个dp[j-1]的状态，但是会被覆盖，因此使用一个tmp来保存（这是状态压缩的关键）。</li>\n<li>状态压缩的核心思路就是将<strong>二维投影成一维数组。</strong></li>\n</ul>\n<p>状态压缩：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">longestCommonSubsequence</span><span style=\"color:#ff79c6\">(</span>String text1<span style=\"color:#ff79c6\">,</span> String text2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n1<span style=\"color:#ff79c6\">,</span> n2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n1 <span style=\"color:#ff79c6\">=</span> text1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0 <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">(</span>n2 <span style=\"color:#ff79c6\">=</span> text2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span> \n        <span style=\"color:#6272a4\">//int[][] dp = new int[n1+1][n2+1];\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n2 <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">,</span> pre<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;=</span>n2<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#8be9fd\">int</span> tmp <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>text1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> text2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#6272a4\">//dp[i][j] = dp[i-1][j-1] + 1;\n</span><span style=\"color:#6272a4\"></span>                    dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> pre <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#6272a4\">//dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);\n</span><span style=\"color:#6272a4\"></span>                    dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">}</span>\n                pre <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n2<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"最长回文子序列\">最长回文子序列</h3>\n<blockquote>\n<h4 id=\"516-最长回文子序列httpsleetcode-cncomproblemslongest-palindromic-subsequence\"><a href=\"https://leetcode-cn.com/problems/longest-palindromic-subsequence/\">516. 最长回文子序列</a></h4>\n<p>难度中等705</p>\n<p>给你一个字符串 <code>s</code> ，找出其中最长的回文子序列，并返回该序列的长度。</p>\n<p>子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>定义dp数组：dp[i][j]为对于s[i..j]中最长回文子序列。</li>\n<li>base case：dp[i][i]=1其本身。</li>\n<li>dp结果：dp[0][n]，判断其dp方向为自下向上，自左向右。</li>\n<li>状态方程：若s[i]==s[j]，则dp[i][j]=dp[i+1][j-1]+2即可，否则，选取dp[i-1][j]和dp[i][j-1]中最大的一个。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">longestPalindromeSubseq</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>n<span style=\"color:#ff79c6\">-</span>2<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 2<span style=\"color:#ff79c6\">;</span> \n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>dp优化，优化思路同上题。</li>\n</ul>\n<p>状态压缩：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">longestPalindromeSubseq</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// int[][] dp = new int[n][n];\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        Arrays<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">fill</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">,</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>n<span style=\"color:#ff79c6\">-</span>2<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">,</span> pre<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#8be9fd\">int</span> tmp <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#6272a4\">// dp[i][j] = dp[i+1][j-1] + 2; \n</span><span style=\"color:#6272a4\"></span>                    dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> pre <span style=\"color:#ff79c6\">+</span> 2<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#6272a4\">// dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n</span><span style=\"color:#6272a4\"></span>                    dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">}</span>\n                pre <span style=\"color:#ff79c6\">=</span> tmp<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h4 id=\"最长回文子串\">最长回文子串</h4>\n<p>这里补充一个回文子串的动态规划做法。</p>\n<blockquote>\n<h4 id=\"5-最长回文子串httpsleetcode-cncomproblemslongest-palindromic-substring\"><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/\">5. 最长回文子串</a></h4>\n<p>难度中等4575</p>\n<p>给你一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>\n<p>Mehtod1:回文的思想就是从中间向两边扩散。</p>\n</li>\n<li>\n<p>Method2:动态规划</p>\n<ol>\n<li>定义dp数组的含义：dp[i][j]标识s[i..j]是否为回文子串，因此我们返回最长的子串需要记录。</li>\n<li>base case：i==j时dp[i][j]=true。</li>\n</ol>\n</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1:中间向两边扩散</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> String <span style=\"color:#50fa7b\">longestPalindrome</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>s <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&lt;</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#f1fa8c\">&#34;&#34;</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> start <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">,</span> end <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">();</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> len1 <span style=\"color:#ff79c6\">=</span> expandAroundCenter<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#8be9fd\">int</span> len2 <span style=\"color:#ff79c6\">=</span> expandAroundCenter<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#8be9fd\">int</span> len <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>len1<span style=\"color:#ff79c6\">,</span> len2<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>len <span style=\"color:#ff79c6\">&gt;</span> end <span style=\"color:#ff79c6\">-</span> start<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                start <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">-</span> <span style=\"color:#ff79c6\">(</span>len <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">;</span>\n                end <span style=\"color:#ff79c6\">=</span> i <span style=\"color:#ff79c6\">+</span> len <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">substring</span><span style=\"color:#ff79c6\">(</span>start<span style=\"color:#ff79c6\">,</span> end <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">expandAroundCenter</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> left<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> right<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>left <span style=\"color:#ff79c6\">&gt;=</span> 0 <span style=\"color:#ff79c6\">&amp;&amp;</span> right <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>left<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>right<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">--</span>left<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">++</span>right<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> right <span style=\"color:#ff79c6\">-</span> left <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>Mehtod2:动态规划</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> String <span style=\"color:#50fa7b\">longestPalindrome</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>s <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#ff79c6\">(</span>n <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">&lt;</span> 2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> s<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> max <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">boolean</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">boolean</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">==</span> j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">+</span> 1 <span style=\"color:#ff79c6\">==</span> j <span style=\"color:#ff79c6\">||</span> i <span style=\"color:#ff79c6\">==</span> j <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">)==</span>s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> j<span style=\"color:#ff79c6\">-</span>i<span style=\"color:#ff79c6\">+</span>1 <span style=\"color:#ff79c6\">&gt;=</span> max<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    max <span style=\"color:#ff79c6\">=</span> j <span style=\"color:#ff79c6\">-</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                    l <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">substring</span><span style=\"color:#ff79c6\">(</span>l<span style=\"color:#ff79c6\">,</span> l <span style=\"color:#ff79c6\">+</span> max<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间效率为O(n^2)，空间可以优化，这里不去优化。</li>\n</ul>\n<h4 id=\"最长回文串\">最长回文串</h4>\n<blockquote>\n<h4 id=\"409-最长回文串httpsleetcode-cncomproblemslongest-palindrome\"><a href=\"https://leetcode-cn.com/problems/longest-palindrome/\">409. 最长回文串</a></h4>\n<p>难度简单374</p>\n<p>给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。</p>\n<p>在构造过程中，请注意区分大小写。比如 <code>&quot;Aa&quot;</code> 不能当做一个回文字符串。</p>\n</blockquote>\n<p>以下是一个很巧妙的解法：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">longestPalindrome</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> cnt <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>58<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">char</span> ch <span style=\"color:#ff79c6\">:</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">toCharArray</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            cnt<span style=\"color:#ff79c6\">[</span>ch <span style=\"color:#ff79c6\">-</span> <span style=\"color:#f1fa8c\">&#39;A&#39;</span><span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+=</span> 1<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> ans <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> x <span style=\"color:#ff79c6\">:</span> cnt<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            ans <span style=\"color:#ff79c6\">+=</span> x <span style=\"color:#ff79c6\">-</span> <span style=\"color:#ff79c6\">(</span>x <span style=\"color:#ff79c6\">&amp;</span> 1<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans <span style=\"color:#ff79c6\">&lt;</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">?</span> ans <span style=\"color:#ff79c6\">+</span> 1 <span style=\"color:#ff79c6\">:</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"高楼扔鸡蛋\">高楼扔鸡蛋</h2>\n<blockquote>\n<h4 id=\"887-鸡蛋掉落httpsleetcode-cncomproblemssuper-egg-drop\"><a href=\"https://leetcode-cn.com/problems/super-egg-drop/\">887. 鸡蛋掉落</a></h4>\n<p>难度困难743</p>\n<p>给你 <code>k</code> 枚相同的鸡蛋，并可以使用一栋从第 <code>1</code> 层到第 <code>n</code> 层共有 <code>n</code> 层楼的建筑。</p>\n<p>已知存在楼层 <code>f</code> ，满足 <code>0 &lt;= f &lt;= n</code> ，任何从 <strong>高于</strong> <code>f</code> 的楼层落下的鸡蛋都会碎，从 <code>f</code> 楼层或比它低的楼层落下的鸡蛋都不会破。</p>\n<p>每次操作，你可以取一枚没有碎的鸡蛋并把它从任一楼层 <code>x</code> 扔下（满足 <code>1 &lt;= x &lt;= n</code>）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 <strong>重复使用</strong> 这枚鸡蛋。</p>\n<p>请你计算并返回要确定 <code>f</code> <strong>确切的值</strong> 的 <strong>最小操作次数</strong> 是多少？</p>\n</blockquote>\n<p><strong>分析</strong></p>\n<ol>\n<li>存在楼层f[0,n]，任何&gt;f的鸡蛋都会碎，&lt;=f的鸡蛋不会。</li>\n<li>取1鸡蛋，在x层[1,n]下落，如果没碎可以重复使用。</li>\n<li>求鸡蛋在f（最大值）不会碎，和最小操作次数。即**最坏情况（鸡蛋破碎一定发生在搜索区间穷尽的时候）**下，<strong>至少</strong>要扔多少次，才能确定楼层f？</li>\n<li>不考虑鸡蛋个数限制：\n<ol>\n<li>线性：从1扔到f，最坏的情况是，扔到f没碎，所以操作了f次。</li>\n<li>二分：每次从n/2开始扔，最坏的情况是，f==1和f==n，操作logn次，这是最优的策略。（但是限定了鸡蛋数量，所以直接使用二分是不行的）。</li>\n</ol>\n</li>\n</ol>\n<p><strong>思路</strong></p>\n<p>Method1:</p>\n<ol>\n<li>“状态”（发生变化的量）：明显有两个，就是当前拥有的鸡蛋数k和需要测试的楼层n。</li>\n<li>“选择”：选择哪层去扔。</li>\n<li>“状态转移”：在第i层扔下后有两种状态：\n<ol>\n<li>如果鸡蛋碎了，那么鸡蛋个数k-1，搜索区间从[1..n]变为[1..i-1]。</li>\n<li>如果鸡蛋没碎，那么鸡蛋个数k，搜索区间为[i+1..n]。</li>\n<li>base case：<code>n==0,return 0;</code>和<code>k==1,return n;</code>当鸡蛋只剩一个的时候，只能线性扫描了。</li>\n<li>定义：dp[i][k]表示有k个鸡蛋，i层楼中确定F的具体值的最小搜索次数。</li>\n<li>状态方程：<code>dp[i][k] =min{ max(dp[j-1][k-1], dp[i-j][k]) + 1 | 1&lt;=j&lt;=i  }</code>。</li>\n</ol>\n</li>\n</ol>\n<p>Method2:</p>\n<ol>\n<li>broken: dp[i-1][k-1]函数单调递增，并且最小值为dp[0][k-1]为0，最大值为dp[N-1][k-1]。</li>\n<li>noBroken: dp[n-i][k]函数单调递减，并且最小值为dp[0][k]为0，最大值为dp[n-1][k]。</li>\n<li>两个函数的交点就是一个最低点，因此，可以采用二分的方式。横坐标就是i(r)。</li>\n</ol>\n<p>Method3: 该方式转换思考，重新定义状态转移，个人凭自己没法想到该方式（想不到，想不到啊～）。</p>\n<ol>\n<li>修改dp定义，dp[k][m]=n：表示当前有k个鸡蛋，最多尝试m次，在这个状态下，最坏的情况能最多确切测试一栋n层的楼。即原始思路的一个反向版本。</li>\n<li>根据以下事实：\n<ol>\n<li>无论你在哪层楼扔鸡蛋，鸡蛋只可能摔碎或者没摔碎，碎了的话就测楼下，没碎的话就测楼上。</li>\n<li>无论你上楼还是下楼，总的楼层数 = 楼上的楼层数 + 楼下的楼层数 + 1（当前这层楼）。</li>\n</ol>\n</li>\n<li>状态转移方程：<code>dp[k][m] = dp[k][m - 1] + dp[k - 1][m - 1] + 1</code>。</li>\n<li>base case：dp[0][…]=0,dp[…][0]=0，且m最多不会超过n次。</li>\n</ol>\n<p><strong>实现</strong></p>\n<p>Method1:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">superEggDrop</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> u<span style=\"color:#ff79c6\">=</span>2<span style=\"color:#ff79c6\">;</span> u<span style=\"color:#ff79c6\">&lt;=</span>k<span style=\"color:#ff79c6\">;</span> u<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span> <span style=\"color:#6272a4\">// 鸡蛋个数为1无需计算，属于base case了。\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;=</span>i<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                    res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>res<span style=\"color:#ff79c6\">,</span> \n                        Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>j<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">])</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                <span style=\"color:#ff79c6\">}</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> res<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>   \n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间复杂度为O(kn^2)效率不高。</li>\n</ul>\n<p>Method2:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">superEggDrop</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> u<span style=\"color:#ff79c6\">=</span>2<span style=\"color:#ff79c6\">;</span> u<span style=\"color:#ff79c6\">&lt;=</span>k<span style=\"color:#ff79c6\">;</span> u<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// int res = Integer.MAX_VALUE;\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#6272a4\">// for(int j=1; j&lt;=i; j++) {\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#6272a4\">//     res = Math.min(res, \n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#6272a4\">//         Math.max(dp[j-1][u-1], dp[i-j][u]) + 1);\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#6272a4\">// }\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#6272a4\">// dp[i][u] = res;\n</span><span style=\"color:#6272a4\"></span>                <span style=\"color:#8be9fd\">int</span> l <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">,</span> r <span style=\"color:#ff79c6\">=</span> i<span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;</span>l <span style=\"color:#ff79c6\">&lt;=</span> r<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#8be9fd\">int</span> mid <span style=\"color:#ff79c6\">=</span> l <span style=\"color:#ff79c6\">+</span> <span style=\"color:#ff79c6\">(</span>r <span style=\"color:#ff79c6\">-</span> l<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">/</span> 2<span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#8be9fd\">int</span> broken <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">];</span> <span style=\"color:#6272a4\">// 若broken递增，大了则缩小\n</span><span style=\"color:#6272a4\"></span>                    <span style=\"color:#8be9fd\">int</span> noBroken <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> mid<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">];</span> <span style=\"color:#6272a4\">// 若noBroken递减，大了则增加\n</span><span style=\"color:#6272a4\"></span>                    <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>broken <span style=\"color:#ff79c6\">&gt;</span> noBroken<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                        res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>res<span style=\"color:#ff79c6\">,</span> broken <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                        r <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                        res <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">min</span><span style=\"color:#ff79c6\">(</span>res<span style=\"color:#ff79c6\">,</span> noBroken <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">);</span>\n                        l <span style=\"color:#ff79c6\">=</span> mid <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">}</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>u<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> res<span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>   \n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间复杂度为O(knlogn)。</li>\n</ul>\n<p>Method3:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">superEggDrop</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> K<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> N<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>K <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> ans <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>    <span style=\"color:#6272a4\">// 操作的次数\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>K<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> N<span style=\"color:#ff79c6\">){</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> K<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&gt;</span> 0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#6272a4\">// 从后往前计算\n</span><span style=\"color:#6272a4\"></span>                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">;</span>\n            ans<span style=\"color:#ff79c6\">++;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>时间O(kn)</li>\n</ul>\n<h2 id=\"背包问题\">背包问题</h2>\n<p>背包问题</p>\n<ul>\n<li>背包\n<ul>\n<li>最大容量</li>\n</ul>\n</li>\n<li>物品\n<ul>\n<li>价值w</li>\n<li>体积v</li>\n<li>每个物品的数量\n<ul>\n<li>只有一个：选一个和不选「01背包」</li>\n<li>无数个：选多个和不选「完全背包」</li>\n<li>不同的物品数量不同：「多重背包」</li>\n<li>按组打包，每组最多选一个：「分组背包」</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01背包\">01背包</h3>\n<p>有N件物品和一个最多能背重量为W 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。<strong>每件物品只能用一次</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>\n<p><strong>思路：</strong></p>\n<ul>\n<li>可以发现有两个状态重量与价值，若使用朴素解法，时间复杂度就是$O(n^2)$，指数级别。</li>\n<li>判断是否可以使用动态规划\n<ul>\n<li>每次拿到价值最大的，重量最小的，这样就能得到价值总和最大。</li>\n<li>因此存在着最优子结构。</li>\n</ul>\n</li>\n<li>框架带入：\n<ul>\n<li>状态：重量w和价值v，<code>dp[i][j]</code>的含义表示从0…i的物品中任意取取得的价值为<code>dp[i][j]</code>，背包容量为j。</li>\n<li>base case：<code>dp[0...i][0] == 0</code>和<code>dp[0][0...j]</code>（没有容量时为0，没拿东西当然也为0）</li>\n<li>状态改变：\n<ul>\n<li>放东西：<code>dp[i][j] = dp[i - 1][j - weight[i]] + value[i]</code>，只有j&gt;weight[i]的时候即能放进东西的时候。</li>\n<li>不放东西：<code>dp[i][j] = dp[i - 1][j]</code>（不放东西就相当于没变化等与之前的）。</li>\n</ul>\n</li>\n<li>状态转移方程：我们要取得最大，因此获取放东西与不放东西的最大价值<code>dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i])</code>。</li>\n<li>dp方向：<code>dp[bagSize - 1][bagWeight]</code>是要求得的值，观察dp方程，基本可以确定从左上到右下。</li>\n</ul>\n</li>\n</ul>\n<p>最后可以得到：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Knapsack</span> <span style=\"color:#ff79c6\">{</span>\n  <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">01Knapsack</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> weight<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> value<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> bagSize<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> wLen <span style=\"color:#ff79c6\">=</span> weight<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">,</span> value0 <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#6272a4\">//定义dp数组：dp[i][j]表示背包容量为j时，前i个物品能获得的最大价值\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>wLen <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">][</span>bagSize <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#6272a4\">//初始化：背包容量为0时，能获得的价值都为0\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;=</span> wLen<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++){</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> value0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">//遍历顺序：先遍历物品，再遍历背包容量\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;=</span> wLen<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++){</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> 1<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&lt;=</span> bagSize<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++){</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;</span> weight<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]){</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">];</span>\n                <span style=\"color:#ff79c6\">}</span><span style=\"color:#ff79c6\">else</span><span style=\"color:#ff79c6\">{</span>\n                    dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>j <span style=\"color:#ff79c6\">-</span> weight<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]]</span> <span style=\"color:#ff79c6\">+</span> value<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]);</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n    \t\t<span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>wLen<span style=\"color:#ff79c6\">][</span>bagSize<span style=\"color:#ff79c6\">];</span>\n  <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>如果计算状态<code>dp[i][j]</code>需要的都是<code>dp[i][j]</code>相邻的状态，那么就可以使用状态压缩。</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\">        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> wLen<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++){</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j <span style=\"color:#ff79c6\">=</span> bagWeight<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">&gt;=</span> weight<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span> j<span style=\"color:#ff79c6\">--){</span>\n                dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>j <span style=\"color:#ff79c6\">-</span> weight<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]]</span> <span style=\"color:#ff79c6\">+</span> value<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"买卖股票问题\">买卖股票问题</h2>\n<p><strong>分析</strong></p>\n<p>该问题的状态有三种：</p>\n<ol>\n<li>天数i</li>\n<li>允许交易的最大次数k</li>\n<li>当前持有的状态（0-没有，1-持有）j</li>\n</ol>\n<p>而每天都有三种选择：</p>\n<ol>\n<li>买入buy</li>\n<li>卖出sell</li>\n<li>无操作no</li>\n</ol>\n<p>因此dp数组的定义为：<code>dp[i][k][0/1]</code>表示可以获取的最大利润，它的base case如下：</p>\n<pre tabindex=\"0\"><code>dp[-1][k][0] = 0\n// 解释：因为 i 是从 0 开始的，所以 i = -1 意味着还没有开始，这时候的利润当然是 0 。\ndp[-1][k][1] = -infinity\n// 解释：还没开始的时候，是不可能持有股票的，用负无穷表示这种不可能。\ndp[i][0][0] = 0\n// 解释：因为 k 是从 1 开始的，所以 k = 0 意味着根本不允许交易，这时候利润当然是 0 。\ndp[i][0][1] = -infinity\n// 解释：不允许交易的情况下，是不可能持有股票的，用负无穷表示这种不可能。\n</code></pre><h3 id=\"买卖股票的最佳时机i\">买卖股票的最佳时机I</h3>\n<blockquote>\n<h4 id=\"121-买卖股票的最佳时机httpsleetcode-cncomproblemsbest-time-to-buy-and-sell-stock\"><a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/\">121. 买卖股票的最佳时机</a></h4>\n<p>难度简单2054</p>\n<p>给定一个数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 表示一支给定股票第 <code>i</code> 天的价格。</p>\n<p>你只能选择 <strong>某一天</strong> 买入这只股票，并选择在 <strong>未来的某一个不同的日子</strong> 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p>\n<p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 <code>0</code> 。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>\n<p>该题根据上面的状态，只能买卖一次，因此k=1。</p>\n</li>\n<li>\n<p>根据前文提供的分析，在该题中base case：<code>dp[i][0]=0,dp[i][1]=Integer.MIN_VALUE</code>。</p>\n</li>\n<li>\n<p>状态转移：</p>\n<pre tabindex=\"0\"><code>dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][1] + prices[i - 1]);\n// 0代表没有持有，可以进行的操作有sell, no\ndp[i][1] = Math.max(dp[i - 1][1], -prices[i - 1]);\n// 1代表持有，可以进行的操作有buy, no\n</code></pre></li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxProfit</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> prices<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> prices<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>2<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MIN_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> prices<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]);</span>\ndp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">],</span> <span style=\"color:#ff79c6\">-</span>prices<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n  <span style=\"color:#6272a4\">//\t 优化\n</span><span style=\"color:#6272a4\"></span>    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxProfit</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> prices<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>prices <span style=\"color:#ff79c6\">==</span> <span style=\"color:#ff79c6\">null</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> min <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MAX_VALUE</span><span style=\"color:#ff79c6\">,</span> max <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>prices<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">&lt;</span> min<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                min <span style=\"color:#ff79c6\">=</span> prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">}</span>\n            max <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>max<span style=\"color:#ff79c6\">,</span> prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">-</span> min<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> max<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"买卖股票的最佳时机ii\">买卖股票的最佳时机II</h3>\n<blockquote>\n<h4 id=\"122-买卖股票的最佳时机-iihttpsleetcode-cncomproblemsbest-time-to-buy-and-sell-stock-ii\"><a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/\">122. 买卖股票的最佳时机 II</a></h4>\n<p>难度中等1522</p>\n<p>给定一个数组 <code>prices</code> ，其中 <code>prices[i]</code> 是一支给定股票第 <code>i</code> 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。</p>\n<p>**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>\n<p>不同于上题的是，这里的交易次数不在被约束，可以多次买卖，因此k为infinity，而k=infinity与k=1是一样的思路。</p>\n</li>\n<li>\n<p>base case：<code>dp[i][1]=-infinity,dp[i][0]=0</code>。</p>\n</li>\n<li>\n<p>状态转移：</p>\n<pre tabindex=\"0\"><code>dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1]+prices[i-1]);\ndp[i][1] = Math.max(dp[i-1][1], dp[i-1][0]-prices[i-1]);\n// 不同于第一题的是，因为k是无限次，所以在持有的情况下，卖出时需要注意当时未持有时所得的利润。\n</code></pre></li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxProfit</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> prices<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> prices<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>n<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MIN_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]+</span>prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]-</span>prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h3 id=\"买卖股票的最佳时机iii\">买卖股票的最佳时机III</h3>\n<blockquote>\n<h4 id=\"123-买卖股票的最佳时机-iiihttpsleetcode-cncomproblemsbest-time-to-buy-and-sell-stock-iii\"><a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/\">123. 买卖股票的最佳时机 III</a></h4>\n<p>难度困难979</p>\n<p>给定一个数组，它的第 <code>i</code> 个元素是一支给定的股票在第 <code>i</code> 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>两笔</strong> 交易。</p>\n<p>**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>这里k=2（买卖次数），因此做法都不同于上面。</li>\n<li>base case：<code>dp[0][0..k][0]=0,dp[0][0..k][1]=Integer.MIN_VALUE</code>。</li>\n<li>最多是两笔交易，因此可以进行&lt;=2次交易。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxProfit</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> prices<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> prices<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span> K <span style=\"color:#ff79c6\">=</span> 2<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>K<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>2<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#6272a4\">// for(int i=0; i&lt;=n; i++) {\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">//     dp[i][0][1] = Integer.MIN_VALUE;\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">//     dp[i][1][1] = Integer.MIN_VALUE;\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">//     dp[i][2][1] = Integer.MIN_VALUE;\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#6272a4\">// }\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>K<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MIN_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> k<span style=\"color:#ff79c6\">&lt;=</span>K<span style=\"color:#ff79c6\">;</span> k<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">-</span> prices<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>K<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>注意，这里因为base case：<code>dp[1..i][0..k][1]</code>都只与前一个状态有关，且在i==1的时候必然发生改变，因此无需遍历赋值。</li>\n<li>当持有状态的时候：<code>dp[i][k][0] = Math.max(dp[i-1][k][0], dp[i-1][k][1] + prices[i-1]);</code>sell处于第k次交易中，而buy进行交易记录所以与上一次的交易有关，因此k-1。</li>\n</ul>\n<h3 id=\"买卖股票的最佳时机iv\">买卖股票的最佳时机IV</h3>\n<blockquote>\n<h4 id=\"188-买卖股票的最佳时机-ivhttpsleetcode-cncomproblemsbest-time-to-buy-and-sell-stock-iv\"><a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/\">188. 买卖股票的最佳时机 IV</a></h4>\n<p>难度困难642</p>\n<p>给定一个整数数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 是一支给定的股票在第 <code>i</code> 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>k</strong> 笔交易。</p>\n<p>**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>最大的不同是k不再是一个定值，但是解决的方法仍然与k=2相同。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxProfit</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> prices<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> prices<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[][][]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">+</span>1<span style=\"color:#ff79c6\">][</span>2<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>k<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">][</span>i<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">MIN_VALUE</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;=</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">&lt;=</span>k<span style=\"color:#ff79c6\">;</span> j<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">+</span> prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n                dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">][</span>1<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>j<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">-</span> prices<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">][</span>k<span style=\"color:#ff79c6\">][</span>0<span style=\"color:#ff79c6\">];</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"常见问题\">常见问题</h2>\n<h3 id=\"最大子数组和\">最大子数组和</h3>\n<blockquote>\n<h4 id=\"剑指-offer-42-连续子数组的最大和httpsleetcode-cncomproblemslian-xu-zi-shu-zu-de-zui-da-he-lcof\"><a href=\"https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/\">剑指 Offer 42. 连续子数组的最大和</a></h4>\n<p>难度简单440</p>\n<p>输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。</p>\n<p>要求时间复杂度为O(n)。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>滑动窗口多用于解决子串和子数组问题，但是在该问题上，窗口中的值可能增大或缩小没法进行窗口收缩的判断。</li>\n<li>dp设计上，若连接之前的还是以自己为开头另起一个子数组。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">maxSubArray</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> 0<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> 0<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> dp <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#8be9fd\">int</span> ans <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">[</span>0<span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">]+</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n            ans <span style=\"color:#ff79c6\">=</span> Math<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">(</span>dp<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">],</span> ans<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"题目补充\">题目补充</h2>\n<h3 id=\"正则表达式\">正则表达式</h3>\n<blockquote>\n<h4 id=\"10-正则表达式匹配httpsleetcode-cncomproblemsregular-expression-matching\"><a href=\"https://leetcode-cn.com/problems/regular-expression-matching/\">10. 正则表达式匹配</a></h4>\n<p>难度困难2663</p>\n<p>给你一个字符串 <code>s</code> 和一个字符规律 <code>p</code>，请你来实现一个支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p>\n<ul>\n<li><code>'.'</code> 匹配任意单个字符</li>\n<li><code>'*'</code> 匹配零个或多个前面的那一个元素</li>\n</ul>\n<p>所谓匹配，是要涵盖 <strong>整个</strong> 字符串 <code>s</code>的，而不是部分字符串。</p>\n<p>提示：</p>\n<p>1 &lt;= s.length &lt;= 20\n1 &lt;= p.length &lt;= 30\ns 只含小写英文字母。\np 只含小写英文字母，以及字符 . 和 *。\n保证每次出现字符 * 时，前面都匹配到有效的字符</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">RegularSolution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#6272a4\">/**\n</span><span style=\"color:#6272a4\">     * 剑指 Offer 19. 正则表达式匹配\n</span><span style=\"color:#6272a4\">     * 请实现一个函数用来匹配包含&#39;. &#39;和&#39;*&#39;的正则表达式。\n</span><span style=\"color:#6272a4\">     * 模式中的字符&#39;.&#39;表示任意一个字符，而&#39;*&#39;表示它前面的字符可以出现任意次（含0次）。\n</span><span style=\"color:#6272a4\">     * 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串&#34;aaa&#34;与模式&#34;a.a&#34;和&#34;ab*ac*a&#34;匹配，但与&#34;aa.a&#34;和&#34;ab*a&#34;均不匹配。\n</span><span style=\"color:#6272a4\">     *\n</span><span style=\"color:#6272a4\">     * @param s\n</span><span style=\"color:#6272a4\">     * @param p\n</span><span style=\"color:#6272a4\">     * @return\n</span><span style=\"color:#6272a4\">     */</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isMatch</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">,</span> String p<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#6272a4\">// 大致思路：双指针移动，若都移动到末尾，则匹配成功\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#ff79c6\">return</span> dp<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> 0<span style=\"color:#ff79c6\">,</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;&gt;());</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">dp</span><span style=\"color:#ff79c6\">(</span>String s<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">,</span> String p<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> j<span style=\"color:#ff79c6\">,</span> HashMap<span style=\"color:#ff79c6\">&lt;</span>String<span style=\"color:#ff79c6\">,</span> Boolean<span style=\"color:#ff79c6\">&gt;</span> memo<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> m <span style=\"color:#ff79c6\">=</span> s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">(),</span> n <span style=\"color:#ff79c6\">=</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">==</span> n<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> i <span style=\"color:#ff79c6\">==</span> m<span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">==</span> m<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#6272a4\">// *的位置\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">((</span>n <span style=\"color:#ff79c6\">-</span> j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">%</span> 2 <span style=\"color:#ff79c6\">==</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(;</span> j <span style=\"color:#ff79c6\">+</span> 1 <span style=\"color:#ff79c6\">&lt;</span> n<span style=\"color:#ff79c6\">;</span> j <span style=\"color:#ff79c6\">+=</span> 2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">!=</span> <span style=\"color:#f1fa8c\">&#39;*&#39;</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">return</span> <span style=\"color:#ff79c6\">true</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">}</span>\n        String key <span style=\"color:#ff79c6\">=</span> String<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">valueOf</span><span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">+</span> <span style=\"color:#f1fa8c\">&#34;,&#34;</span> <span style=\"color:#ff79c6\">+</span> j<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>memo<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">containsKey</span><span style=\"color:#ff79c6\">(</span>key<span style=\"color:#ff79c6\">))</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> memo<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>key<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">boolean</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#f1fa8c\">&#39;.&#39;</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span> <span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> 1 <span style=\"color:#ff79c6\">&amp;&amp;</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#f1fa8c\">&#39;*&#39;</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                res <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">+</span> 2<span style=\"color:#ff79c6\">,</span> memo<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> dp<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> j<span style=\"color:#ff79c6\">,</span> memo<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                res <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">,</span> memo<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">&lt;</span> n <span style=\"color:#ff79c6\">-</span> 1 <span style=\"color:#ff79c6\">&amp;&amp;</span> p<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">charAt</span><span style=\"color:#ff79c6\">(</span>j <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">==</span> <span style=\"color:#f1fa8c\">&#39;*&#39;</span><span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                res <span style=\"color:#ff79c6\">=</span> dp<span style=\"color:#ff79c6\">(</span>s<span style=\"color:#ff79c6\">,</span> i<span style=\"color:#ff79c6\">,</span> p<span style=\"color:#ff79c6\">,</span> j <span style=\"color:#ff79c6\">+</span> 2<span style=\"color:#ff79c6\">,</span> memo<span style=\"color:#ff79c6\">);</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">false</span><span style=\"color:#ff79c6\">;</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        memo<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>key<span style=\"color:#ff79c6\">,</span> res<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(3)-二叉树\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法4-动态规划-suan-fa-4-dong-tai-gui-hua/index.html b/public/post/algorithm/算法4-动态规划-suan-fa-4-dong-tai-gui-hua/index.html
--- a/public/post/algorithm/算法4-动态规划-suan-fa-4-dong-tai-gui-hua/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法4-动态规划-suan-fa-4-dong-tai-gui-hua/index.html	(date 1694095063472)
@@ -1393,7 +1393,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/categories/cloud-native/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"Cloud Native\" />\n    <meta property=\"og:title\" content=\"Cloud Native\" />\n    <meta property=\"twitter:title\" content=\"Cloud Native\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Cloud Native | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/categories/cloud-native/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n  \n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\">\n        <h2 class=\"post-title\">\n            Kubernetes-基础\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Kubernetes-基础 2021/09/14 前言 由于有段时间没接触Kubernetes，最近面试运维开发的时候又经常问到，因此重新体系的入门下Kuberne\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, September 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\">\n        <h2 class=\"post-title\">\n            Datadog Agent部署\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Datadog Agent 部署 Datadog Cluster Agent提供了一种简化的集中式方法来收集集群级别的监视数据。通过充当API服务器和基于节点的代理之间的代理，群集代理有助于减轻\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, September 14, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n\n            \n\n\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/categories/cloud-native/index.html b/public/categories/cloud-native/index.html
--- a/public/categories/cloud-native/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/categories/cloud-native/index.html	(date 1694095063409)
@@ -410,7 +410,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/algorithm/算法1-栈和队列-suan-fa-1-zhan-he-dui-lie/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法(1)-栈和队列\" />\n    <meta property=\"og:title\" content=\"算法(1)-栈和队列\" />\n    <meta property=\"twitter:title\" content=\"算法(1)-栈和队列\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法(1)-栈和队列 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                    </div>\n                    <h1>算法(1)-栈和队列</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Tuesday, January 4, 2022\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"算法1-栈与队列\">算法(1)-栈与队列</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p><strong>栈与队列特点：</strong></p>\n<ul>\n<li>栈stack：LIFO后进先出</li>\n<li>队列queue：FIFO先进先出</li>\n</ul>\n<p><strong>API定义：</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">interface</span> <span style=\"color:#50fa7b\">Queue</span><span style=\"color:#ff79c6\">&lt;</span>Item<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Iterable<span style=\"color:#ff79c6\">&lt;</span>Item<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#ff79c6\">{</span>\n\t\t<span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">enqueue</span><span style=\"color:#ff79c6\">(</span>Item item<span style=\"color:#ff79c6\">);</span>\n  \tItem <span style=\"color:#50fa7b\">dequeue</span><span style=\"color:#ff79c6\">();</span>\n  \t<span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span>\n  \t<span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">();</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">interface</span> <span style=\"color:#50fa7b\">Stack</span><span style=\"color:#ff79c6\">&lt;</span>Item<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#8be9fd;font-style:italic\">implements</span> Iterable<span style=\"color:#ff79c6\">&lt;</span>Item<span style=\"color:#ff79c6\">&gt;</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>Item item<span style=\"color:#ff79c6\">);</span>\n  \tItem <span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n  \t<span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span>\n  \t<span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">size</span><span style=\"color:#ff79c6\">();</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>以上为简单的API定义，队列多用于涉及公平性的问题上如排队、软件的处理队列等，其基本原则就是公平，而栈的特性也十分常见如浏览器的回退、读邮件的顺序等，元素压入的顺序与处理的顺序正好相反。</p>\n<h2 id=\"常见技巧\">常见技巧</h2>\n<h4 id=\"使用递归函数逆序操作一个栈\">使用递归函数逆序操作一个栈</h4>\n<blockquote>\n<p>即实现栈中的元素逆序，只不过通过递归的方式实现。实现只能通过栈来实现。</p>\n</blockquote>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">getAndRemoveLastElement</span><span style=\"color:#ff79c6\">(</span>Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stack<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \t<span style=\"color:#8be9fd\">int</span> res <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n  \t<span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n      \t<span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n      \t<span style=\"color:#8be9fd\">int</span> last <span style=\"color:#ff79c6\">=</span> getAndRemoveLastElement<span style=\"color:#ff79c6\">(</span>stack<span style=\"color:#ff79c6\">);</span>\n      \tstack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>res<span style=\"color:#ff79c6\">);</span>\n      \t<span style=\"color:#ff79c6\">return</span> last<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>以上为实现该问题的主要函数，返回获取并删除栈底的元素。</p>\n<h3 id=\"用一个栈实现另一个栈的排序\">用一个栈实现另一个栈的排序</h3>\n<blockquote>\n<p>一个元素类型为整数的栈，按照栈顶到栈底从大到小的顺序排序，只能申请一个栈。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>排序的栈为stack，申请的栈为helper，在stack上操作pop()的元素记做cur</li>\n<li>若cur&lt;=helper.peek()，则helper.push(cur)</li>\n<li>若cur&gt;helper.peek()，则将所有helper元素逐一压入stack，直到cur&lt;=helper.peek()，再将cur压入helper</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd;font-style:italic\">static</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">sortStackByStack</span><span style=\"color:#ff79c6\">(</span>Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stack<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n  \tDeque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> hepler <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n  \t<span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n      \t<span style=\"color:#8be9fd\">int</span> cur <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n      \t<span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(!</span>helper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> cur <span style=\"color:#ff79c6\">&gt;</span> helper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n          \tstack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>helper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">());</span>\n        <span style=\"color:#ff79c6\">}</span>\n      \thelper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>cur<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n  \t<span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(!</span>helper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n      \tstack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>helper<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">());</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"经典问题\">经典问题</h2>\n<h3 id=\"最小栈\">最小栈</h3>\n<blockquote>\n<h4 id=\"155-最小栈httpsleetcode-cncomproblemsmin-stack\"><a href=\"https://leetcode-cn.com/problems/min-stack/\">155. 最小栈</a></h4>\n<p>难度简单1124</p>\n<p>设计一个支持 <code>push</code> ，<code>pop</code> ，<code>top</code> 操作，并能在常数时间内检索到最小元素的栈。</p>\n<ul>\n<li><code>push(x)</code> —— 将元素 x 推入栈中。</li>\n<li><code>pop()</code> —— 删除栈顶的元素。</li>\n<li><code>top()</code> —— 获取栈顶元素。</li>\n<li><code>getMin()</code> —— 检索栈中的最小元素。</li>\n</ul>\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>pop</code>、<code>top</code> 和 <code>getMin</code> 操作总是在 <strong>非空栈</strong> 上调用。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<p>使用两个栈，一个正常存储元素，另一个与之相对存储当前的最小元素。</p>\n<ol>\n<li>stackDate：存储正常元素，stackMin：存储最小元素</li>\n<li>插入操作：stackMin进行比较插入，则可以达到当前栈顶的元素是stackData的最小元素</li>\n<li>删除操作：一起pop()即可</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MinStack</span> <span style=\"color:#ff79c6\">{</span>\n    Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stackData<span style=\"color:#ff79c6\">,</span> stackMin<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">MinStack</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        stackData <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        stackMin <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        stackData<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n           stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span> \n        <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n            stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&lt;</span> val <span style=\"color:#ff79c6\">?</span> stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">:</span> val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(!</span>stackData<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            stackData<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n            stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">top</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> stackData<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">getMin</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> stackMin<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>因为多为增删操作，采用链式存储</li>\n<li>为什么使用Deque？JDK中Stack的方法被<code>sychronized</code>修饰，因此效率不高。</li>\n<li>所有操作：空间：O(n) 时间：O(1)</li>\n</ul>\n<h3 id=\"两个栈组成的队列\">两个栈组成的队列</h3>\n<blockquote>\n<h4 id=\"232-用栈实现队列httpsleetcode-cncomproblemsimplement-queue-using-stacks\"><a href=\"https://leetcode-cn.com/problems/implement-queue-using-stacks/\">232. 用栈实现队列</a></h4>\n<p>难度简单525</p>\n<p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（<code>push</code>、<code>pop</code>、<code>peek</code>、<code>empty</code>）：</p>\n<p>实现 <code>MyQueue</code> 类：</p>\n<ul>\n<li><code>void push(int x)</code> 将元素 x 推到队列的末尾</li>\n<li><code>int pop()</code> 从队列的开头移除并返回元素</li>\n<li><code>int peek()</code> 返回队列开头的元素</li>\n<li><code>boolean empty()</code> 如果队列为空，返回 <code>true</code> ；否则，返回 <code>false</code></li>\n</ul>\n<p><strong>说明：</strong></p>\n<ul>\n<li>你只能使用标准的栈操作 —— 也就是只有 <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, 和 <code>is empty</code> 操作是合法的。</li>\n<li>你所使用的语言也许不支持栈。你可以使用 list 或者 deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。</li>\n</ul>\n<p><strong>进阶：</strong></p>\n<ul>\n<li>你能否实现每个操作均摊时间复杂度为 <code>O(1)</code> 的队列？换句话说，执行 <code>n</code> 个操作的总时间复杂度为 <code>O(n)</code> ，即使其中一个操作可能花费较长时间。</li>\n</ul>\n</blockquote>\n<p><strong>思路</strong></p>\n<p>根据栈的特点LIFO，可以将两个栈的特点结合实现队列的FIFO。</p>\n<ol>\n<li>使用两个栈，压入栈stackIn、弹出栈stackOut</li>\n<li>push()：只放入stackIn中</li>\n<li>pop() | peek()：若stackOut为空，则将所有stackIn数据压入stackOut，通过stackOut进行返回</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MyQueue</span> <span style=\"color:#ff79c6\">{</span>\n    Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stackIn<span style=\"color:#ff79c6\">,</span> stackOut<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#50fa7b\">MyQueue</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        stackIn <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        stackOut <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> x<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        stackIn<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>x<span style=\"color:#ff79c6\">);</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        put<span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">return</span> stackOut<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        put<span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">return</span> stackOut<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">private</span> <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>stackOut<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(;!</span>stackIn<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();)</span> <span style=\"color:#ff79c6\">{</span>\n                stackOut<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>stackIn<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">());</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n    \n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">boolean</span> <span style=\"color:#50fa7b\">empty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#ff79c6\">return</span> stackIn<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> stackOut<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>要点：如果stackOut不为空，则绝对不能将stackIn的数据倾倒到stackOut，会破坏元素顺序。</li>\n</ul>\n<h3 id=\"逆波兰表达式求值\">逆波兰表达式求值</h3>\n<blockquote>\n<h4 id=\"150-逆波兰表达式求值httpsleetcode-cncomproblemsevaluate-reverse-polish-notation\"><a href=\"https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/\">150. 逆波兰表达式求值</a></h4>\n<p>难度中等439</p>\n<p>根据<a href=\"https://baike.baidu.com/item/%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/128437\"> 逆波兰表示法</a>，求表达式的值。</p>\n<p>有效的算符包括 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。</p>\n<p><strong>说明：</strong></p>\n<ul>\n<li>整数除法只保留整数部分。</li>\n<li>给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。</li>\n</ul>\n<p>提示：</p>\n<p>1 &lt;= tokens.length &lt;= 104\ntokens[i] 要么是一个算符（&quot;+&quot;、&quot;-&quot;、&quot;*&quot; 或 &ldquo;/&quot;），要么是一个在范围 [-200, 200] 内的整数</p>\n<p>逆波兰表达式：</p>\n<p>逆波兰表达式是一种后缀表达式，所谓后缀就是指算符写在后面。</p>\n<p>平常使用的算式则是一种中缀表达式，如 ( 1 + 2 ) * ( 3 + 4 ) 。\n该算式的逆波兰表达式写法为 ( ( 1 2 + ) ( 3 4 + ) * ) 。\n逆波兰表达式主要有以下两个优点：</p>\n<p>去掉括号后表达式无歧义，上式即便写成 1 2 + 3 4 + * 也可以依据次序计算出正确结果。\n适合用栈操作运算：遇到数字则入栈；遇到算符则取出栈顶两个数字进行计算，并将结果压入栈中。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>将操作数入栈，遇到运算符弹出，进行计算后压入栈。</li>\n<li>最后结果为栈中的最后一个数。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">evalRPN</span><span style=\"color:#ff79c6\">(</span>String<span style=\"color:#ff79c6\">[]</span> tokens<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span>String str <span style=\"color:#ff79c6\">:</span> tokens<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(!(</span><span style=\"color:#f1fa8c\">&#34;+&#34;</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">equals</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#f1fa8c\">&#34;-&#34;</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">equals</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">)</span>\n            <span style=\"color:#ff79c6\">||</span> <span style=\"color:#f1fa8c\">&#34;*&#34;</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">equals</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">||</span> <span style=\"color:#f1fa8c\">&#34;/&#34;</span><span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">equals</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">)))</span> <span style=\"color:#ff79c6\">{</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>Integer<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">valueOf</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">));</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#8be9fd\">int</span> b <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n                <span style=\"color:#8be9fd\">int</span> a <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n                <span style=\"color:#ff79c6\">switch</span><span style=\"color:#ff79c6\">(</span>str<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                    <span style=\"color:#ff79c6\">case</span> <span style=\"color:#f1fa8c\">&#34;+&#34;</span><span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>a <span style=\"color:#ff79c6\">+</span> b<span style=\"color:#ff79c6\">);</span> <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">case</span> <span style=\"color:#f1fa8c\">&#34;-&#34;</span><span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>a <span style=\"color:#ff79c6\">-</span> b<span style=\"color:#ff79c6\">);</span> <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">case</span> <span style=\"color:#f1fa8c\">&#34;*&#34;</span><span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>a <span style=\"color:#ff79c6\">*</span> b<span style=\"color:#ff79c6\">);</span> <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n                    <span style=\"color:#ff79c6\">case</span> <span style=\"color:#f1fa8c\">&#34;/&#34;</span><span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>a <span style=\"color:#ff79c6\">/</span> b<span style=\"color:#ff79c6\">);</span> <span style=\"color:#ff79c6\">break</span><span style=\"color:#ff79c6\">;</span>\n                <span style=\"color:#ff79c6\">}</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><h2 id=\"经典结构\">经典结构</h2>\n<h3 id=\"单调栈-monotonic-stack\">单调栈 Monotonic Stack</h3>\n<blockquote>\n<h4 id=\"496-下一个更大元素-ihttpsleetcode-cncomproblemsnext-greater-element-i\"><a href=\"https://leetcode-cn.com/problems/next-greater-element-i/\">496. 下一个更大元素 I</a></h4>\n<p>难度简单621</p>\n<p><code>nums1</code> 中数字 <code>x</code> 的 <strong>下一个更大元素</strong> 是指 <code>x</code> 在 <code>nums2</code> 中对应位置 <strong>右侧</strong> 的 <strong>第一个</strong> 比 <code>x</code> 大的元素。</p>\n<p>给你两个 <strong>没有重复元素</strong> 的数组 <code>nums1</code> 和 <code>nums2</code> ，下标从 <strong>0</strong> 开始计数，其中<code>nums1</code> 是 <code>nums2</code> 的子集。</p>\n<p>对于每个 <code>0 &lt;= i &lt; nums1.length</code> ，找出满足 <code>nums1[i] == nums2[j]</code> 的下标 <code>j</code> ，并且在 <code>nums2</code> 确定 <code>nums2[j]</code> 的 <strong>下一个更大元素</strong> 。如果不存在下一个更大元素，那么本次查询的答案是 <code>-1</code> 。</p>\n<p>返回一个长度为 <code>nums1.length</code> 的数组 <code>ans</code> 作为答案，满足 <code>ans[i]</code> 是如上所述的 <strong>下一个更大元素</strong> 。</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<ol>\n<li>从后往前将元素压入栈stack，记当前元素为cur，这里的栈记录右侧比当前元素第一个大的元素</li>\n<li>若cur&gt;stack.peek()，stack.pop()直到cur &lt;= stack.peek()或stack.isEmpty()</li>\n<li>利用HashMap记录每个位置</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">nextGreaterElement</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums1<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums2<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        Map<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;</span> map <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> HashMap<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">,</span> Integer<span style=\"color:#ff79c6\">&gt;();</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> ArrayDeque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> nums2<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span> <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&gt;=</span> 0<span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">--</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> num <span style=\"color:#ff79c6\">=</span> nums2<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">while</span> <span style=\"color:#ff79c6\">(!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> num <span style=\"color:#ff79c6\">&gt;=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span> \n              <span style=\"color:#6272a4\">// 小的元素出栈 毕竟被大的元素给挡住\n</span><span style=\"color:#6272a4\"></span>                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#ff79c6\">}</span>\n            map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">put</span><span style=\"color:#ff79c6\">(</span>num<span style=\"color:#ff79c6\">,</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#ff79c6\">-</span>1 <span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">());</span>\n            stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>num<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> res <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>nums1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">];</span>\n        <span style=\"color:#ff79c6\">for</span> <span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i <span style=\"color:#ff79c6\">=</span> 0<span style=\"color:#ff79c6\">;</span> i <span style=\"color:#ff79c6\">&lt;</span> nums1<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span> <span style=\"color:#ff79c6\">++</span>i<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            res<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> map<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">get</span><span style=\"color:#ff79c6\">(</span>nums1<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> res<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>要点：for循环要从后往前扫描元素，因为我们借助的是栈元素，倒着入栈，其实就是正着出栈。</li>\n</ul>\n<p><strong>变体</strong></p>\n<blockquote>\n<p>如何处理循环数组？</p>\n<h4 id=\"503-下一个更大元素-iihttpsleetcode-cncomproblemsnext-greater-element-ii\"><a href=\"https://leetcode-cn.com/problems/next-greater-element-ii/\">503. 下一个更大元素 II</a></h4>\n<p>难度中等539</p>\n<p>给定一个循环数组（最后一个元素的下一个元素是数组的第一个元素），输出每个元素的下一个更大元素。数字 x 的下一个更大的元素是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 -1。</p>\n</blockquote>\n<ol>\n<li>计算机内存是线性的，因此循环的实现主要通过‘%’来实现。</li>\n<li>回到该问题，如何解决循环的问题呢？可以将原始数组翻倍，将原始数组后再接一个原始数组，这样不仅可以与右边比较，还可以与左边比较。</li>\n</ol>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">nextGreaterElements</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> ans <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n<span style=\"color:#ff79c6\">];</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> stack <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>2<span style=\"color:#ff79c6\">*</span>n<span style=\"color:#ff79c6\">-</span>1<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&gt;=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">--)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#8be9fd\">int</span> num <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">%</span> n<span style=\"color:#ff79c6\">];</span>\n            <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(!</span>stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> num <span style=\"color:#ff79c6\">&gt;=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n                stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">pop</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#ff79c6\">}</span>\n            ans<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">%</span> n<span style=\"color:#ff79c6\">]</span> <span style=\"color:#ff79c6\">=</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">?</span> <span style=\"color:#ff79c6\">-</span>1 <span style=\"color:#ff79c6\">:</span> stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">peek</span><span style=\"color:#ff79c6\">();</span> \n            stack<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">push</span><span style=\"color:#ff79c6\">(</span>num<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p><strong>小结</strong></p>\n<p>单调栈实际就是栈，通过一些巧妙逻辑，使得每次新元素入栈后，栈内的元素都保持单调（单调增或减）。其用途并不广泛，只适用一类问题 Next Greater Element。</p>\n<h3 id=\"单调队列-monotonic-queue\">单调队列 Monotonic Queue</h3>\n<blockquote>\n<h4 id=\"239-滑动窗口最大值httpsleetcode-cncomproblemssliding-window-maximum\"><a href=\"https://leetcode-cn.com/problems/sliding-window-maximum/\">239. 滑动窗口最大值</a></h4>\n<p>难度困难1332</p>\n<p>给你一个整数数组 <code>nums</code>，有一个大小为 <code>k</code> 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 <code>k</code> 个数字。滑动窗口每次只向右移动一位。</p>\n<p>返回滑动窗口中的最大值。</p>\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 105</code></li>\n<li><code>-104 &lt;= nums[i] &lt;= 104</code></li>\n<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n</blockquote>\n<ul>\n<li>该题难度在于，窗口的值是动态调整的，无法知道何时窗口的最大值是否还在，如需要确定则就需要进行窗口的遍历，因此算出最大值的效率就不是O(1)了。</li>\n</ul>\n<p><strong>思路</strong></p>\n<ol>\n<li>需要一个能动态记录当前窗口最大值的API。</li>\n<li>单调队列的API相比队列，也仅是多了max()，来获取当前队列的最大值。</li>\n<li>为了方便进行头部和尾部的插入删除，因此选用双链表是最合适的。</li>\n<li>为了保证单调性，且核心需求是O(1)时间获取当前队列最大值，在设计上主要通过push(val)，若val&gt;队尾元素，则删除，直到队尾元素&gt;=val放入，保证了队列中从队头到队尾单调递减。</li>\n</ol>\n<p><strong>实现</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-java\" data-lang=\"java\"><span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">Solution</span> <span style=\"color:#ff79c6\">{</span>\n    <span style=\"color:#8be9fd;font-style:italic\">public</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> <span style=\"color:#50fa7b\">maxSlidingWindow</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> nums<span style=\"color:#ff79c6\">,</span> <span style=\"color:#8be9fd\">int</span> k<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#8be9fd\">int</span> n <span style=\"color:#ff79c6\">=</span> nums<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">length</span><span style=\"color:#ff79c6\">;</span>\n        <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[]</span> ans <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> <span style=\"color:#8be9fd\">int</span><span style=\"color:#ff79c6\">[</span>n <span style=\"color:#ff79c6\">-</span> k <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">];</span>\n        MonotonicQueue queue <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> MonotonicQueue<span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">for</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> i<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">,</span>j<span style=\"color:#ff79c6\">=</span>0<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">&lt;</span>n<span style=\"color:#ff79c6\">;</span> i<span style=\"color:#ff79c6\">++)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>i <span style=\"color:#ff79c6\">&lt;</span> k <span style=\"color:#ff79c6\">-</span> 1<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// 填充k - 1个数到队列中\n</span><span style=\"color:#6272a4\"></span>                queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n            <span style=\"color:#ff79c6\">}</span> <span style=\"color:#ff79c6\">else</span> <span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#6272a4\">// 维持只有k个元素\n</span><span style=\"color:#6272a4\"></span>                queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i<span style=\"color:#ff79c6\">]);</span>\n                ans<span style=\"color:#ff79c6\">[</span>j<span style=\"color:#ff79c6\">++]</span> <span style=\"color:#ff79c6\">=</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">();</span>\n                queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">poll</span><span style=\"color:#ff79c6\">(</span>nums<span style=\"color:#ff79c6\">[</span>i <span style=\"color:#ff79c6\">-</span> k <span style=\"color:#ff79c6\">+</span> 1<span style=\"color:#ff79c6\">]);</span> <span style=\"color:#6272a4\">// 移除最旧的元素\n</span><span style=\"color:#6272a4\"></span>            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">return</span> ans<span style=\"color:#ff79c6\">;</span>\n    <span style=\"color:#ff79c6\">}</span>\n\n    <span style=\"color:#8be9fd;font-style:italic\">class</span> <span style=\"color:#50fa7b\">MonotonicQueue</span> <span style=\"color:#ff79c6\">{</span>\n        Deque<span style=\"color:#ff79c6\">&lt;</span>Integer<span style=\"color:#ff79c6\">&gt;</span> queue<span style=\"color:#ff79c6\">;</span>\n        MonotonicQueue<span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n            queue <span style=\"color:#ff79c6\">=</span> <span style=\"color:#ff79c6\">new</span> LinkedList<span style=\"color:#ff79c6\">&lt;&gt;();</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 整个单调队列的重点\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">offer</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">while</span><span style=\"color:#ff79c6\">(!</span>queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">isEmpty</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getLast</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">&lt;</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n                queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">removeLast</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#ff79c6\">}</span>\n            queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">offerLast</span><span style=\"color:#ff79c6\">(</span>val<span style=\"color:#ff79c6\">);</span>\n        <span style=\"color:#ff79c6\">}</span>\n\n        <span style=\"color:#8be9fd\">void</span> <span style=\"color:#50fa7b\">poll</span><span style=\"color:#ff79c6\">(</span><span style=\"color:#8be9fd\">int</span> val<span style=\"color:#ff79c6\">)</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">if</span><span style=\"color:#ff79c6\">(</span>val <span style=\"color:#ff79c6\">==</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getFirst</span><span style=\"color:#ff79c6\">())</span> <span style=\"color:#ff79c6\">{</span>\n                queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">removeFirst</span><span style=\"color:#ff79c6\">();</span>\n            <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#ff79c6\">}</span>\n        <span style=\"color:#6272a4\">// 获取当前队列的最大值\n</span><span style=\"color:#6272a4\"></span>        <span style=\"color:#8be9fd\">int</span> <span style=\"color:#50fa7b\">max</span><span style=\"color:#ff79c6\">()</span> <span style=\"color:#ff79c6\">{</span>\n            <span style=\"color:#ff79c6\">return</span> queue<span style=\"color:#ff79c6\">.</span><span style=\"color:#50fa7b\">getFirst</span><span style=\"color:#ff79c6\">();</span>\n        <span style=\"color:#ff79c6\">}</span>\n    <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><ul>\n<li>虽然进行max()操作时O(1)，但是整体的复杂度仍是O(n)，因为进行offer()的时候仍需要遍历。</li>\n</ul>\n<p><strong>小结</strong></p>\n<p>单调队列同单调栈一样，通过一些逻辑，使得每次新元素入队后，队内元素保持单调性（单调递增或单调递减）。该数据结构用途在于可以解决<strong>滑动窗口</strong>的一些问题如“滑动窗口最大值”等。</p>\n<p>最后，分清“优先队列”和“单调队列”，单调队列添加元素时靠删除元素保证单调性，而优先队列通过二叉堆来进行自动排序。</p>\n\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(0)-base\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(2)-链表\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/algorithm/算法1-栈和队列-suan-fa-1-zhan-he-dui-lie/index.html b/public/post/algorithm/算法1-栈和队列-suan-fa-1-zhan-he-dui-lie/index.html
--- a/public/post/algorithm/算法1-栈和队列-suan-fa-1-zhan-he-dui-lie/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/algorithm/算法1-栈和队列-suan-fa-1-zhan-he-dui-lie/index.html	(date 1694095063402)
@@ -732,7 +732,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/404.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>404 Page not found | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/404.html\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/404-bg.jpg')\">\n\t<div class=\"container\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n\t\t\t\t<div class=\"site-heading\" id=\"tag-heading\">\n\t\t\t\t\t<h1>404</h1>\n\t\t\t\t\t<span class=\"subheading\">你来到了没有知识的荒原 :(</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</header>\n\n<script>\n\tdocument.body.classList.add('page-fullscreen');\n</script>\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/404.html b/public/404.html
--- a/public/404.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/404.html	(date 1694095063493)
@@ -247,7 +247,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/categories/算法/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"算法\" />\n    <meta property=\"og:title\" content=\"算法\" />\n    <meta property=\"twitter:title\" content=\"算法\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>算法 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/categories/%E7%AE%97%E6%B3%95/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n  \n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/\">\n        <h2 class=\"post-title\">\n            算法(4)-动态规划\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(4)-动态规划 Introduction **「What」**动态规划（Dynamic Programming，DP），动态规划是一种过把原问题分解为相对简单的子\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, January 14, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/\">\n        <h2 class=\"post-title\">\n            算法(3)-二叉树\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(3)-二叉树 Introduction 「What」每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Sunday, January 9, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/\">\n        <h2 class=\"post-title\">\n            算法(2)-链表\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(2)-链表 Introduction 「What」链表是一种递归的数据结构，它或者为NULL，或者指向一个节点(node)的引用，该节点含有一个元素和指向另一条\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/\">\n        <h2 class=\"post-title\">\n            算法(1)-栈和队列\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(1)-栈与队列 Introduction 栈与队列特点： 栈stack：LIFO后进先出 队列queue：FIFO先进先出 API定义： public interface Queue&lt;Item&gt; implements Iterable&lt;Item&gt; { void enqueue(Item item); Item dequeue(); boolean isEmpty(); int size();\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, January 4, 2022\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\">\n        <h2 class=\"post-title\">\n            算法(0)-base\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法(0)-base Introduction 该文主要总结一些有关算法的基础，其具体的分类等在之后进行，这也是对自己刷题这么久来的一次系统化整理。该篇主要进行一些前\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, November 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\">\n        <h2 class=\"post-title\">\n            算法-排序\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            算法-排序 Introduction 以下为自己整理总结的常用排序算法与实现。 时间复杂度一次完整的计算：http://discrete.gr/complexity/ 基\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Wednesday, September 8, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n\n            \n\n\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/categories/算法/index.html b/public/categories/算法/index.html
--- a/public/categories/算法/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/categories/算法/index.html	(date 1694095063489)
@@ -502,7 +502,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/cloudnative/datadog-agent部署-datadogagent-bu-shu/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"Datadog Agent部署\" />\n    <meta property=\"og:title\" content=\"Datadog Agent部署\" />\n    <meta property=\"twitter:title\" content=\"Datadog Agent部署\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Datadog Agent部署 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/cloud-native\" title=\"Cloud Native\">\n                            Cloud Native\n                        </a>\n                        \n                    </div>\n                    <h1>Datadog Agent部署</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Tuesday, September 14, 2021\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"datadog-agent-部署\">Datadog Agent 部署</h1>\n<blockquote>\n<p>Datadog Cluster Agent提供了一种简化的集中式方法来收集集群级别的监视数据。通过充当API服务器和基于节点的代理之间的代理，群集代理有助于减轻服务器负载。</p>\n</blockquote>\n<p>原先的Node Agent都需要单独查询Kubernetes Api Server的数据，以收集有关整个集群的关键metadata。</p>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/wallpaper/datadog.png\" alt=\"\">\n\n</p>\n<h2 id=\"部署\">部署</h2>\n<p><a href=\"https://www.datadoghq.com/blog/monitoring-kubernetes-with-datadog/\">https://www.datadoghq.com/blog/monitoring-kubernetes-with-datadog/</a></p>\n<p><a href=\"https://medium.com/@while1eq1/installing-datadog-agent-in-kubernetes-8b9f6ca491c1\">https://medium.com/@while1eq1/installing-datadog-agent-in-kubernetes-8b9f6ca491c1</a></p>\n<h3 id=\"部署建议\">部署建议</h3>\n<p>部署agent的容器化版本，通过容器化的agent作为DaemonSet部署到集群中，可以确保集群中的每台主机上都可以运行该Agent的一个副本。</p>\n<p>Datadog Cluster Agent：</p>\n<ul>\n<li>\n<p>通过充当在API server和基于节点的Agetns的proxy来减少Kubernetes API Server采集集群级数据的负载</p>\n</li>\n<li>\n<p>通过减少基于节点代理所需的权限来提供额外的安全性</p>\n</li>\n<li>\n<p>使用Datadog收集的任何指标启用Kubernetes工作负载的自动拓展</p>\n</li>\n</ul>\n<h2 id=\"步骤\">步骤</h2>\n<p>创建命名空间 datadog-namespace.yaml</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">piVersion</span>: v1\n<span style=\"color:#ff79c6\">kind</span>: Namespace\n<span style=\"color:#ff79c6\">metadata</span>:\n  <span style=\"color:#ff79c6\">name</span>: datadog\n</code></pre></div><p><strong>在Agent 和 Cluster Agent中添加DD_DD_URL和DD_SITE字段。</strong></p>\n<h2 id=\"node-agent\">Node Agent</h2>\n<p>组件：</p>\n<ul>\n<li>\n<p>agent</p>\n</li>\n<li>\n<p>trace-agent</p>\n</li>\n<li>\n<p>process-agent</p>\n</li>\n<li>\n<p>system-probe</p>\n</li>\n<li>\n<p>security-agent</p>\n</li>\n</ul>\n<p>1、配置Agent权限</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl apply -f <span style=\"color:#f1fa8c\">&#34;https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/rbac/clusterrole.yaml&#34;</span>\n<span style=\"color:#6272a4\"># 为Pod中运行的进程提供标识，当Pod中的进程访问集群的时候，API Server将它们作为特定的服务账户进行身份验证。</span>\nkubectl apply -f <span style=\"color:#f1fa8c\">&#34;https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/rbac/serviceaccount.yaml&#34;</span>\n\nkubectl apply -f <span style=\"color:#f1fa8c\">&#34;https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/rbac/clusterrolebinding.yaml&#34;</span>\n</code></pre></div><blockquote>\n<p>注意：需要修改namesapce，默认为Default，可以改为datadog</p>\n</blockquote>\n<p>2、创建一个secret包含Datadog API key，这个secret用于资源文件去部署Datadog Agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#8be9fd;font-style:italic\">echo</span> -n <span style=\"color:#f1fa8c\">&#39;my_datadog_agent_api_key&#39;</span> | base64\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl create secret generic datadog-agent --from-literal<span style=\"color:#ff79c6\">=</span>api-key<span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#39;&lt;DATADOG_API_KEY&gt;&#39;</span> --namespace<span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#34;datadog&#34;</span>\n</code></pre></div><p>注意：&ndash;from-literal=<!-- raw HTML omitted -->=<!-- raw HTML omitted -->提供Secret数据，如果有自定义namespace，需要进行修改。</p>\n<h4 id=\"npm的开启\">NPM的开启</h4>\n<p>1、添加annotation在agent template</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">spec</span>:\n    <span style=\"color:#ff79c6\">selector</span>:\n        <span style=\"color:#ff79c6\">matchLabels</span>:\n            <span style=\"color:#ff79c6\">app</span>: datadog-agent\n    <span style=\"color:#ff79c6\">template</span>:\n        <span style=\"color:#ff79c6\">metadata</span>:\n            <span style=\"color:#ff79c6\">labels</span>:\n                <span style=\"color:#ff79c6\">app</span>: datadog-agent\n            <span style=\"color:#ff79c6\">name</span>: datadog-agent\n            <span style=\"color:#ff79c6\">annotations</span>:\n                <span style=\"color:#ff79c6\">container.apparmor.security.beta.kubernetes.io/system-probe</span>: unconfined\n</code></pre></div><p>2、添加环境变量到Procss Agent容器中</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">  <span style=\"color:#6272a4\"># (...)</span>\n                  <span style=\"color:#ff79c6\">env</span>:\n                  <span style=\"color:#6272a4\"># (...)</span>\n                      - <span style=\"color:#ff79c6\">name</span>: DD_PROCESS_AGENT_ENABLED\n                        <span style=\"color:#ff79c6\">value</span>: <span style=\"color:#f1fa8c\">&#39;true&#39;</span>\n                      - <span style=\"color:#ff79c6\">name</span>: DD_SYSTEM_PROBE_ENABLED\n                        <span style=\"color:#ff79c6\">value</span>: <span style=\"color:#f1fa8c\">&#39;true&#39;</span>\n                      - <span style=\"color:#ff79c6\">name</span>: DD_SYSTEM_PROBE_EXTERNAL\n                        <span style=\"color:#ff79c6\">value</span>: <span style=\"color:#f1fa8c\">&#39;true&#39;</span>\n                      - <span style=\"color:#ff79c6\">name</span>: DD_SYSPROBE_SOCKET\n                        <span style=\"color:#ff79c6\">value</span>: /var/run/sysprobe/sysprobe.sock\n</code></pre></div><p>3、挂在到extra volumes到datadog—agent容器上</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"> <span style=\"color:#6272a4\"># (...)</span>\n        <span style=\"color:#ff79c6\">spec</span>:\n            <span style=\"color:#ff79c6\">serviceAccountName</span>: datadog-agent\n            <span style=\"color:#ff79c6\">containers</span>:\n                - <span style=\"color:#ff79c6\">name</span>: datadog-agent\n                  <span style=\"color:#ff79c6\">image</span>: <span style=\"color:#f1fa8c\">&#39;gcr.io/datadoghq/agent:latest&#39;</span>\n                  <span style=\"color:#6272a4\"># (...)</span>\n              <span style=\"color:#ff79c6\">volumeMounts</span>:\n                  - <span style=\"color:#ff79c6\">name</span>: procdir\n                    <span style=\"color:#ff79c6\">mountPath</span>: /host/proc\n                    <span style=\"color:#ff79c6\">readOnly</span>: <span style=\"color:#ff79c6\">true</span>\n                  - <span style=\"color:#ff79c6\">name</span>: cgroups\n                    <span style=\"color:#ff79c6\">mountPath</span>: /host/sys/fs/cgroup\n                    <span style=\"color:#ff79c6\">readOnly</span>: <span style=\"color:#ff79c6\">true</span>\n                  - <span style=\"color:#ff79c6\">name</span>: debugfs\n                    <span style=\"color:#ff79c6\">mountPath</span>: /sys/kernel/debug\n                  - <span style=\"color:#ff79c6\">name</span>: sysprobe-socket-dir\n                    <span style=\"color:#ff79c6\">mountPath</span>: /var/run/sysprobe \n</code></pre></div><p>4、添加一个新的system-probe作为side car到Agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"> <span style=\"color:#6272a4\"># (...)</span>\n                - <span style=\"color:#ff79c6\">name</span>: system-probe\n                  <span style=\"color:#ff79c6\">image</span>: <span style=\"color:#f1fa8c\">&#39;datadog/agent:latest&#39;</span>\n                  <span style=\"color:#ff79c6\">imagePullPolicy</span>: Always\n                  <span style=\"color:#ff79c6\">securityContext</span>:\n                      <span style=\"color:#ff79c6\">capabilities</span>:\n                          <span style=\"color:#ff79c6\">add</span>:\n                              - SYS_ADMIN\n                              - SYS_RESOURCE\n                              - SYS_PTRACE\n                              - NET_ADMIN\n                              - IPC_LOCK\n                  <span style=\"color:#ff79c6\">command</span>:\n                      - /opt/datadog-agent/embedded/bin/system-probe\n                  <span style=\"color:#ff79c6\">env</span>:\n                      - <span style=\"color:#ff79c6\">name</span>: DD_SYSPROBE_SOCKET\n                        <span style=\"color:#ff79c6\">value</span>: /var/run/sysprobe/sysprobe.sock\n                  <span style=\"color:#ff79c6\">resources</span>:\n                      <span style=\"color:#ff79c6\">requests</span>:\n                          <span style=\"color:#ff79c6\">memory</span>: 150Mi\n                          <span style=\"color:#ff79c6\">cpu</span>: 200m\n                      <span style=\"color:#ff79c6\">limits</span>:\n                          <span style=\"color:#ff79c6\">memory</span>: 150Mi\n                          <span style=\"color:#ff79c6\">cpu</span>: 200m\n                  <span style=\"color:#ff79c6\">volumeMounts</span>:\n                      - <span style=\"color:#ff79c6\">name</span>: procdir\n                        <span style=\"color:#ff79c6\">mountPath</span>: /host/proc\n                        <span style=\"color:#ff79c6\">readOnly</span>: <span style=\"color:#ff79c6\">true</span>\n                      - <span style=\"color:#ff79c6\">name</span>: cgroups\n                        <span style=\"color:#ff79c6\">mountPath</span>: /host/sys/fs/cgroup\n                        <span style=\"color:#ff79c6\">readOnly</span>: <span style=\"color:#ff79c6\">true</span>\n                      - <span style=\"color:#ff79c6\">name</span>: debugfs\n                        <span style=\"color:#ff79c6\">mountPath</span>: /sys/kernel/debug\n                      - <span style=\"color:#ff79c6\">name</span>: sysprobe-socket-dir\n                        <span style=\"color:#ff79c6\">mountPath</span>: /var/run/sysprobe\n</code></pre></div><p>5、volumes</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">   <span style=\"color:#ff79c6\">volumes</span>:\n                - <span style=\"color:#ff79c6\">name</span>: sysprobe-socket-dir\n                  <span style=\"color:#ff79c6\">emptyDir</span>: {}\n                - <span style=\"color:#ff79c6\">name</span>: debugfs\n                  <span style=\"color:#ff79c6\">hostPath</span>:\n                      <span style=\"color:#ff79c6\">path</span>: /sys/kernel/debug\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">\n2021-04-28 08:24:38 UTC | SYS-PROBE | INFO | <span style=\"color:#ff79c6\">(</span>cmd/system-probe/loader.go:50 in Register<span style=\"color:#ff79c6\">)</span> | module: network_tracer started\n2021-04-28 08:24:38 UTC | SYS-PROBE | INFO | <span style=\"color:#ff79c6\">(</span>cmd/system-probe/modules/tcp_queue_tracer.go:21 in func4<span style=\"color:#ff79c6\">)</span> | TCP queue length tracer disabled\n2021-04-28 08:24:38 UTC | SYS-PROBE | INFO | <span style=\"color:#ff79c6\">(</span>cmd/system-probe/modules/oom_kill_probe.go:20 in func2<span style=\"color:#ff79c6\">)</span> | OOM <span style=\"color:#8be9fd;font-style:italic\">kill</span> probe disabled\n2021-04-28 08:24:40 UTC | SYS-PROBE | ERROR | <span style=\"color:#ff79c6\">(</span>cmd/system-probe/loader.go:44 in Register<span style=\"color:#ff79c6\">)</span> | error registering HTTP endpoints <span style=\"color:#ff79c6\">for</span> module <span style=\"color:#f1fa8c\">`</span>security_runtime<span style=\"color:#f1fa8c\">`</span> error: failed to init probe: failed to init manager: couldn&#39;t load eBPF programs: map syscalls: map create: invalid argument\n</code></pre></div><h2 id=\"cluster-agent\">Cluster Agent</h2>\n<p>1、安装Datadog Cluster Agent</p>\n<p>2、配置Agent与Datadog Cluster Agent的通信</p>\n<h3 id=\"配置datadog-cluster-agent\">配置Datadog Cluster Agent</h3>\n<h4 id=\"配置rbac-权限\">配置RBAC 权限</h4>\n<blockquote>\n<p>当使用Cluster Agent与Kubernetes API Server通信的时候，Node Agent将会失效，只有Cluster Agent可以进行</p>\n</blockquote>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#6272a4\"># 若配置上面node-rbac.yaml 将会更新node 的clusterRole，可以忽略node-rbac</span>\nkubectl apply -f <span style=\"color:#f1fa8c\">&#34;https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/rbac.yaml&#34;</span>\n<span style=\"color:#6272a4\"># </span>\nkubectl apply -f <span style=\"color:#f1fa8c\">&#34;https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/cluster-agent-rbac.yaml&#34;</span>\n</code></pre></div><p>将会创建适当的<code>ServiceAccount</code>、<code>ClusterRole</code>和<code>ClusterRoleBinding</code>为Cluster Agent，同时更新<code>ClusterRole</code>对于Node Agent。</p>\n<h4 id=\"cluster-agent-与-agent的通信安全\">Cluster Agent 与 Agent的通信安全</h4>\n<blockquote>\n<p>用于保护Cluster-Agent和Node-Agent的通信安全 —— datadog-cluster-agent</p>\n</blockquote>\n<p>注意：token必须至少32个字符长</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"> <span style=\"color:#8be9fd;font-style:italic\">echo</span> -n <span style=\"color:#f1fa8c\">&#39;my_datadog_cluster_agent_token&#39;</span> | base64\n bXlfZGF0YWRvZ19jbHVzdGVyX2FnZW50X3Rva2Vu \n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl create secret generic datadog-cluster-agent --from-literal<span style=\"color:#ff79c6\">=</span><span style=\"color:#8be9fd;font-style:italic\">token</span><span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#39;bXlfZGF0YWRvZ19jbHVzdGVyX2FnZW50X3Rva2Vu&#39;</span> --namespace<span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#34;datadog&#34;</span>  \n</code></pre></div><p>创建一个name=datadog-cluster-agent的secret</p>\n<p><code>DD_CLUSTER_AGENT_AUTH_TOKEN</code>将会在Cluter Agent manifest中使用</p>\n<p>注意：需要被设置在Cluster Agent和Node Agent的manifest文件中</p>\n<p>使用配置文件创建样例：secrets.yaml</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#6272a4\"># secret-api-key.yaml</span>\n<span style=\"color:#ff79c6\">apiVersion</span>: v1\n<span style=\"color:#ff79c6\">kind</span>: Secret\n<span style=\"color:#ff79c6\">metadata</span>:\n  <span style=\"color:#ff79c6\">name</span>: datadog\n  <span style=\"color:#ff79c6\">labels</span>: {}\n<span style=\"color:#ff79c6\">type</span>: Opaque\n<span style=\"color:#ff79c6\">data</span>:\n  <span style=\"color:#ff79c6\">api-key</span>: PUT_YOUR_BASE64_ENCODED_API_KEY_HERE\n--- \n<span style=\"color:#6272a4\"># secret-cluster-agent-token.yaml</span>\n<span style=\"color:#ff79c6\">apiVersion</span>: v1\n<span style=\"color:#ff79c6\">kind</span>: Secret\n<span style=\"color:#ff79c6\">metadata</span>:\n  <span style=\"color:#ff79c6\">name</span>: datadog-cluster-agent\n  <span style=\"color:#ff79c6\">labels</span>: {}\n<span style=\"color:#ff79c6\">type</span>: Opaque\n<span style=\"color:#ff79c6\">data</span>:\n  <span style=\"color:#ff79c6\">token</span>: PUT_A_BASE64_ENCODED_RANDOM_STRING_HERE\n</code></pre></div><h4 id=\"创建cluster-agnet和它的service\">创建Cluster Agnet和它的Service</h4>\n<ul>\n<li>\n<p><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/agent-services.yaml\"><code>agent-services.yaml</code></a><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/agent-services.yaml\">: The Cluster Agent Service manifest</a></p>\n</li>\n<li>\n<p><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/secrets.yaml\"><code>secrets.yaml</code></a><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/secrets.yaml\">: The secret holding the Datadog API key</a></p>\n</li>\n<li>\n<p><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/cluster-agent-deployment.yaml\"><code>cluster-agent-deployment.yaml</code></a><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/cluster-agent-deployment.yaml\">: Cluster Agent manifest</a></p>\n</li>\n<li>\n<p><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/install_info-configmap.yaml\"><code>install_info-configmap.yaml</code></a><a href=\"https://raw.githubusercontent.com/DataDog/datadog-agent/master/Dockerfiles/manifests/cluster-agent/install_info-configmap.yaml\">: Install Info Configmap</a></p>\n</li>\n</ul>\n<p>1、在secrets.yaml，替换Datadog API key —— datadog</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#8be9fd;font-style:italic\">echo</span> -n <span style=\"color:#f1fa8c\">&#39;my_datadog_cluster_agent_api&#39;</span> | base64\n<span style=\"color:#8be9fd;font-style:italic\">bXlfZGF0YWRvZ19jbHVzdGVyX2FnZW50X2FwaQ</span><span style=\"color:#ff79c6\">==</span> \n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl create secret generic datadog --from-literal<span style=\"color:#ff79c6\">=</span>api-key<span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#39;bXlfZGF0YWRvZ19jbHVzdGVyX2FnZW50X2FwaQ==&#39;</span> --namespace<span style=\"color:#ff79c6\">=</span><span style=\"color:#f1fa8c\">&#34;datadog&#34;</span>\n</code></pre></div><p>2、在cluster-agent-deployment.yaml中设置token根据创建方式。</p>\n<p>3、依次run agent-services、secrets、install_info-configmap</p>\n<p>4、最后run datadog Cluster-Agent-deployment</p>\n<p>5、在安装完Datadog CLuster Agent后，配置Datadog Agnet去与Datadog Cluster Agent进行通信。</p>\n<p>注意：修改deployment中的容忍度tolerations</p>\n<h3 id=\"配置datadog-agentnode-agent\">配置Datadog Agent（Node Agent）</h3>\n<h4 id=\"为node-base-agents-安装rbac权限\">为Node-Base Agents 安装RBAC权限</h4>\n<p>agent-rbac.yaml</p>\n<h4 id=\"启用datadog-agent\">启用Datadog Agent</h4>\n<p>1、下载daemonset.yaml</p>\n<p>2、在daemonset，取代DD_SITE的默认值，（用DD_DD_URL代替要Forwarder的地方）</p>\n<p>3、在daemonset.yaml中设置token，通过自己创建secret的方式</p>\n<p>4、在daemonset.yaml，检查<code>DD_CLUSTER_AGENT_ENABLED</code>是否是true</p>\n<p>5、（可选）配置一些单独的环境</p>\n<p>6、运行</p>\n<p>注意：daemonset和deployment中的image分别需要改为：</p>\n<ul>\n<li>&ldquo;<a href=\"http://harbor.od.com/datadog/cluster-agent:latest\">harbor.od.com/datadog/cluster-agent:latest</a>&rdquo;</li>\n<li>&ldquo;<a href=\"http://harbor.od.com/datadog/agent:latest\">harbor.od.com/datadog/agent:latest</a>&rdquo;</li>\n</ul>\n<h2 id=\"问题\">问题</h2>\n<h3 id=\"token和api-key未启用\">token和API key未启用</h3>\n<p>添加optional： true</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">\n        <span style=\"color:#ff79c6\">env</span>:\n        - <span style=\"color:#ff79c6\">name</span>: DD_API_KEY\n          <span style=\"color:#ff79c6\">valueFrom</span>:\n            <span style=\"color:#ff79c6\">secretKeyRef</span>:\n              <span style=\"color:#ff79c6\">name</span>: <span style=\"color:#f1fa8c\">&#34;datadog&#34;</span>\n              <span style=\"color:#ff79c6\">key</span>: api-key\n              <span style=\"color:#ff79c6\">optional</span>: <span style=\"color:#ff79c6\">true</span>\n\n</code></pre></div><h3 id=\"删除命名空间失效\">删除命名空间失效</h3>\n<p>查找字段“finalizers”，去除“kubernetes”</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl delete ns &lt;namespace&gt;\n\nkubectl proxy\nkubectl get ns &lt;namesapce&gt; -o json &gt; tmp.json\n\n\ncurl -k -H <span style=\"color:#f1fa8c\">&#34;Content-Type: application/json&#34;</span> -X PUT --data-binary @tmp.json http://127.0.0.1:8001/api/v1/namespaces/datadog-agent/finalize\n</code></pre></div><h3 id=\"修复节点不会调度问题\">修复节点不会调度问题</h3>\n<p>判断节点是否开启</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">\n<span style=\"color:#ff79c6\">[</span>root@master-80 main<span style=\"color:#ff79c6\">]</span><span style=\"color:#6272a4\"># kubectl get nodes</span>\nNAME      STATUS                     ROLES    AGE   VERSION\nnode-81   Ready,SchedulingDisabled   &lt;none&gt;   88d   v1.18.15\nnode-82   Ready                      &lt;none&gt;   88d   v1.18.15\n\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl uncordon &lt;node-name&gt;\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">    <span style=\"color:#ff79c6\">tolerations</span>:\n      - <span style=\"color:#ff79c6\">key</span>: CriticalAddonsOnly\n        <span style=\"color:#ff79c6\">operator</span>: Exists\n      - <span style=\"color:#ff79c6\">effect</span>: NoSchedule\n        <span style=\"color:#ff79c6\">operator</span>: Exists\n      - <span style=\"color:#ff79c6\">effect</span>: NoExecute\n        <span style=\"color:#ff79c6\">operator</span>: Exists\n</code></pre></div><p>修改tolerations</p>\n<h3 id=\"error-secret-datadog-appkey-not-found\">Error: secret &ldquo;datadog-appkey&rdquo; not found</h3>\n<p>删除，否则会导致容器创建失败</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">        - <span style=\"color:#ff79c6\">name</span>: DD_APP_KEY\n          <span style=\"color:#ff79c6\">valueFrom</span>:\n            <span style=\"color:#ff79c6\">secretKeyRef</span>:\n              <span style=\"color:#ff79c6\">name</span>: <span style=\"color:#f1fa8c\">&#34;datadog-agent&#34;</span>\n              <span style=\"color:#ff79c6\">key</span>: app-key\n              <span style=\"color:#ff79c6\">optional</span>: <span style=\"color:#ff79c6\">true</span>\n</code></pre></div><h3 id=\"image-gc-failed\">？image GC failed</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#ff79c6\">{</span>\n        <span style=\"color:#f1fa8c\">&#34;apiKey&#34;</span>:<span style=\"color:#f1fa8c\">&#34;&#34;</span>,\n        <span style=\"color:#f1fa8c\">&#34;internalHostname&#34;</span>:<span style=\"color:#f1fa8c\">&#34;node-82&#34;</span>,\n        <span style=\"color:#f1fa8c\">&#34;events&#34;</span>:<span style=\"color:#ff79c6\">{</span>\n                <span style=\"color:#f1fa8c\">&#34;kubernetes&#34;</span>:<span style=\"color:#ff79c6\">[</span>\n                        <span style=\"color:#ff79c6\">{</span>\n                                <span style=\"color:#f1fa8c\">&#34;aggregation_key&#34;</span>:<span style=\"color:#f1fa8c\">&#34;kubernetes_apiserver:node-81&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;event_type&#34;</span>:<span style=\"color:#f1fa8c\">&#34;kubernetes_apiserver&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;msg_title&#34;</span>:<span style=\"color:#f1fa8c\">&#34;Events from the Node node-81&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;host&#34;</span>:<span style=\"color:#f1fa8c\">&#34;node-81&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;msg_text&#34;</span>:<span style=\"color:#f1fa8c\">&#34;%%% \\n4541 **ImageGCFailed**: (combined from                                                                                                                           similar events): wanted to free 15911626342 bytes, but freed 0 bytes space with errors                                                                                                                           in image deletion: rpc error: code = Unknown desc = Error response from daemon: conflict                                                                                                                          : unable to remove repository reference \\&#34;nginx_new:latest\\&#34; (must force) - container 68                                                                                                                          ca1f2b153a is using its referenced image 264637614cff\\n \\n _Events emitted by the kubele                                                                                                                          t seen at 2021-04-22 03:39:29 +0000 UTC since 2021-04-06 08:23:15 +0000 UTC_ \\n\\n %%%&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;priority&#34;</span>:<span style=\"color:#f1fa8c\">&#34;normal&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;source_type_name&#34;</span>:<span style=\"color:#f1fa8c\">&#34;kubernetes&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;alert_type&#34;</span>:<span style=\"color:#f1fa8c\">&#34;warning&#34;</span>,\n                                <span style=\"color:#f1fa8c\">&#34;timestamp&#34;</span>:1619062769,\n                                <span style=\"color:#f1fa8c\">&#34;tags&#34;</span>:<span style=\"color:#ff79c6\">[</span>\n                                        <span style=\"color:#f1fa8c\">&#34;kubernetes_kind:Node&#34;</span>,\n                                        <span style=\"color:#f1fa8c\">&#34;name:node-81&#34;</span>,\n                                        <span style=\"color:#f1fa8c\">&#34;source_component:kubelet&#34;</span>\n                                <span style=\"color:#ff79c6\">]</span>\n                        <span style=\"color:#ff79c6\">}</span>\n                <span style=\"color:#ff79c6\">]</span>\n        <span style=\"color:#ff79c6\">}</span>\n<span style=\"color:#ff79c6\">}</span>\n</code></pre></div><p>参考：<a href=\"https://github.com/kubernetes/kubernetes/issues/71869\">https://github.com/kubernetes/kubernetes/issues/71869</a></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#6272a4\"># 以清理出足够的磁盘容量</span>\nkubectl drain --delete-local-data --ignore-daemonsets <span style=\"color:#8be9fd;font-style:italic\">$NODE_IP</span> <span style=\"color:#ff79c6\">&amp;&amp;</span> kubectl uncordon <span style=\"color:#8be9fd;font-style:italic\">$NODE_IP</span> \n</code></pre></div><h3 id=\"node-agent--err-collecting\">？node Agent  err collecting</h3>\n<p><code>cat /var/log/datadog/agent.log | grep &quot;metadata-collector&quot;</code></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">| CORE | WARN | <span style=\"color:#ff79c6\">(</span>pkg/tagger/local/tagger.go:251 in Tag<span style=\"color:#ff79c6\">)</span> | error collecting from kube-metadata-collector: couldn<span style=\"color:#f1fa8c\">&#39;t fetch &#34;podlist&#34;: unexpected status code 401 on https://10.230.4.81:10250    /pods: Unauthorized\n</span><span style=\"color:#f1fa8c\">\n</span><span style=\"color:#f1fa8c\">error collecting from kube-metadata-collector: couldn&#39;</span>t fetch <span style=\"color:#f1fa8c\">&#34;podlist&#34;</span>: unexpected status code <span style=\"color:#bd93f9\">401</span> on https://10.230.4.81:10250/pods: Unauthorized\n\n</code></pre></div><p>猜测是因为安装了cluster-agent的缘故导致agent向API Server获取Kubernetes集群的信息失败。</p>\n<h3 id=\"providerid-not-found\">？providerID not found</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">| CLUSTER | WARN | <span style=\"color:#ff79c6\">(</span>pkg/collector/corechecks/cluster/kubernetes_eventbundle.go:165 in getHostProviderID<span style=\"color:#ff79c6\">)</span> | ProviderID not found\n\n</code></pre></div><p><a href=\"https://stackoverflow.com/questions/60288304/what-is-the-way-to-make-kubernetes-nodes-have-providerid-spec-after-creation\">https://stackoverflow.com/questions/60288304/what-is-the-way-to-make-kubernetes-nodes-have-providerid-spec-after-creation</a></p>\n<blockquote>\n<p>provider-id string. Unique identifier for identifying the node in a machine database, i.e cloud provider. (DEPRECATED: This parameter should &hellip;</p>\n</blockquote>\n<h3 id=\"not-list-resource-podsecuritypolicies\">？not list resource “podsecuritypolicies”</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">      Error: unable to list Kube resources:<span style=\"color:#f1fa8c\">&#39;policy/v1beta1, Resource=podsecuritypolicies&#39;</span>, ns:<span style=\"color:#f1fa8c\">&#39;&#39;</span> name:<span style=\"color:#f1fa8c\">&#39;&#39;</span>, err: podsecuritypolicies.policy is forbidden: User <span style=\"color:#f1fa8c\">&#34;system:serviceaccount:datadog:datadog-cluster-agent&#34;</span> cannot list resource <span style=\"color:#f1fa8c\">&#34;podsecuritypolicies&#34;</span> in API group <span style=\"color:#f1fa8c\">&#34;policy&#34;</span> at the cluster scope\n      No traceback\n</code></pre></div><h3 id=\"error-while-processing-transaction\">？Error while processing transaction</h3>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"> CLUSTER | ERROR | <span style=\"color:#ff79c6\">(</span>pkg/forwarder/worker.go:178 in process<span style=\"color:#ff79c6\">)</span> | Error <span style=\"color:#ff79c6\">while</span> processing transaction: error <span style=\"color:#ff79c6\">while</span> sending transaction, rescheduling it: Post <span style=\"color:#f1fa8c\">&#34;http://10.230.4.20:12345/intake/?api_key=*************************2FwaQ==&#34;</span>: dial tcp 10.230.4.20:12345: connect: connection refuse\n</code></pre></div><h3 id=\"node-agent-1\">node agent</h3>\n<p>agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">\n2021-04-25 09:23:03 UTC | CORE | WARN | <span style=\"color:#ff79c6\">(</span>pkg/tagger/local/tagger.go:251 in Tag<span style=\"color:#ff79c6\">)</span> | error collecting from kubelet: couldn<span style=\"color:#f1fa8c\">&#39;t fetch &#34;podlist&#34;: unexpected status code 401 on https://10.230.4.82:10250/pods: Unauthorized\n</span><span style=\"color:#f1fa8c\">2021-04-25 09:23:03 UTC | CORE | WARN | (pkg/tagger/local/tagger.go:206 in pull) | couldn&#39;</span>t fetch <span style=\"color:#f1fa8c\">&#34;podlist&#34;</span>: unexpected status code <span style=\"color:#bd93f9\">401</span> on https://10.230.4.82:10250/pods: Unauthorized\n</code></pre></div><p>trace-agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">2021-04-25 09:23:22 UTC | TRACE | ERROR | <span style=\"color:#ff79c6\">(</span>pkg/tagger/collectors/kubernetes_main.go:63 in Detect<span style=\"color:#ff79c6\">)</span> | Could not initialise the communication with the cluster agent: temporary failure in clusterAgentClient, will retry later: cannot get a cluster agent endpoint <span style=\"color:#ff79c6\">for</span> kubernetes service DATADOGT_CLUSTER_AGENT, env DATADOGT_CLUSTER_AGENT_SERVICE_HOST is empty\n2021-04-25 09:23:22 UTC | TRACE | WARN | <span style=\"color:#ff79c6\">(</span>pkg/tagger/local/tagger.go:206 in pull<span style=\"color:#ff79c6\">)</span> | couldn&#39;t fetch <span style=\"color:#f1fa8c\">&#34;podlist&#34;</span>: unexpected status code <span style=\"color:#bd93f9\">401</span> on https://10.230.4.82:10250/pods: Unauthorized\n</code></pre></div><p>process-agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">\n2021-04-25 09:23:34 UTC | PROCESS | ERROR | <span style=\"color:#ff79c6\">(</span>pkg/forwarder/worker.go:174 in process<span style=\"color:#ff79c6\">)</span> | Too many errors <span style=\"color:#ff79c6\">for</span> endpoint <span style=\"color:#f1fa8c\">&#39;https://process.datadoghq.com/api/v1/collector&#39;</span>: retrying later\n2021-04-25 09:23:37 UTC | PROCESS | WARN | <span style=\"color:#ff79c6\">(</span>pkg/tagger/local/tagger.go:206 in pull<span style=\"color:#ff79c6\">)</span> | couldn<span style=\"color:#f1fa8c\">&#39;t fetch &#34;podlist&#34;: unexpected status code 401 on https://10.230.4.82:10250/pods: Unauthorized\n</span><span style=\"color:#f1fa8c\">2021-04-25 09:23:41 UTC | PROCESS | ERROR | (pkg/process/util/containers.go:64 in GetContainers) | Cannot list containers via kubelet: could not get pod list: couldn&#39;</span>t fetch <span style=\"color:#f1fa8c\">&#34;podlist&#34;</span>: unexpected status code <span style=\"color:#bd93f9\">401</span> on https://10.230.4.82:10250/pods: Unauthorized\n\n</code></pre></div><p>sysem-probe</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">2021-04-25 09:17:31 UTC | SYS-PROBE | INFO | <span style=\"color:#ff79c6\">(</span>cmd/system-probe/modules/network_tracer.go:129 in logRequests<span style=\"color:#ff79c6\">)</span> | Got request on /connections?client_id<span style=\"color:#ff79c6\">=</span><span style=\"color:#bd93f9\">32460</span> <span style=\"color:#ff79c6\">(</span>count: 6580<span style=\"color:#ff79c6\">)</span>: retrieved <span style=\"color:#bd93f9\">752</span> connections in 73.063134ms\n2021-04-25 09:18:21 UTC | SYS-PROBE | INFO | <span style=\"color:#ff79c6\">(</span>pkg/network/dns_snooper.go:214 in logDNSStats<span style=\"color:#ff79c6\">)</span> | DNS Stats. Queries :0, Successes :0, Errors: <span style=\"color:#bd93f9\">752</span>\n</code></pre></div><p>security-agent</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">2021-04-25 09:29:18 UTC | SECURITY | ERROR | <span style=\"color:#ff79c6\">(</span>pkg/forwarder/worker.go:178 in process<span style=\"color:#ff79c6\">)</span> | Error <span style=\"color:#ff79c6\">while</span> processing transaction: error <span style=\"color:#ff79c6\">while</span> sending transaction, rescheduling it: Post <span style=\"color:#f1fa8c\">&#34;https://7-26-0-app.agent.datadoghq.com/intake/?api_key=*************************2FwaQ==&#34;</span>: dial tcp: lookup 7-26-0-app.agent.datadoghq.com: Temporary failure in name resolution\n2021-04-25 09:29:23 UTC | SECURITY | ERROR | <span style=\"color:#ff79c6\">(</span>pkg/forwarder/worker.go:174 in process<span style=\"color:#ff79c6\">)</span> | Too many errors <span style=\"color:#ff79c6\">for</span> endpoint <span style=\"color:#f1fa8c\">&#39;https://7-26-0-app.agent.datadoghq.com/api/v1/check_run?api_key=*************************2FwaQ==&#39;</span>: retrying later\n\n</code></pre></div><h2 id=\"基础配置文件\">基础配置文件</h2>\n<p><a href=\"https://www.wolai.com/rvm8w1Cva9uqvEW119W5X4\">daemonset - 基础版</a></p>\n<p><a href=\"https://www.wolai.com/4RPoft7pwFUkve3v8FESUQ\">cluster-agent-deployment</a></p>\n<p><a href=\"https://www.wolai.com/v5nKaXb6jHKWP31ykbXJPW\">cluster-agent-rbac</a></p>\n<p><a href=\"https://www.wolai.com/qN9sMrenGzDjyaFi2SCoDz\">rbac</a></p>\n<h2 id=\"诊断\">诊断</h2>\n<p><strong>参考</strong>：</p>\n<h3 id=\"cluster-agent-troubleshooting\">Cluster Agent Troubleshooting</h3>\n<p>先进入到cluster-agent容器内</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">kubectl <span style=\"color:#8be9fd;font-style:italic\">exec</span> -it &lt;DATADOG_CLUSTER_AGENT_POD_NAME&gt; bash\n</code></pre></div><p>执行<code>datadog-cluster-agent metamap</code>，查看Datadog Cluster Agent服务于哪些集群级别的元数据。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\">root@datadog-cluster-agent-6db94974f9-mxtl5:/# datadog-cluster-agent metamap\n<span style=\"color:#ff79c6\">error: Error creating expvar server on port 5000: listen tcp 0.0.0.0:5000: bind</span>: address already in use\n<span style=\"color:#ff79c6\">2021-04-22 03:10:22 UTC | CLUSTER | INFO | (pkg/util/log/log.go:526 in func1) | Features detected from environment</span>: map[3:{}]\n<span style=\"color:#ff79c6\">2021-04-22 03:10:22 UTC | CLUSTER | ERROR | (pkg/util/log/log.go:551 in func1) | Error creating expvar server on port 5000: listen tcp 0.0.0.0:5000: bind</span>: address already in use\n2021-04-22 03:10:22 UTC | CLUSTER | WARN | (pkg/util/log/log.go:541 in func1) | Agent configuration relax permissions constraint on the secret backend cmd, Group can read and exec\n===============\nMetadata Mapper\n===============\n\n<span style=\"color:#ff79c6\">Node detected</span>: node-81\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: istio-system\n      - <span style=\"color:#ff79c6\">Pod</span>: grafana-775698c4c8-6t46s\n        <span style=\"color:#ff79c6\">Services</span>: [grafana]\n      - <span style=\"color:#ff79c6\">Pod</span>: kiali-74bcfc7575-cglnt\n        <span style=\"color:#ff79c6\">Services</span>: [kiali]\n\n<span style=\"color:#ff79c6\">Node detected</span>: node-82\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: datadog\n      - <span style=\"color:#ff79c6\">Pod</span>: datadog-cluster-agent-6db94974f9-mxtl5\n        <span style=\"color:#ff79c6\">Services</span>: [datadog-cluster-agent datadog-cluster-agent-metrics-api]\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: elk-flow-collector\n      - <span style=\"color:#ff79c6\">Pod</span>: elasticsearch-0\n        <span style=\"color:#ff79c6\">Services</span>: [elasticsearch]\n      - <span style=\"color:#ff79c6\">Pod</span>: kibana-d5f5889b9-4dfq8\n        <span style=\"color:#ff79c6\">Services</span>: [kibana]\n      - <span style=\"color:#ff79c6\">Pod</span>: logstash-67468fd8bb-cswn4\n        <span style=\"color:#ff79c6\">Services</span>: [logstash]\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: flow-aggregator\n      - <span style=\"color:#ff79c6\">Pod</span>: flow-aggregator-849d4865b8-b2v7b\n        <span style=\"color:#ff79c6\">Services</span>: [flow-aggregator]\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: istio-system\n      - <span style=\"color:#ff79c6\">Pod</span>: jaeger-f5c857df9-9gb5k\n        <span style=\"color:#ff79c6\">Services</span>: [jaeger-collector tracing zipkin]\n      - <span style=\"color:#ff79c6\">Pod</span>: prometheus-84797dd77c-8p4v8\n        <span style=\"color:#ff79c6\">Services</span>: [prometheus]\n\n  - <span style=\"color:#ff79c6\">Namespace</span>: kube-system\n      - <span style=\"color:#ff79c6\">Pod</span>: antrea-controller-6dc8cb4469-85cgx\n        <span style=\"color:#ff79c6\">Services</span>: [antrea]\n      - <span style=\"color:#ff79c6\">Pod</span>: coredns-6bf74754-cv7j7\n        <span style=\"color:#ff79c6\">Services</span>: [coredns]\n      - <span style=\"color:#ff79c6\">Pod</span>: coredns-6bf74754-dq9z7\n        <span style=\"color:#ff79c6\">Services</span>: [coredns]\n\n</code></pre></div><p>验证Datadog Cluster是否正在被查询</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">tail -f /var/log/datadog/cluster-agent.log\n</code></pre></div><p>确保如下env为true</p>\n<ul>\n<li>\n<p>Leader election: <code>DD_LEADER_ELECTION</code></p>\n</li>\n<li>\n<p>Event collection: <code>DD_COLLECT_KUBERNETES_EVENTS</code></p>\n</li>\n</ul>\n<p>同时RBAC的verbs（watch events），通过以下命令检查</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">datadog-cluster-agent status\n</code></pre></div><h3 id=\"node-agent-2\">Node Agent</h3>\n<p>确保Datadog Cluster Agent处于running并可用<code>agent status</code></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\"><span style=\"color:#ff79c6\">=====================</span>\nDatadog Cluster <span style=\"color:#8be9fd;font-style:italic\">Agent</span>\n<span style=\"color:#ff79c6\">=====================</span>\n\n  - Datadog Cluster Agent endpoint detected: https://192.168.84.76:5005\n  Successfully connected to the Datadog Cluster Agent.\n  - Running: 1.11.0+commit.4eadd95\n\n</code></pre></div><p>确保Cluster Agent service创建在Agent pod之前以至于DNS在环境变量中是可用的</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">env | grep DATADOG_CLUSTER_AGENT | sort\n<span style=\"color:#8be9fd;font-style:italic\">echo</span> <span style=\"color:#f1fa8c\">${</span><span style=\"color:#8be9fd;font-style:italic\">DD_CLUSTER_AGENT_AUTH_TOKEN</span><span style=\"color:#f1fa8c\">}</span> \n</code></pre></div><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 验证node agent正在使用Cluster Agent作为tag provider</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-Bash\" data-lang=\"Bash\">cat /var/log/datadog/agent.log | grep <span style=\"color:#f1fa8c\">&#34;metadata-collector&#34;</span>\n</code></pre></div>\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法-排序\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Kubernetes-基础\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/cloudnative/datadog-agent部署-datadogagent-bu-shu/index.html b/public/post/cloudnative/datadog-agent部署-datadogagent-bu-shu/index.html
--- a/public/post/cloudnative/datadog-agent部署-datadogagent-bu-shu/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/cloudnative/datadog-agent部署-datadogagent-bu-shu/index.html	(date 1694095063407)
@@ -796,7 +796,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/post/cloudnative/kubernetes-基础-kubernetes-ji-chu/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"Kubernetes-基础\" />\n    <meta property=\"og:title\" content=\"Kubernetes-基础\" />\n    <meta property=\"twitter:title\" content=\"Kubernetes-基础\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Kubernetes-基础 | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n\n<style type=\"text/css\">\n    header.intro-header {\n        background-image: url('/img/home-bg-main.jpg')\n    }\n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                        <a class=\"tag\" href=\"/tags/cloud-native\" title=\"Cloud Native\">\n                            Cloud Native\n                        </a>\n                        \n                    </div>\n                    <h1>Kubernetes-基础</h1>\n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">\n                        \n                            Posted by \n                            \n                                    EdgarDing Blog\n                             \n                            on \n                            Friday, September 17, 2021\n                            \n                            \n                            \n                            \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                \n                <h1 id=\"kubernetes-基础\">Kubernetes-基础</h1>\n<p>2021/09/14</p>\n<h2 id=\"前言\">前言</h2>\n<p>由于有段时间没接触Kubernetes，最近面试运维开发的时候又经常问到，因此重新体系的入门下Kubernetes，主要基于《Kubernetes权威指南》和自己的一些结合。同时因为个人难以配置Kubernetes环境（需要至少三个实例，有着visualBox的方案，但自己也不是特别需要操作的实践经历）且Minikube基本已经完全体验过，内容更多偏向于基础理论的回顾和学习。</p>\n<h2 id=\"入门\">入门</h2>\n<p><strong>「What」Kubernetes是什么？</strong>\n是用于自动部署，扩展和管理容器化应用程序的开源系统。</p>\n<p>这里不去细究Kubernetes的好处，大致讲下**「Why」为什么要用Kubernetes？**\n从目前以我当前的所知来理解，是一种技术趋势，通过虚拟化硬件（虚拟化技术使得硬件也能跟上软件灵活性）将业务无关的东西从软件层面剥离开，去解决基础设施层面的分布式问题。</p>\n<blockquote>\n<p>最重要的就是，一旦虚拟化的硬件能够跟上软件的灵活性，那些与业务无关的技术性问题便有可能从软件层面剥离，悄无声息地解决硬件基础设施之内，让软件得以只专注业务，真正“围绕业务能力构建”产品。</p>\n</blockquote>\n<p><strong>那Kubernetes能做什么？</strong></p>\n<ul>\n<li>\n<p><strong>服务发现和负载均衡</strong></p>\n<p>Kubernetes 可以使用 DNS 名称或自己的 IP 地址公开容器，如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p>\n</li>\n<li>\n<p><strong>存储编排</strong></p>\n<p>Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p>\n</li>\n<li>\n<p><strong>自动部署和回滚</strong></p>\n<p>你可以使用 Kubernetes 描述已部署容器的所需状态，它可以以受控的速率将实际状态 更改为期望状态。例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p>\n</li>\n<li>\n<p><strong>自动完成装箱计算</strong></p>\n<p>Kubernetes 允许你指定每个容器所需 CPU 和内存（RAM）。 当容器指定了资源请求时，Kubernetes 可以做出更好的决策来管理容器的资源。</p>\n</li>\n<li>\n<p><strong>自我修复</strong></p>\n<p>Kubernetes 重新启动失败的容器、替换容器、杀死不响应用户定义的 运行状况检查的容器，并且在准备好服务之前不将其通告给客户端。</p>\n</li>\n<li>\n<p><strong>密钥与配置管理</strong></p>\n<p>Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。</p>\n</li>\n</ul>\n<h3 id=\"概览\">概览</h3>\n<p>**在Kubernetes中，Service是分布式集群架构的核心。**Service的服务进程通常基于Socket通信方式对外提供服务，如Redis、MySQL、WebServer等，每个Service通常由多个相关的服务进程提供服务，每个服务进程都有一个独立的Endpoint（IP+Port）访问点，但是Kubernetes可以使得我们通过Service（ClusterIP+Service Port）连接制定的服务。</p>\n<p>同时Kubernetes有这内建的透明负载均衡和故障恢复机制，因此能保证后端服务的一个高可用和动态的资源调度，不会影响服务本身的调用。同时这个Service一旦创建就不再变化，意味着我们不再为Kubernetes集群中应用服务进程IP地址变化的问题。</p>\n<p>容器提供了强大的隔离功能，因此为了将Service进程组放入容器作为隔离，Kubernetes有更高层次的抽象概念Pod，将每个Service进程包装到相应的Pod中，成为Pod中的Container运行。Pod在设计的时候需要将密切相关的服务进程组放入到同一个Pod中，同时<strong>Pod作为Kubernetes管理的最小运行单元</strong>。</p>\n<p>为了建立Service和Pod间的关联关系，Kubernetes首先给每个Pod都填上一个Label，如给运行的MySQL配置<code>label.name=mysql</code>标签，同时给相应的Service定义Label Selector（标签选择器），MySQL Service的选择条件就应该为<code>label.name=mysql</code>，解决了Pod与Service关联的问题。同时并不是所有的Pod都会映射到一个Service，只有提供服务（对外或是对内）的Pod才会被映射成一个Service。</p>\n<p>**在集群管理方面。**Kubernetess将集群中的机器划分为一个Master和多个Node。在Master上运行这集群管理相关的一些进程：kube-apiserver、kube-controller-manager和kube-scheduler，这些进程实现了整个集群的资源管理、Pod的调度、弹性伸缩、安全控制、系统监控和纠错等管理功能，并且都是自动完成。而Node作为工作节点，运行着真正的应用程序，在Node上运行着kubelet、kube-proxy和container容器运行时服务进程，负载Pod的创建、启动、监控、重启、销毁，以及实现软件模式的负载均衡。</p>\n<h2 id=\"基本概念\">基本概念</h2>\n<h3 id=\"资源对象\">资源对象</h3>\n<hr>\n<h4 id=\"资源对象的类型\">资源对象的类型</h4>\n<p>在Kubernetes上的基本概念和术语大多是围绕资源对象（Resource Object）来说，总体上可以分为两类：</p>\n<ol>\n<li>\n<p>某种资源对象，如Node、Pod、Service、Volume</p>\n</li>\n<li>\n<p>与资源对象相关的事物和动作，如Label、Annotation、Namespace、Deployment等</p>\n</li>\n</ol>\n<p>资源对象一般包含着几个通用属性：Version、Kind、Name、Label、Annotation</p>\n<ul>\n<li>\n<p>在Version里，通常包含了此对象所属的资源组，一些资源对象的属性会随着版本的升级和变化</p>\n</li>\n<li>\n<p>类别的对象用于定义资源对象的类型</p>\n</li>\n<li>\n<p>Name、Label、Annotation术语资源对象的元数据（metadata）。</p>\n</li>\n</ul>\n<p>这里需要注意几点：</p>\n<ol>\n<li>\n<p>资源对象的名称需要唯一。</p>\n</li>\n<li>\n<p>Label是个很重要的数据来表明该资源对象的特征、类别，以此实现对象之间的关联、控制和协作。</p>\n</li>\n<li>\n<p>注解可被理解为一种特殊的标签，通常用于实现资源对象属性的自定义拓展。</p>\n</li>\n</ol>\n<p>通过YAML/JSON可以面向资源创建一个对象，并且统一保存在etcd这种非关系数据库中，以实现最快的读写速度，此外所有的资源对象都可以通过Kubernetes提供的kubectl实现CRUD等操作。</p>\n<h4 id=\"资源对象的生命周期\">资源对象的生命周期</h4>\n<p>一些资源对象有着自己的生命周期和相应的状态，如Pod创建完提交后，它会处于等待调度状态，调度成功后为Pending，等待镜像的拉取和启动，启动后为Running，正常停止后为Succeded，非正常停止后为Failed。</p>\n<p>这里如Pod的生命周期之后会细讲。</p>\n<h3 id=\"集群类\">集群类</h3>\n<hr>\n<p>Cluster表示一个Master和若干个Node组成的Kubernetes集群。</p>\n<h4 id=\"master\">Master</h4>\n<blockquote>\n<p>在每个Kubernetes集群中都需要又一个或一组Master，来进行整个集群的管理和控制，通常占据着一个独立的服务器（高可用集群建议至少3台）。</p>\n</blockquote>\n<p>在Master下运行着以下关键进程：</p>\n<ul>\n<li>\n<p>kube-apiserver：提供HTTP RESTful API接口的主要服务，是Kubernetes进行所有资源CRUD的唯一入口，也是集群控制的入口进程。</p>\n</li>\n<li>\n<p>kube-controller-manager：Kubernetes里所有资源对象的自动化配置中心，资源对象的管理者。</p>\n</li>\n<li>\n<p>kube-scheduler：负责资源（Pod调度）调度的进程。</p>\n</li>\n<li>\n<p>etcd：一个键值对数据库，作为保存所有集群的后台数据库。</p>\n</li>\n</ul>\n<h4 id=\"node\">Node</h4>\n<blockquote>\n<p>除了Master以外的所有服务器都可以称为Node，Node可以是物理机也可以是虚拟机，是Kubernetes的工作负载节点。当某个Node宕机时，其上的工作负载会被Master自动转移到其他Node上。</p>\n</blockquote>\n<p>在Node上有着以下关键进程：</p>\n<ul>\n<li>\n<p>kubelet：负责Pod对应容器的创建、启停等任务，同时与Master进行密切协作，实现Master传递下来的指令。</p>\n</li>\n<li>\n<p>kube-proxy：实现Service的通信和负载均衡的服务。</p>\n</li>\n<li>\n<p>containerd（容器运行时）：负责本机的容器创建和管理。</p>\n</li>\n</ul>\n<p>通过<code>kubectl describe node &lt;node_name&gt;</code>可以查看某个Node详细信息，这里不详细讲述。</p>\n<h4 id=\"namespace\">Namespace</h4>\n<blockquote>\n<p>namespace是一个很重要的概念，实现了多租户的资源隔离，属于不同namespace的资源对象从逻辑上相互隔离。</p>\n</blockquote>\n<p>在Kubernetes中，Master会自动创建两个namespace——default和kube-system，分别用于系统级相关的资源对象如网络组件、DNS组件、监控类组件等和用户空间的业务逻辑资源。</p>\n<h2 id=\"核心概念\">核心概念</h2>\n<p>应用类的概念和相应的资源对象类型是最多的，同时也是一些核心的概念。</p>\n<h3 id=\"service\">Service</h3>\n<blockquote>\n<p>应用类的相关资源对象主要是围绕Service和Pod的两个核心对象来展开。</p>\n</blockquote>\n<p>Service是应用服务的抽象，通过Labels为应用提供负载均衡和服务发现。匹配Labels和Pod IP+Port组成的Endpoints，由kube-proxy负载到这些Endpoints上。</p>\n<p>每个Service都会自动分配一个cluster IP（仅在集群内部可访问的虚拟地址）和DNS名称，其他容器通过该域名进行服务访问。</p>\n<p>\n  <img src=\"https://cdn.jsdelivr.net/gh/edgarding77/images@latest/wallpaper/k8s-service.png\" alt=\"\">\n\n</p>\n<h4 id=\"cluster-ip\">Cluster IP</h4>\n<p>每个Pod都会分配一个单独的IP地址，而且每个Pod都提供一个独立的Endpoint（Pod IP + containerPort）以便被客户端访问。Service一旦被创建，Kubernetes就会被它分配一个全局唯一的虚拟IP地址——ClusterIP，并且在Service的整个生命周期内，其ClusterIP都是不会发生改变，这样使得每个服务具备了唯一IP地址通信节点。</p>\n<h4 id=\"外网访问问题\">外网访问问题</h4>\n<p>Kubernetes的三种IP，这三种IP分别是：</p>\n<ul>\n<li>\n<p>Node IP：Node的IP地址 - 每个节点的物理网卡IP地址，真实IP，可以直接通过该网络进行通信。</p>\n</li>\n<li>\n<p>Pod IP：Pod的IP地址 - 每个Pod的IP地址，在使用Docker作为容器支持的情况下，是Docker Engine根据docker()网桥的IP地址段进行分配的，通常是一个虚拟的二层网络。</p>\n</li>\n<li>\n<p>Service IP：Service的IP地址</p>\n<ul>\n<li>Node Port：在Kubernetes集群，Service的Cluster IP地址属于集群内的地址，无法在对外直接使用该地址，因此引入Node Port解决外部应用访问集群内服务的问题。实现方式：在每个Node需要提供外部访问服务的Service开启一个对应TCP监听端口，外部只需要任意一个IP+NodePort即可访问。</li>\n</ul>\n<p>当然</p>\n</li>\n</ul>\n<h3 id=\"pod\">Pod</h3>\n<blockquote>\n<p><strong>Pod是Kubernetes的基本调度单元。</strong></p>\n</blockquote>\n<p><strong>「Why」为什么需要有这么一种概念和结构呢？</strong></p>\n<ul>\n<li>\n<p>为多进程之间的协作提供一个抽象模型，使用Pod作为基本的调度、复制等管理工作的最小单位，让多个应用进程之间能有效的调度和伸缩。</p>\n</li>\n<li>\n<p>Pod里的多个业务容器共享Pause容器的IP，共享Pause容器挂接的Volume，这样既简化了密切关联的业务容器之间的通信问题，也解决了文件共享问题。</p>\n</li>\n</ul>\n<p>容器的本质是对cgroups和namespaces说提供的隔离能力的一种封装，容器蕴含的隔离性仅针对于单个进程的额外局限，然而cgroups和namespaces原本都是针对单个进程的额外局限，同一个进程组可以共享着相同的访问权限与资源配额。而实现容器编排的第一个拓展点，就是要找到容器领域中与“进程组”相对应的概念，这是实现容器从隔离到协作的第一步 —— <strong>Pod</strong>。</p>\n<p><strong>Pod的结构</strong>：</p>\n<ul>\n<li>\n<p>Pause：gcr.io/google_containers/pause_amd64</p>\n</li>\n<li>\n<p>user container1:xxxiamge&hellip;.</p>\n</li>\n</ul>\n<p>同时，在网络通信上，每个Pod分配为一个IP，Pod里的容器共享该IP，Kubernetes<strong>要求底层网络支持集群内任意两个Pod之间的TCP/IP直接通信</strong>，这通常采用虚拟二层网络技术实现，例如Open vSwitch、Flannel等。</p>\n<p>Pod也有两种类型：普通的Pod和Static Pod，后者的特点在于，它并没有存放在Kubernetes的etcd中，而是被存放在某个具体的Node上的一个具体文件中，并且只能在该Node启动运行。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">apiVersion</span>: v1\n<span style=\"color:#ff79c6\">kind</span>: Pod\n<span style=\"color:#ff79c6\">metadata</span>:\n  <span style=\"color:#ff79c6\">name</span>: web\n  <span style=\"color:#ff79c6\">labels</span>:\n    <span style=\"color:#ff79c6\">name</span>: web\n<span style=\"color:#ff79c6\">spec</span>:\n  <span style=\"color:#ff79c6\">containers</span>:\n  - <span style=\"color:#ff79c6\">name</span>: web\n    <span style=\"color:#ff79c6\">image</span>: kubeguide/tomcat-app:v1\n    <span style=\"color:#ff79c6\">ports</span>:\n    - <span style=\"color:#ff79c6\">containerPort</span>: <span style=\"color:#bd93f9\">8080</span> \n</code></pre></div><h4 id=\"pod共享实现细节\">Pod共享实现细节</h4>\n<p>Pod 内部多个容器共享 UTS、IPC、网络等名称空间是通过一个名为** Infra Container <strong>的容器来实现的，这个容器是整个 Pod 中第一个启动的容器，只有几百 KB 大小（代码只有很短的几十行，见</strong><a href=\"https://github.com/kubernetes/kubernetes/tree/master/build/pause\"><strong>这里</strong></a>），Pod 中的其他容器都会以 Infra Container 作为父容器，UTS、IPC、网络等名称空间实质上都是来自 Infra Container 容器。</p>\n<p>如果容器设置为共享 PID 名称空间的话，Infra Container 中的进程将作为 PID 1 进程，<strong>其他容器的进程将以它的子进程的方式存在</strong>，此时将由 Infra Container 来负责进程管理（譬如清理<a href=\"https://en.wikipedia.org/wiki/Zombie_process\">僵尸进程</a>）、感知状态和传递状态。</p>\n<p>由于 Infra Container 的代码除了注册 SIGINT、SIGTERM、SIGCHLD 等信号的处理器外，就只是一个以 pause()方法为循环体的无限循环，永远处于 Pause 状态，所以也常被称为**“Pause Container”**</p>\n<h4 id=\"pod生命周期\">Pod生命周期</h4>\n<p>通过<code>kubectl explain pod.status</code>可以了解关于Pod状态的一些信息，Pod的状态定义在<code>PodStatus</code>对象中，其中有个<code>phase</code>字段，大概有这么几种：</p>\n<ul>\n<li>\n<p>挂起（Pending）：Pod 信息已经提交给了集群，但是还没有被调度器调度到合适的节点或者 Pod 里的镜像正在下载</p>\n</li>\n<li>\n<p>运行中（Running）：该 Pod 已经绑定到了一个节点上，Pod 中所有的容器都已被创建。至少有一个容器正在运行，或者正处于启动或重启状态</p>\n</li>\n<li>\n<p>成功（Succeeded）：Pod 中的所有容器都被成功终止，并且不会再重启</p>\n</li>\n<li>\n<p>失败（Failed）：Pod 中的所有容器都已终止了，并且至少有一个容器是因为失败终止。也就是说，容器以非<code>0</code>状态退出或者被系统终止</p>\n</li>\n<li>\n<p>未知（Unknown）：因为某些原因无法取得 Pod 的状态，通常是因为与 Pod 所在主机通信失败导致的</p>\n</li>\n</ul>\n<p>除此之外，PodStatus 对象中还包含一个 PodCondition 的数组，里面包含的属性有：</p>\n<ul>\n<li>\n<p>lastProbeTime：最后一次探测 Pod Condition 的时间戳。</p>\n</li>\n<li>\n<p>lastTransitionTime：上次 Condition 从一种状态转换到另一种状态的时间。</p>\n</li>\n<li>\n<p>message：上次 Condition 状态转换的详细描述。</p>\n</li>\n<li>\n<p>reason：Condition 最后一次转换的原因。</p>\n</li>\n<li>\n<p>status：Condition 状态类型，可以为 “True”, “False”, and “Unknown”.</p>\n</li>\n<li>\n<p>type：Condition 类型，包括以下方面：</p>\n</li>\n<li>\n<p>PodScheduled（Pod 已经被调度到其他 node 里）</p>\n</li>\n</ul>\n<p>Ready（Pod 能够提供服务请求，可以被添加到所有可匹配服务的负载平衡池中）</p>\n<ul>\n<li>\n<p>Initialized（所有的init containers已经启动成功）</p>\n</li>\n<li>\n<p>Unschedulable（调度程序现在无法调度 Pod，例如由于缺乏资源或其他限制）</p>\n</li>\n<li>\n<p>ContainersReady（Pod 里的所有容器都是 ready 状态）</p>\n</li>\n</ul>\n<h3 id=\"容器的发展\">容器的发展</h3>\n<hr>\n<blockquote>\n<p>通过了解容器在来衍生思考kubernetes可以有着意想不到的收获。</p>\n</blockquote>\n<ol>\n<li>\n<p>**文件隔离-chroot：**功能是当某个进程经过<code>chroot</code>操作之后，它的根目录就会被锁定在命令参数所指定的位置，以后它或者它的子进程将不能再访问和操作该目录之外的其他文件。\n这里需要提到UNIX的设计哲学，“一切资源皆可视为文件”。</p>\n</li>\n<li>\n<p>**访问隔离-namespace：**用于避免开发者提供的API相互冲突，Linux的namespace的内核提供的全局资源封装，是内核针对进程设计的访问隔离机制。</p>\n</li>\n<li>\n<p>**资源隔离-cgroups：**如果要让一台物理计算机中的各个进程看起来像独享整台虚拟计算机的话，不仅要隔离各自进程的访问操作，还必须能独立控制分配给各个进程的资源使用配额，不然的话，一个进程发生了内存溢出或者占满了处理器，其他进程就莫名其妙地被牵连挂起，这样肯定算不上是完美的隔离。\nLinux 系统解决以上问题的方案是<a href=\"https://en.wikipedia.org/wiki/Cgroups\">控制群组</a>（Control Groups，目前常用的简写为<code>cgroups</code>），<strong>它与名称空间一样都是直接由内核提供的功能，用于隔离或者说分配并限制某个进程组能够使用的资源配额，资源配额包括处理器时间、内存大小、磁盘 I/O 速度，等等</strong>。</p>\n</li>\n<li>\n<p>**系统封装-LXC：**当文件系统、访问、资源都可以被隔离后，容器已经有它降生所需的全部前置支撑条件，并且 Linux 的开发者们也已经明确地看到了这一点。为降低普通用户综合使用namespaces、cgroups这些低级特性的门槛，2008 年 Linux Kernel 2.6.24 内核刚刚开始提供cgroups的同一时间，就马上发布了名为Linux 容器（LinuX Containers，LXC）的系统级虚拟化功能。</p>\n</li>\n<li>\n<p>**应用封装-Docker：**这里可以参考<a href=\"https://stackoverflow.com/questions/17989306/what-does-docker-add-to-lxc-tools-the-userspace-lxc-tools/\">StackOverflow上的一段对话</a>。</p>\n</li>\n<li>\n<p>**集群封装-Kubernetes：**Docker的成功靠的是理念，Kubernetes的成功可能是一种大势所趋。</p>\n</li>\n</ol>\n<h3 id=\"label\">Label</h3>\n<blockquote>\n<p>Label是Kubernetes系统中另一个核心概念，用于识别Kubernetes对象，以Key-Value的方式附加在各种对象上（key最长不能超过63字节，value 可以为空，也可以是不超过253字节的字符串），如Node、Pod、Service、Deployment等，一个资源对象可以定义任意数量的Label，同一个Label也可以添加到任意数量的资源对象上。</p>\n</blockquote>\n<p>通过给指定的资源对象进行添加/删除捆绑一个或多个Label实现多维度的资源分组管理功能，以便灵活、方便地进行资源分配、调度、配置、部署等管理工作。</p>\n<p>通过Label Selector，实现像sql一样对Label的筛选，从而对管理对象的分组管理，实现集群的高可用：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">apiVersion</span>: v1\n<span style=\"color:#ff79c6\">kind</span>: pod\n<span style=\"color:#ff79c6\">metadata</span>:\n  <span style=\"color:#ff79c6\">name</span>: web\n  <span style=\"color:#ff79c6\">labels</span>:\n    <span style=\"color:#ff79c6\">app</span>: myweb\n\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">spec</span>:\n  <span style=\"color:#ff79c6\">selector</span>:\n    <span style=\"color:#ff79c6\">app</span>: myweb\n\n</code></pre></div><h3 id=\"deployment\">Deployment</h3>\n<blockquote>\n<p>Deployment的出现是为了解决Pod创建的麻烦，Deployment类似于一个Pod Template，自动创建多个Pod实例，这个就是Deployment所要完成的事。</p>\n</blockquote>\n<p>以下为一个Deployment例子：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">apiVersion</span>: apps/v1\n<span style=\"color:#ff79c6\">kind</span>: Deployment\n<span style=\"color:#ff79c6\">spec</span>:\n  <span style=\"color:#ff79c6\">replicas</span>: <span style=\"color:#bd93f9\">2</span>\n  <span style=\"color:#ff79c6\">selector</span>:\n    <span style=\"color:#ff79c6\">matchLabels</span>:\n      <span style=\"color:#ff79c6\">app</span>: myweb\n  <span style=\"color:#ff79c6\">template</span>:\n    <span style=\"color:#ff79c6\">metadata</span>:\n      <span style=\"color:#ff79c6\">labels</span>:\n        <span style=\"color:#ff79c6\">app</span>: myweb\n      <span style=\"color:#ff79c6\">spec</span>:\n\n</code></pre></div><p>这里有几个重要的属性：</p>\n<ul>\n<li>\n<p>replicas：Pod的副本数目，Deployment会一直自动创建到符合replicas数目的Pod</p>\n</li>\n<li>\n<p>selector：目标Pod的标签选择器</p>\n</li>\n<li>\n<p>template：用于自动创建新的Pod副本模版</p>\n</li>\n</ul>\n<p>Deployment有个很重要的特性——<strong>自动控制</strong>，如果Pod所在的Node发生宕机，Kubernetes会观察到该故障，并自动创建一个新的Pod调度到其他合适的节点上，Kubernetes会实时监控集群中目标Pod的replicas数目，并且尽力于Deployment中的replicas数量保持一致。<strong>因此，哪怕只有一个Pod，也尽量通过Deployment进行部署。</strong></p>\n<h3 id=\"statefulset\">StatefulSet</h3>\n<p>Deployment对象用来实现无状态服务的多副本自动控制功能的，那么有状态的服务，比如ZooKeeper集群、MySQL高可用集群、Kafka集群等如何去实现自动部署和管理就是个问题。</p>\n<p>有状态集群节点有如下特殊特性：</p>\n<ul>\n<li>\n<p>每个节点都由固定的身份ID，通过该ID实现集群内成员的相互发现</p>\n</li>\n<li>\n<p>集群规模较为固定</p>\n</li>\n<li>\n<p>集群每个节点的状态通过持久化数据到永久存储中</p>\n</li>\n<li>\n<p>集群成员节点的启动顺序（以及关闭顺序）通常也是固定</p>\n</li>\n</ul>\n<p>而通过Deployment控制Pod副本数量来实现以上有状态的集群，就难以实现，如Deployment创建的Pod因为Pod的名称是随机产生的，就无法确定唯一不变ID，同时Pod的启动顺序也不定。</p>\n<p>因此Kubernetes引入专门的资源对象——StatefulSet，从本质上来说，可被看作Deployment/RC的一个变种，有着以下特性：</p>\n<ul>\n<li>\n<p>StatefulSet里的每个Pod都由稳定的，唯一的网络标识，可以用来发现集群内的其他成员。</p>\n</li>\n<li>\n<p>StatefulSet控制的Pod副本的启停顺序是受控的，操作第n个Pod时，前n-1个Pod得时runtime状态</p>\n</li>\n<li>\n<p>StatefulSet里的Pod采用稳定的持久化存储卷，通过PV或PVC来实现，删除Pod时，存储卷不受影响。</p>\n</li>\n</ul>\n<h3 id=\"job\">Job</h3>\n<blockquote>\n<p>批处理应用的特点是一个或多个进程处理一组数据（图像、文件、视频等），在这组数据处理完后，批处理任务自动结束。为了解决这类应用，Kubernetes引入Job资源对象概念。</p>\n</blockquote>\n<p>Jobs控制器提供了两个控制并发数的参数：<code>completions</code>（表示运行任务的总数）和<code>parallelism</code>（表示并发运行的个数），从该特性可以得知Job类型的Pod都是短暂运行的，可以视为一组容器，其中每个容器也都仅运行一次，且Job生成的Pod副本是不可能自动重启的。</p>\n<h4 id=\"cronjob\">CronJob</h4>\n<p>为了解决Job的Pod副本restartPolicy=Never的问题，引入CronJob，可以周期性的执行某个任务。</p>\n<h3 id=\"应用配置问题\">应用配置问题</h3>\n<p>如上，总结，三种应用建模的资源对象：</p>\n<ul>\n<li>\n<p>无状态服务的建模：Deployment</p>\n</li>\n<li>\n<p>有状态集群的建模：StatefulSet</p>\n</li>\n<li>\n<p>批处理应用的建模：Job</p>\n</li>\n</ul>\n<p>在进行应用建模时，在解决应用需要在不同的环境下修改配置的问题？涉及ConfigMap和Secret两个对象。</p>\n<h4 id=\"configmap\">ConfigMap</h4>\n<p>就是一个保存配置项（key=value）的一个Map，ConfigMap是分布式系统中的“配置中心”的独特实现之一。几乎所有的应用都需要一个静态的配置文件来提供启动参数，但这个应用是分布式的，这配置文件的分发就是个麻烦，通常引入一个新的API，从而导致应用的耦合和侵入，Kubernetes采用一个简单的方案来规避：</p>\n<ul>\n<li>\n<p>用户将配置内容保存到ConfigMap，文件名可以作为key，value就是整个文件的内容，多个配置文件可以放入同一个ConfigMap。</p>\n</li>\n<li>\n<p>在Pod里将ConfigMap定义为特殊的Volume作为挂载，在Pod被调度到某个具体Node上，ConfigMap里的配置文件就会被自动还原到本地目录，然后映射到Pod里指定的配置目录，这样用户的程序就可以无感知地读取配置。</p>\n</li>\n<li>\n<p>在ConfigMap发生修改后，Kubernetes会重新获取ConfigMap的内容，并且在目标节点上更新对应的文件。</p>\n</li>\n</ul>\n<h4 id=\"secret\">Secret</h4>\n<p>Secret也用于解决应用配置的问题，不过解决的是对敏感配置的问题，如数据库密码、token等，同时Secret中的数据要求以BASE64编码格式加密存放。</p>\n<h3 id=\"应用运维问题\">应用运维问题</h3>\n<p>通过Kubernetes对Deployment的一些sepc状态，实现自动扩缩容的机制，如：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-YAML\" data-lang=\"YAML\"><span style=\"color:#ff79c6\">kind</span>: HorizontalPodAutoscalar\n<span style=\"color:#ff79c6\">spec</span>:\n  <span style=\"color:#ff79c6\">maxReplicas</span>: <span style=\"color:#bd93f9\">10</span>\n  <span style=\"color:#ff79c6\">minReplicas</span>: <span style=\"color:#bd93f9\">1</span>\n  <span style=\"color:#ff79c6\">scaleTraget</span>: \n    <span style=\"color:#ff79c6\">kind</span>: Deployment\n    <span style=\"color:#ff79c6\">name</span>: apache\n  <span style=\"color:#ff79c6\">targetCPUUtilizationPercentage</span>: <span style=\"color:#bd93f9\">90</span>\n\n</code></pre></div><p>张总张总张总这里可以的只，这是一个名为apache的Deployment的Pod的副本，但这些Pod副本的利用率值超过90%时，会触发自动动态扩容，限定副本的数量为1～10。</p>\n<p>以上是一种HPA（Horizontal Pod Autoscaler）机制，实现水平扩缩容。同时还有VPA（Vertiacal Pod Autoscaler）Pod垂直自动扩缩容，根据容器资源使用率自动推测并设置Pod合理的CPU和内存的需求指标，从而更加精确地调度Pod，提升运维自动化水平。</p>\n<h3 id=\"存储类\">存储类</h3>\n<p>存储类对象主要包括：Volume、Persistent Volume、PVC和StorageClass</p>\n<h4 id=\"volume\">Volume</h4>\n<p>首先，Kubernetes中的Volume定义在Pod上，被一个Pod和多个容器挂载到具体的目录下：其次Kubernetes中的Volume与Pod的生命周期相同，但与容器的生命周期不相关。</p>\n<p>同时Volume也有一些丰富的类型，提供容器使用，如临时目录、宿主机目录、共享存储等：</p>\n<ol>\n<li>\n<p>emptyDir：用于Pod分配到Node时创建，初始内存为空。</p>\n</li>\n<li>\n<p>hostPath：为Pod上挂载宿主机上的文件和目录，用于一些日志文件持久化等，因为不同的Node具有相同配置的Pod，会因为宿主机目录和文件有所不同导致对volume访问的结果不同。</p>\n</li>\n<li>\n<p>公有云Volume</p>\n</li>\n<li>\n<p>其他类型Volume</p>\n</li>\n</ol>\n<h3 id=\"动态存储管理\">动态存储管理</h3>\n<p>Volume属于静态管理的存储，因此动态存储管理出现：PV（Persistent Volume）、StorageClass、PVC。</p>\n<p>PV表示由系统动态创建的（dynamically provisioned）的一个存储卷，可以理解成Kubernetes集群中某个网络存储对应的一块存储，与Volume，但不同在于PV不是定义在Pod上的，而是独立于Pod之外定义。</p>\n<p>而Kubernetes支持的存储系统有很多种，那么系统怎么知道从哪个存储系统中创建生命规格的PV存储卷？这就是涉及StorageClass和PVC，StorageClass用于描述存储系统的特征，而PVC（PV Claim）用于表明申请的PV规格。这里不去过多赘述。</p>\n<h3 id=\"安全类\">安全类</h3>\n<p>Kubernetes中的用户主要有两类：普通用户和运维人员，开发的Pod应用需要通过API Server查询、创建以及管理其他相关资源对象，所以这类用户才是关键用户。因此，Kubernetes设计了Service Account资源对象，为Pod提供必要的身份认证，同时带来基于角色访问控制权限系统——RBAC（Role-Based Access Control）。</p>\n<p>通过Service Acount所处的namespace，可以访问相对应namespace的Pod，同时Service Account通过Secret来保存对应的用户（应用）身份凭证，包含CA根证书（ca.crt）和签名后的Token。API Server通过接受到的Token来确定Service Account身份。</p>\n<p>当容器创建的时候，Kubernets会将对应的Secret对象中的身份信息（token等）持久化到容器固定位置，但容器里的用户进程通过Kubernetes提供的客户端API进行访问API Server，这些API会自动读取这些身份信息文件，并将附加HTTPS请求中传递给API Server实现身份认证逻辑。在身份认证通过后，就涉及授权的问题，这就是RBAC解决的问题。</p>\n<p>这里也不去过多赘述Role、ClusterRole、RoleBinding等概念，之后会详细讲。</p>\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li>\n<p>《Kubernetes权威指南》</p>\n</li>\n<li>\n<p><a href=\"https://kubernetes.io/zh/\">https://kubernetes.io/zh/</a></p>\n</li>\n<li>\n<p><a href=\"https://cloudnative.to/\">https://cloudnative.to/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.servicemesher.com/istio-handbook/concepts/overview.html\">https://www.servicemesher.com/istio-handbook/concepts/overview.html</a></p>\n</li>\n<li>\n<p><a href=\"https://jimmysong.io/awesome-cloud-native/\">https://jimmysong.io/awesome-cloud-native/</a></p>\n</li>\n<li>\n<p><a href=\"https://edu.aliyun.com/roadmap/cloudnative?from=timeline\">https://edu.aliyun.com/roadmap/cloudnative?from=timeline</a></p>\n</li>\n<li>\n<p><a href=\"https://jimmysong.io/blog/microservice-reading-notes/\">https://jimmysong.io/blog/microservice-reading-notes/</a></p>\n</li>\n</ul>\n\n\n                \n\n                <hr>\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Datadog Agent部署\">&larr;\n                            Previous Post</a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/post/algorithm/%E7%AE%97%E6%B3%950-base-suan-fa-base/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"算法(0)-base\">Next\n                            Post &rarr;</a>\n                    </li>\n                    \n                </ul>\n                \n\n            </div>\n\n            \n            \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n            \n\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                            算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/post/cloudnative/kubernetes-基础-kubernetes-ji-chu/index.html b/public/post/cloudnative/kubernetes-基础-kubernetes-ji-chu/index.html
--- a/public/post/cloudnative/kubernetes-基础-kubernetes-ji-chu/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/post/cloudnative/kubernetes-基础-kubernetes-ji-chu/index.html	(date 1694095063360)
@@ -815,7 +815,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/tags/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Tags | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/tags/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n         \t\n                \n\n\n            </div>\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/tags/index.html b/public/tags/index.html
--- a/public/tags/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/tags/index.html	(date 1694095063385)
@@ -288,7 +288,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/top/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"\" />\n    <meta property=\"og:title\" content=\"\" />\n    <meta property=\"twitter:title\" content=\"\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Tops | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/top/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n         \t\n                \n\n\n            </div>\n            \n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                \n                \n                <section>\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5><a href=\"/tags/\">FEATURED TAGS</a></h5>\n                    <div class=\"tags\">\n                        \n                        \n                        \n                        \n                        \n                        <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                        </a>\n                        \n                        \n                    </div>\n                </section>\n                \n\n                \n                \n                <section>\n                    <hr>\n                    <h5>FRIENDS</h5>\n                    <ul class=\"list-inline\">\n                        \n                        <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n                        \n                    </ul>\n                </section>\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/top/index.html b/public/top/index.html
--- a/public/top/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/top/index.html	(date 1694095063380)
@@ -288,7 +288,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
Index: public/tags/cloud-native/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en-us\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    \n    <meta property=\"og:site_name\" content=\"EdgarDing Blog\">\n    <meta property=\"og:type\" content=\"article\">\n\n    \n    <meta property=\"og:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\">\n    <meta property=\"twitter:image\" content=\"http://www.edgarding.cn/img/home-bg-main.jpg\" />\n    \n\n    \n    <meta name=\"title\" content=\"Cloud Native\" />\n    <meta property=\"og:title\" content=\"Cloud Native\" />\n    <meta property=\"twitter:title\" content=\"Cloud Native\" />\n    \n\n    \n    <meta name=\"description\" content=\"一天又一天\">\n    <meta property=\"og:description\" content=\"一天又一天\" />\n    <meta property=\"twitter:description\" content=\"一天又一天\" />\n    \n\n    \n    <meta property=\"twitter:card\" content=\"summary\" />\n    \n    \n\n    <meta name=\"keyword\"  content=\"Edgarding, 博客, 个人网站, 互联网, Web, 云原生, PaaS, Istio, Kubernetes, 微服务, Microservice\">\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n\n    <title>Cloud Native | EdgarDing 的博客 | One day One day</title>\n\n    <link rel=\"canonical\" href=\"/tags/cloud-native/\">\n\n    \n    \n    \n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/hugo-theme-cleanwhite.min.css\">\n\n    \n    <link rel=\"stylesheet\" href=\"/css/zanshang.css\">\n\n    \n    <link href=\"https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.1/css/all.css\" rel=\"stylesheet\" type=\"text/css\">\n\n    \n    \n\n    \n    <script src=\"/js/jquery.min.js\"></script>\n\n    \n    <script src=\"/js/bootstrap.min.js\"></script>\n\n    \n    <script src=\"/js/hux-blog.min.js\"></script>\n\n    \n    \n\n</head>\n\n\n\n\n<nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n\n    <div class=\"container-fluid\">\n        \n        <div class=\"navbar-header page-scroll\">\n            <button type=\"button\" class=\"navbar-toggle\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\">EdgarDing Blog</a>\n        </div>\n\n        \n        \n        <div id=\"huxblog_navbar\">\n            <div class=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/\">All Posts</a>\n                    </li>\n                    \n                        \n                        <li>\n                            <a href=\"/categories/cloud-native\">cloud-native</a>\n                        </li>\n                        \n                        <li>\n                            <a href=\"/categories/%E7%AE%97%E6%B3%95\">算法</a>\n                        </li>\n                        \n                    \n                    \n\t\t    \n                        <li><a href=\"/top/archive/\">ARCHIVE</a></li>\n                    \n                        <li><a href=\"/top/about/\">ABOUT</a></li>\n                    \n\n                    \n\t\t    <li>\n                        <a href=\"/search\"><i class=\"fa fa-search\"></i></a>\n\t\t    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        \n    </div>\n    \n</nav>\n<script>\n    \n    \n    \n    var $body   = document.body;\n    var $toggle = document.querySelector('.navbar-toggle');\n    var $navbar = document.querySelector('#huxblog_navbar');\n    var $collapse = document.querySelector('.navbar-collapse');\n\n    $toggle.addEventListener('click', handleMagic)\n    function handleMagic(e){\n        if ($navbar.className.indexOf('in') > 0) {\n        \n            $navbar.className = \" \";\n            \n            setTimeout(function(){\n                \n                if($navbar.className.indexOf('in') < 0) {\n                    $collapse.style.height = \"0px\"\n                }\n            },400)\n        }else{\n        \n            $collapse.style.height = \"auto\"\n            $navbar.className += \" in\";\n        }\n    }\n</script>\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/home-bg-main.jpg')\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 \">\n                <div class=\"site-heading\">\n                    <h1>EdgarDing Blog </h1>\n                    \n\t\t    <span class=\"subheading\">You Only Live Once.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n  \n<div class=\"container\">\n    <div class=\"row\">\n        \n        \n   \t    <div class=\"\n            col-lg-8 col-lg-offset-1\n            col-md-8 col-md-offset-1\n            col-sm-12\n            col-xs-12\n            post-container\n        \">\n            \n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/\">\n        <h2 class=\"post-title\">\n            Kubernetes-基础\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Kubernetes-基础 2021/09/14 前言 由于有段时间没接触Kubernetes，最近面试运维开发的时候又经常问到，因此重新体系的入门下Kuberne\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Friday, September 17, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n<div class=\"post-preview\">\n    <a href=\"http://www.edgarding.cn/post/cloudnative/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/\">\n        <h2 class=\"post-title\">\n            Datadog Agent部署\n        </h2>\n\t\n        <div class=\"post-content-preview\">\n\t\n            Datadog Agent 部署 Datadog Cluster Agent提供了一种简化的集中式方法来收集集群级别的监视数据。通过充当API服务器和基于节点的代理之间的代理，群集代理有助于减轻\n       \n        </div>\n    </a>\n    <p class=\"post-meta\">\n    \n        Posted by EdgarDing Blog on Tuesday, September 14, 2021\n        \n        \n    \n    </p>\n\n</div>\n<hr>\n\n\n            \n\n\n\n       \t</div>\n        \n\n<div class=\"\n    col-lg-3 col-lg-offset-0\n    col-md-3 col-md-offset-0\n    col-sm-12\n    col-xs-12\n    sidebar-container\n\">\n    \n\t\n    <section class=\"visible-md visible-lg\">\n\t\n        <div class=\"short-about\">\n            \n            <a href=\"/top/about\">\n               <img src=\"/img/edgarding.jpeg\" alt=\"avatar\" style=\"cursor: pointer\" />\n            </a>\n            \n            \n                <p>Rookie ... You Only Live Once. Do Not Go Gentle Into That Good Night.</p>\n            \n           \n           <ul class=\"list-inline\">\n               \n               <li>\n                   <a href=\"mailto:edgarding97@gmail.com\">\n                      <span class=\"fa-stack fa-lg\">\n                          <i class=\"fa fa-circle fa-stack-2x\"></i>\n                          <i class=\"fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                      </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n               \n               \n               \n               \n            \n            \n               \n               \n               \n               <li>\n                   <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                       <span class=\"fa-stack fa-lg\">\n                           <i class=\"fas fa-circle fa-stack-2x\"></i>\n                           <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                       </span>\n                   </a>\n               </li>\n               \n               \n                </ul>\n            </div>\n    </section>\n\t\n    \n    \n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FEATURED TAGS</h5>\n        <div class=\"tags\">\n            \n            \n               \n            \n               \n                    <a href=\"/tags/%E7%AE%97%E6%B3%95\" title=\"算法\">\n                        算法\n                    </a>\n               \n            \n        </div>\n    </section>\n    \n\n    \n    \n    <section>\n        <hr class=\"hidden-sm hidden-xs\">\n        <h5>FRIENDS</h5>\n        <ul class=\"list-inline\">\n            \n            <li><a target=\"_blank\" href=\"https://fortuna7.top\">oneday oneday 老博客</a></li>\n            \n        </ul>\n    </section>\n    \n    \n</div>\n\n\t</div>\n</div>\n\n\n\n\n\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <ul class=\"list-inline text-center\">                  \n                    \n                    <li>\n                        <a href=\"mailto:edgarding97@gmail.com\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fas fa-envelope fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t           \n                    \n                    \n                    \n                    \n\n\t\t            \n                    \n                    \n                    <li>\n                        <a target=\"_blank\" href=\"https://github.com/EdgarDing77\">\n                            <span class=\"fa-stack fa-lg\">\n                                <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                <i class=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                            </span>\n                        </a>\n                    </li>\n\t\t            \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n            \n            \n            <li>\n                <a target=\"_blank\" href=\"https://www.instagram.com/edgarding7/\">\n                    <span class=\"fa-stack fa-lg\">\n                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                        <i class=\"fab fa-instagram fa-stack-1x fa-inverse\"></i>\n                    </span>\n                </a>\n            </li>\n            \n            \n           \n             </ul>\n\t\t<p class=\"copyright text-muted\">\n                    Copyright &copy; EdgarDing Blog 2022\n                    <br>\n                    <a href=\"https://themes.gohugo.io/hugo-theme-cleanwhite\">CleanWhite Hugo Theme</a> by <a href=\"https://zhaohuabing.com\">Huabing</a>\n                    \n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n\n\n\n<script>\n    function loadAsync(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n\n\n\n\n\n<script>\n    \n    if($('#tag_cloud').length !== 0){\n        loadAsync(\"/js/jquery.tagcloud.js\",function(){\n            $.fn.tagcloud.defaults = {\n                \n                color: {start: '#bbbbee', end: '#0085a1'},\n            };\n            $('#tag_cloud a').tagcloud();\n        })\n    }\n</script>\n\n\n<script>\n    loadAsync(\"https://cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js\", function(){\n        var $nav = document.querySelector(\"nav\");\n        if($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n\n\n\n\n\n\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        \n        \n        \n        \n            _containerSelector = 'div.post-container'\n        \n\n        \n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        \n        $(selector).html('')\n\n        \n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    \n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    \n\n\n    loadAsync(\"\\/js\\/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n\n\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/tags/cloud-native/index.html b/public/tags/cloud-native/index.html
--- a/public/tags/cloud-native/index.html	(revision ac95446518ef6f8874fdfdd0da5985099d99229c)
+++ b/public/tags/cloud-native/index.html	(date 1694095063409)
@@ -410,7 +410,7 @@
            
              </ul>
 		<p class="copyright text-muted">
-                    Copyright &copy; EdgarDing Blog 2022
+                    Copyright &copy; EdgarDing Blog 2023
                     <br>
                     <a href="https://themes.gohugo.io/hugo-theme-cleanwhite">CleanWhite Hugo Theme</a> by <a href="https://zhaohuabing.com">Huabing</a>
                     
