[{"author":null,"categories":null,"content":null,"date":1646056467,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":14100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1646056467,"objectID":"54a3438dcf2ede991837c0bfb95cbcbd","permalink":"http://www.edgarding.cn/post/2021/spring%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86-spring-he-xin-gai-nian-shu-li/","publishdate":"2022-02-28T13:54:27.716Z","readingtime":28,"relpermalink":"/post/2021/spring%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86-spring-he-xin-gai-nian-shu-li/","section":"post","summary":"Spring核心概念梳理 Introduction 针对Spring的几个核心概念进行梳理。 SpringBoot框架的启动流程与相应注解。 IOC与AOP两大Sprin","tags":["Spring"],"title":"Spring核心概念梳理","type":"post","url":"/post/2021/spring%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86-spring-he-xin-gai-nian-shu-li/","weight":0,"wordcount":14008},{"author":null,"categories":["算法"],"content":null,"date":1642165685,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1642165685,"objectID":"f02ec4e9e3f951d52d6bdb09cacb95db","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/","publishdate":"2022-01-14T13:08:05.725Z","readingtime":20,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/","section":"post","summary":"算法(4)-动态规划 Introduction **「What」**动态规划（Dynamic Programming，DP），动态规划是一种过把原问题分解为相对简单的子","tags":["算法"],"title":"算法(4)-动态规划","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%954-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-suan-fa-4-dong-tai-gui-hua/","weight":0,"wordcount":9953},{"author":null,"categories":["算法"],"content":null,"date":1641727828,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":11400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1641727828,"objectID":"d7f30c32fb298f83cc77160be7d0ce4b","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/","publishdate":"2022-01-09T11:30:28.707Z","readingtime":23,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/","section":"post","summary":"算法(3)-二叉树 Introduction 「What」每个结点至多有两个分支（即不存在分支度大于2）的树结构。通常分支被称为“左子树”和“右子树”，分支具有左右次","tags":["算法"],"title":"算法(3)-二叉树","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%953-%E4%BA%8C%E5%8F%89%E6%A0%91-suan-fa-3-er-cha-shu/","weight":0,"wordcount":11331},{"author":null,"categories":["算法"],"content":null,"date":1641309326,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1641309326,"objectID":"064b6a116a24d4cfbe71c51d943ea61d","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/","publishdate":"2022-01-04T15:15:26.676Z","readingtime":15,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/","section":"post","summary":"算法(2)-链表 Introduction 「What」链表是一种递归的数据结构，它或者为NULL，或者指向一个节点(node)的引用，该节点含有一个元素和指向另一条","tags":["算法"],"title":"算法(2)-链表","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%952-%E9%93%BE%E8%A1%A8-suan-fa-2-lian-biao/","weight":0,"wordcount":7124},{"author":null,"categories":["算法"],"content":null,"date":1641309266,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1641309266,"objectID":"398c4853e0747c51547093fc9b2ad1f7","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/","publishdate":"2022-01-04T15:14:26.21Z","readingtime":8,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/","section":"post","summary":"算法(1)-栈与队列 Introduction 栈与队列特点： 栈stack：LIFO后进先出 队列queue：FIFO先进先出 API定义： public interface Queue\u0026lt;Item\u0026gt; implements Iterable\u0026lt;Item\u0026gt; { void enqueue(Item item); Item dequeue(); boolean isEmpty(); int size();","tags":["算法"],"title":"算法(1)-栈和队列","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%951-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97-suan-fa-1-zhan-he-dui-lie/","weight":0,"wordcount":3589},{"author":null,"categories":["算法"],"content":null,"date":1637156359,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1637156359,"objectID":"07a582b8cb24b88e5c7e6957b2bf790e","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%950-base-suan-fa-base/","publishdate":"2021-11-17T13:39:19.18Z","readingtime":19,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%950-base-suan-fa-base/","section":"post","summary":"算法(0)-base Introduction 该文主要总结一些有关算法的基础，其具体的分类等在之后进行，这也是对自己刷题这么久来的一次系统化整理。该篇主要进行一些前","tags":["算法"],"title":"算法(0)-base","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%950-base-suan-fa-base/","weight":0,"wordcount":9275},{"author":null,"categories":null,"content":null,"date":1631910616,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1631910616,"objectID":"54bac3df1a0cd9c13779c4a4dcc6af7b","permalink":"http://www.edgarding.cn/post/2021/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/","publishdate":"2021-09-17T20:30:16.198Z","readingtime":21,"relpermalink":"/post/2021/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/","section":"post","summary":"Kubernetes-基础 2021/09/14 前言 由于有段时间没接触Kubernetes，最近面试运维开发的时候又经常问到，因此重新体系的入门下Kuberne","tags":["Cloud Native"],"title":"Kubernetes-基础","type":"post","url":"/post/2021/kubernetes-%E5%9F%BA%E7%A1%80-kubernetes-ji-chu/","weight":0,"wordcount":10341},{"author":null,"categories":null,"content":null,"date":1631641635,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1631641635,"objectID":"72dca4fa356fbdd36c02565baddbeb91","permalink":"http://www.edgarding.cn/post/2021/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/","publishdate":"2021-09-14T17:47:15.454Z","readingtime":8,"relpermalink":"/post/2021/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/","section":"post","summary":"Datadog Agent 部署 Datadog Cluster Agent提供了一种简化的集中式方法来收集集群级别的监视数据。通过充当API服务器和基于节点的代理之间的代理，群集代理有助于减轻","tags":["Cloud Native"],"title":"Datadog Agent部署","type":"post","url":"/post/2021/datadog-agent%E9%83%A8%E7%BD%B2-datadogagent-bu-shu/","weight":0,"wordcount":3580},{"author":null,"categories":["算法"],"content":null,"date":1631095414,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1631095414,"objectID":"1d8b8ba231e8eb8bce159cf40631ea99","permalink":"http://www.edgarding.cn/post/2021/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/","publishdate":"2021-09-08T10:03:34.356Z","readingtime":5,"relpermalink":"/post/2021/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/","section":"post","summary":"算法-排序 Introduction 以下为自己整理总结的常用排序算法与实现。 时间复杂度一次完整的计算：http://discrete.gr/complexity/ 基","tags":["算法"],"title":"算法-排序","type":"post","url":"/post/2021/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F-pai-xu-suan-fa/","weight":0,"wordcount":2481},{"author":null,"categories":null,"content":null,"date":1602946550,"description":"","dir":"post/2021/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1602946550,"objectID":"c054b8d4024f18ede9651fb787436563","permalink":"http://www.edgarding.cn/post/2021/springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","publishdate":"2020-10-17T14:55:50Z","readingtime":10,"relpermalink":"/post/2021/springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","section":"post","summary":"SpringBoot 核心源码分析 convention over configuration 约定优于配置 SprinBoot 核心特性：约定优于配置 举一个具体一点的例子，这个理念我们其实一直都在遵循并使用，比如我们在 MVC 项目的开发中会","tags":["Spring"],"title":"SpringBoot核心源码分析","type":"post","url":"/post/2021/springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-springboot%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","weight":0,"wordcount":4608},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"http://www.edgarding.cn/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"http://www.edgarding.cn/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"OneDay OneDay  You Only Live Once.\n Do not go gentle into that good night, Old age should burn and rave at close of day; Rage, rage against the dying of the light.\nThough wise men at their end know dark is right, Because their words had forked no lightning they Do not go gentle into that good night.\nGood men, the last wave by, crying how bright Their frail deeds might have danced in a green bay, Rage, rage against the dying of the light.","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":174},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"top/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"104f9431647fd5dcb14e8d0947747fa9","permalink":"http://www.edgarding.cn/top/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/archive/","section":"top","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/top/archive/","weight":0,"wordcount":0}]